[{"figure_path": "https://arxiv.org/html/2503.20286/x1.png", "caption": "Figure 1: Overview of the environmental selection in the TensorMOEA/D algorithm. Left: Pseudocode of the algorithm. Right: Tensor dataflow of module (1) and module (2). The upper part of the right figure shows the overall tensor dataflow for modules (1) and (2), while the lower part presents the batch calculation tensor dataflow, with module (1) on the left and module (2) on the right.", "description": "Figure 1 illustrates the environmental selection process within the TensorMOEA/D algorithm, a tensorized version of MOEA/D designed for GPU acceleration. The left side presents the algorithm's pseudocode, outlining the steps involved. The right side shows the data flow using tensors, a multi-dimensional array, enhancing parallel processing on GPUs. The upper part provides a high-level view of the data flow across modules (1) and (2), while the lower section details the batch-wise computation within each module. This visualization clarifies how the algorithm handles data, facilitating parallel computation for faster processing.", "section": "III. TENSORIZATION METHODOLOGY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x2.png", "caption": "Figure 2: The seamless transformation of the tensorized non-dominated sorting from pseudocode (Left) to Python code (Right).", "description": "This figure demonstrates the straightforward translation of the tensorized non-dominated sorting algorithm from its pseudocode representation into actual Python code.  The left side shows the pseudocode, which outlines the algorithm's steps in a high-level, conceptual manner. The right side presents the equivalent Python code, showing how the pseudocode concepts translate into executable instructions using PyTorch. This direct correspondence highlights the ease with which the tensorization methodology facilitates the efficient implementation of EMO algorithms on GPU hardware.", "section": "III. TENSORIZATION METHODOLOGY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x3.png", "caption": "(a)", "description": "Comparative acceleration performance of NSGA-III, MOEA/D, and HypE with their tensorized counterparts on CPU and GPU platforms across varying population sizes.  The plots show the average runtime per generation for each algorithm and platform combination.  The speedups achieved on the GPU compared to the CPU are also indicated, highlighting the significant performance gains of the tensorized versions.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x4.png", "caption": "(b)", "description": "This figure presents the comparative acceleration performance of the MOEA/D algorithm and its tensorized counterpart across varying population sizes.  The plot shows the average runtime per generation for both the original MOEA/D algorithm running on a CPU and its tensorized version (TensorMOEA/D) running on a GPU. The x-axis represents the population size (n), while the y-axis represents the average runtime per generation (in milliseconds).  The figure illustrates the significant speedup achieved by TensorMOEA/D on the GPU, especially as the population size increases.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x5.png", "caption": "(c)", "description": "This figure shows the final results obtained by four different algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA) on the MoHalfcheetah benchmark problem.  It visualizes the Pareto front, displaying the achieved trade-offs between the two conflicting objectives of the benchmark: forward velocity (f1) and control cost (f2).  The plot allows for a comparison of the performance of each algorithm in terms of the distribution and quality of the solutions along the Pareto front.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x6.png", "caption": "(d)", "description": "The graph presents the runtime per generation for the MOEA/D algorithm.  It compares the performance of the standard MOEA/D algorithm (CPU) and its Tensorized counterpart (GPU) across a range of increasing population sizes. The purpose is to demonstrate the significant acceleration achieved by Tensorization on a GPU, showing how the execution time changes as the population grows.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x7.png", "caption": "(e)", "description": "The graph displays the expected utility (EU) metric across generations for the MoHopper robot control task.  The EU metric reflects the performance of different algorithms in finding high-quality solutions (those close to the Pareto front). Each line represents a different algorithm: TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and a random search baseline. Observing the trends helps assess how effectively each algorithm balances exploration and exploitation of the search space to produce good solutions.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x8.png", "caption": "(f)", "description": "This figure visualizes the final results obtained by four different algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA) on the MoHopper robot control task. Each point in the scatter plot represents a Pareto optimal solution found by the corresponding algorithm. The x-axis represents the first objective function (forward reward), and the y-axis represents the second objective function (height). This visualization allows for a comparison of the performance of different algorithms in terms of both convergence (closeness to the Pareto front) and diversity (spread of solutions). The plot helps in understanding which algorithm is better at finding high-quality solutions and exploring the trade-off space between the two objectives.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x9.png", "caption": "Figure 3: Comparative acceleration performance of NSGA-III, MOEA/D, and HypE with their tensorized counterparts on CPU and GPU platforms across varying population sizes and problem dimension.", "description": "This figure displays a comparison of the performance of three evolutionary multiobjective optimization (EMO) algorithms (NSGA-III, MOEA/D, and HypE) and their tensorized versions.  The comparison is done on both CPU and GPU platforms. Two sets of experiments are performed, one varying the population size (n) while keeping problem dimension (d) constant and the other varying the problem dimension (d) while keeping the population size (n) constant.  The plots show the average runtime per generation for each algorithm and platform. Speedup factors, indicating the improvement of the tensorized version compared to the non-tensorized version, are calculated and displayed on the plots, showcasing the acceleration provided by the tensorization process on GPU platforms.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x10.png", "caption": "(a) HV on MoHalfcheetah", "description": "This figure displays the hypervolume (HV) performance of four different multiobjective optimization algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA) and a random search (RS) baseline, across three distinct multiobjective robot control tasks from the MoRobtrol benchmark: MoHalfcheetah, MoHopper, and MoWalker2d.  Each subplot shows the HV achieved over the course of 100 generations.  The MoHalfcheetah subplot (a) shows HV progression for the MoHalfcheetah robot control task.  The MoHopper subplot (d) displays HV progression for the MoHopper robot control task. The MoWalker2d subplot (g) presents HV progression for the MoWalker2d robot control task.  Additional subplots (b, e, h) show the expected utility (EU) for each algorithm and task respectively, providing another perspective on solution quality, and subplots (c, f, i) visually represent the final Pareto fronts obtained by the algorithms on the three tasks. The figures aim to compare the effectiveness of different algorithms in solving complex multiobjective control problems in simulation.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x11.png", "caption": "(b) EU on MoHalfcheetah", "description": "The figure shows the expected utility (EU) metric for the MoHalfcheetah robot control task over the course of 100 generations.  The EU metric provides a measure of the overall performance and diversity of the generated solutions. A higher EU value indicates better performance. The plot likely shows the EU values for different algorithms (likely including NSGA-III, MOEA/D, HypE, and potentially TensorRVEA and a random search baseline) tested on the MoHalfcheetah environment, allowing for a comparison of the algorithms' effectiveness in achieving both high-quality and diverse solutions for this specific robot control task. ", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x12.png", "caption": "(c) Final results on MoHalfcheetah", "description": "The figure shows the final Pareto front obtained for the MoHalfcheetah task after the optimization process.  It displays the distribution of non-dominated solutions across two objectives, providing a visual representation of the trade-offs achieved between the objectives. The plot typically shows the final solutions obtained by different algorithms, allowing for a comparison of their performance in terms of convergence and diversity.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x13.png", "caption": "(d) HV on MoHopper", "description": "This figure shows the hypervolume (HV) performance of the Tensorized Multiobjective Evolutionary Optimization (EMO) algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA) on the MoHopper benchmark problem over 100 generations.  Hypervolume is a performance indicator that measures the volume of the objective space dominated by a set of non-dominated solutions.  A higher hypervolume value typically indicates a better set of solutions with greater diversity and convergence toward the Pareto front.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x14.png", "caption": "(e) EU on MoHopper", "description": "The figure shows a graph illustrating the expected utility (EU) metric over generations for the MoHopper robot control task. The EU metric quantifies the quality of the obtained solutions, considering multiple conflicting objectives.  It represents a balance between the diversity of solutions and their proximity to the ideal solution. The graph likely displays the EU values calculated for each generation of the evolutionary algorithm applied to the MoHopper task, enabling an assessment of the algorithm's progress over time and its effectiveness in exploring the solution space.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x15.png", "caption": "(f) Final results on MoHopper", "description": "This figure visualizes the final Pareto front obtained from the MoHopper experiment. It shows the distribution of the solutions in the objective space, specifically highlighting the trade-off between the two objectives: forward reward (f1) and control cost (f2). The plot allows for a visual assessment of the algorithm's ability to find a diverse set of high-quality solutions that represent a good balance between maximizing forward reward and minimizing control cost. The spread and distribution of points indicate the diversity of solutions found, while their proximity to the ideal point suggests the algorithm's effectiveness in convergence. By observing the distribution pattern, we can qualitatively infer the effectiveness of the algorithm in navigating the trade-off between competing objectives.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x16.png", "caption": "(g) HV on MoWalker2d", "description": "This figure presents a graph showing the hypervolume (HV) performance of four different multiobjective optimization algorithms on the MoWalker2d robot control task over 100 generations.  Hypervolume is a metric used to measure the quality of a Pareto front, representing the volume of the objective space dominated by the obtained solutions.  A higher HV value indicates better algorithm performance. The four algorithms compared are TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA.  The plot allows for comparison of the HV achieved by each algorithm across generations.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x17.png", "caption": "(h) EU on MoWalker2d", "description": "This figure shows the expected utility (EU) metric for the MoWalker2d robot control task across different generations. The EU metric quantifies the quality of solutions considering both their convergence and diversity. In this specific benchmark, MoWalker2d involves controlling a bipedal robot to maximize its forward velocity while minimizing the energy consumed. The graph plots the EU value over generations, illustrating how the algorithm's performance evolves as it iteratively generates new solutions.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x18.png", "caption": "(i) Final results on MoWalker2d", "description": "This figure visualizes the final Pareto front obtained by four different multiobjective optimization algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA) and a random search baseline, applied to the MoWalker2d problem in the MoRobtrol benchmark suite.  The plot shows the distribution of non-dominated solutions in the objective space, revealing the trade-off between objectives. Each point represents a solution, and the algorithms' performance can be evaluated by analyzing the spread, convergence, and overall quality of their respective solution sets compared to the random search baseline.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x19.png", "caption": "Figure 4: Comparative performance (HV, EU, and visualization of final results) of TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and random search (RS) across varying problems: MoHalfcheetah (390D), MoHopper (243D), and MoWalker2d (390D). Note: Higher values for all metrics indicate better performance.", "description": "Figure 4 presents a comparative analysis of five multiobjective optimization algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and Random Search) applied to three different robot control problems: MoHalfcheetah, MoHopper, and MoWalker2d.  The performance of each algorithm is evaluated using three metrics: Hypervolume (HV), which measures the size of the Pareto front; Expected Utility (EU), which quantifies the overall quality of the solutions; and a visualization of the final, non-dominated solutions.  The dimensionality (D) of each problem is specified in the caption (e.g., 390D for MoHalfcheetah). The results are shown in terms of graphs and scatter plots.  Higher values for HV and EU indicate superior algorithm performance.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x20.png", "caption": "(a) HV on MoPusher", "description": "This figure presents a graph showing the hypervolume (HV) performance of different evolutionary multiobjective optimization (EMO) algorithms on the MoPusher task within the MoRobtrol benchmark.  The x-axis represents the generation number, and the y-axis represents the hypervolume value.  Multiple lines are displayed, each representing a different EMO algorithm: TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and a random search baseline (RS). The hypervolume (HV) is a metric that quantifies the size of the objective space dominated by a set of non-dominated solutions; a higher HV value indicates better performance.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x21.png", "caption": "(b) EU on MoPusher", "description": "The figure shows the Expected Utility (EU) metric plotted against the generation number for the MoPusher task in the MoRobtrol benchmark.  EU is a performance indicator that reflects the balance between convergence and diversity of the obtained solutions, providing a measure of solution quality.  The graph likely compares the EU values achieved by different multiobjective optimization (EMO) algorithms (such as TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and random search (RS)) over a series of generations, indicating the progress of each algorithm in finding high-quality, diverse solutions for the multiobjective robot control problem. A higher EU value generally suggests better performance.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x22.png", "caption": "(c) Final results on MoPusher", "description": "This figure visualizes the final Pareto front obtained from the MoPusher experiment, showing the distribution of solutions in the objective space after the optimization process completes.  The x-axis represents the first objective, and the y-axis represents the second objective. Each point represents a non-dominated solution found by the algorithm, illustrating the trade-off between the two objectives. The shape and density of the points provide insights into the algorithm's performance and the nature of the multi-objective optimization problem itself.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x23.png", "caption": "(d) HV on MoHumanoid", "description": "This figure shows the hypervolume (HV) performance of the TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and Random Search (RS) algorithms on the MoHumanoid task over 100 generations.  The hypervolume is a performance metric that quantifies the volume of the objective space dominated by a set of non-dominated solutions. A larger hypervolume indicates better performance in terms of both convergence (closeness to the Pareto front) and diversity (spread of the solutions across the Pareto front). The graph allows for a comparison of the performance of the different algorithms in finding a set of non-dominated solutions for a complex robot control task.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x24.png", "caption": "(e) EU on MoHumanoid", "description": "This figure shows the expected utility (EU) metric over generations for the MoHumanoid task. The EU metric is used to evaluate the quality of the solutions obtained.  Higher EU values indicate better solutions.  Different EMO algorithms are plotted (TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and Random Search), allowing for a comparison of their performance on this complex multiobjective robot control task.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x25.png", "caption": "(f) Final results on MoHumanoid", "description": "This figure visualizes the final Pareto front obtained after running the TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and Random Search algorithms on the MoHumanoid benchmark problem from the MoRobtrol test suite.  The plot shows the distribution of non-dominated solutions in the objective space, allowing for a visual comparison of the performance of each algorithm in terms of convergence (closeness to the ideal solution) and diversity (spread of solutions). The x-axis and y-axis likely represent two of the multiple objectives considered in the MoHumanoid control problem, which might include measures like forward velocity, energy consumption, or stability.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x26.png", "caption": "(g) HV on MoHumanoid-s", "description": "This figure shows the hypervolume (HV) performance of the Tensorized NSGA-III, Tensorized MOEA/D, Tensorized HypE, Tensorized RVEA, and a random search (RS) algorithm over generations for the MoHumanoid-s task within the MoRobtrol benchmark.  Hypervolume is a performance metric that measures the volume of the objective space dominated by the obtained nondominated solutions. A higher hypervolume indicates better performance, with more nondominated solutions and a wider distribution across the objective space.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x27.png", "caption": "(h) EU on MoHumanoid-s", "description": "This figure shows the expected utility (EU) metric for the MoHumanoid-s problem across different generations. The EU metric measures the expected utility of a set of solutions, reflecting their quality and diversity. It helps evaluate the overall performance of different multiobjective optimization algorithms by considering both convergence and diversity of the obtained solutions. The graph likely presents the EU values calculated for each generation, showing how the algorithm's performance improves over time in terms of solution quality and spread across the objective space.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x28.png", "caption": "(i) Final results on MoHumanoid-s", "description": "This figure visualizes the final Pareto front obtained from different multiobjective optimization algorithms on the MoHumanoid-s task.  It shows the distribution of non-dominated solutions in the objective space, providing insights into the algorithms' effectiveness in finding diverse and high-quality solutions for this complex, high-dimensional robot control problem.  The plot likely shows the trade-off between different objectives, such as energy efficiency and control cost, achieved by the algorithms.  The algorithms being compared would be specified in the paper's figure legend. ", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x29.png", "caption": "Figure 5: Comparative performance (HV, EU, and visualization of final results) of TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and random search (RS) across varying problems: MoPusher (503D), MoHumanoid (4209D), and MoHumanoid-s (4209D). Note: Higher values for all metrics indicate better performance.", "description": "Figure 5 presents a comparative analysis of five algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and Random Search) across three complex multi-objective robot control problems: MoPusher (503 decision variables), MoHumanoid (4209 decision variables), and MoHumanoid-s (4209 decision variables).  The performance of each algorithm is evaluated using three key metrics: Hypervolume (HV), Expected Utility (EU), and a visualization of the final Pareto front.  Higher values for HV and EU indicate superior performance, representing better convergence to the Pareto front and a more diverse set of solutions. The visualization provides a graphical representation of the distribution of non-dominated solutions obtained by each algorithm, offering insights into the algorithms' ability to find diverse and well-distributed solutions.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x30.png", "caption": "(a) HV on MoSwimmer", "description": "The figure shows the hypervolume (HV) performance of four different multiobjective optimization algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA) and a random search baseline (RS) over 100 generations on the MoSwimmer task from the MoRobtrol benchmark.  Hypervolume is a performance indicator that measures the size of the objective space dominated by the obtained solutions. A higher hypervolume indicates better performance in terms of both convergence to the Pareto front and diversity of solutions.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x31.png", "caption": "(b) EU on MoSwimmer", "description": "The figure shows a graph illustrating the expected utility (EU) metric over generations for the MoSwimmer robot control task.  The EU metric quantifies the overall performance of the algorithm by considering multiple, potentially conflicting objectives. The graph displays the EU values calculated over the course of the optimization process (number of generations) for various algorithms, allowing a comparison of their performance in achieving a balance across these objectives for the specific MoSwimmer problem.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x32.png", "caption": "(c) Final results on MoSwimmer", "description": "This figure visualizes the final Pareto front obtained by five different algorithms on the MoSwimmer task of the MoRobtrol benchmark.  The algorithms include TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and a random search baseline.  The plot shows the distribution of non-dominated solutions in the objective space, allowing for a visual comparison of the performance of each algorithm in terms of both convergence (closeness to the ideal solution) and diversity (spread of solutions).", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x33.png", "caption": "(d) HV on MoIDP", "description": "This figure shows the hypervolume (HV) performance of the Tensorized NSGA-III, Tensorized MOEA/D, Tensorized HypE, Tensorized RVEA, and random search algorithms on the MoIDP (Modified Inverted Double Pendulum) task within the MoRobtrol benchmark.  The hypervolume metric quantifies the volume of the objective space dominated by the obtained Pareto front. A higher hypervolume indicates better performance, signifying that the algorithm has found a larger and more diverse set of optimal solutions.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x34.png", "caption": "(e) EU on MoIDP", "description": "This figure displays the expected utility (EU) metric over generations for the Inverted Double Pendulum (MoIDP) task in the multiobjective robot control benchmark.  EU is a performance indicator reflecting the quality of the obtained Pareto front. The plot shows the EU values for four different multiobjective optimization algorithms: TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA, as well as a random search baseline.  The x-axis represents the generation number, and the y-axis shows the EU value. The higher the EU value, the better the algorithm's performance in this task.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x35.png", "caption": "(f) Final results on MoIDP", "description": "This figure visualizes the final Pareto front obtained by five different algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and Random Search) after optimization on the MoIDP (Modified Inverted Double Pendulum) problem from the MoRobtrol benchmark.  It shows the distribution of non-dominated solutions in the objective space, allowing for a comparison of algorithm performance in terms of convergence (closeness to the ideal solution) and diversity (spread of solutions across the Pareto front). Each point represents a different non-dominated solution, with its position indicating the values of the objective functions.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x36.png", "caption": "(g) HV on MoReacher", "description": "This figure displays the hypervolume (HV) values over generations for the MoReacher task in the multiobjective robot control benchmark.  Hypervolume is a performance indicator in multi-objective optimization that represents the volume of the objective space dominated by the obtained solutions.  The plot shows how the HV changes over the course of the optimization process, indicating the algorithm's ability to find high-quality and diverse solutions.  The data is likely presented to compare the performance of different evolutionary multiobjective optimization algorithms on this specific task.  Higher HV values typically signify better performance.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/x37.png", "caption": "(h) EU on MoReacher", "description": "This figure shows the expected utility (EU) metric for the MoReacher problem across different generations. The EU metric quantifies the balance between exploration and exploitation, and its higher values indicate superior performance. The figure displays EU values calculated for multiple runs of different evolutionary multiobjective optimization (EMO) algorithms, providing a comparison of their performance on this specific robot control task.  It helps in assessing how effectively each algorithm balances the conflicting objectives inherent in the MoReacher problem.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/x38.png", "caption": "(i) Final results on MoReacher", "description": "This figure shows the final results obtained by four different multiobjective evolutionary algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA) and a random search method (RS) for the MoReacher task.  The plot visualizes the Pareto front approximation generated by each method.  It is intended to allow comparison of the algorithms' performance based on the diversity and distribution of the non-dominated solutions found for this particular multiobjective robot control problem. The axes represent the objective functions for MoReacher.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/extracted/6313558/figures/halfcheetah.png", "caption": "Figure 6: Comparative performance (HV, EU, and visualization of final results) of TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and random search (RS) across varying problems: MoSwimmer (178D), MoIDP (161D), and MoReacher (226D). Note: Higher values for all metrics indicate better performance.", "description": "Figure 6 presents a comparative analysis of five multi-objective optimization algorithms, including three tensorized versions (TensorNSGA-III, TensorMOEA/D, TensorHypE), TensorRVEA, and a random search baseline (RS).  The algorithms' performance is evaluated across three distinct multiobjective robot control problems: MoSwimmer (178 decision variables), MoIDP (161 decision variables), and MoReacher (226 decision variables).  The evaluation metrics used are hypervolume (HV), expected utility (EU), and visualizations of the final Pareto fronts.  Higher values of HV and EU signify superior algorithm performance.  The visualizations provide a qualitative assessment of the algorithms' ability to discover diverse and well-distributed solutions.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/extracted/6313558/figures/hopper.png", "caption": "(a) MoHalfcheetah", "description": "The figure presents a comparative analysis of the performance of four different evolutionary multiobjective optimization (EMO) algorithms on the MoHalfcheetah benchmark task. The algorithms compared are TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA.  The performance is evaluated using three metrics: Hypervolume (HV), Expected Utility (EU), and a visualization of the final Pareto front.  The plots show the HV and EU values over the course of 100 generations, providing insights into convergence speed and solution quality. The visualizations of final results offer a visual comparison of the distribution and quality of the Pareto optimal solutions obtained by each algorithm.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/extracted/6313558/figures/swimmer.png", "caption": "(b) MoHopper", "description": "Figure 4(b) displays the expected utility (EU) metric for the MoHopper multiobjective robot control task across 100 generations.  The EU metric measures the overall utility of the obtained solutions, considering conflicting objectives.  The plot shows the EU values over time for four different algorithms: TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA. A random search (RS) baseline is also included.  The EU is calculated using a weighted sum of the individual objectives (velocity, height, and control cost), each weighted differently to balance the importance of each objective in the overall performance score.  The figure allows for comparison of the effectiveness of the tensorized EMO algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA) in balancing these competing objectives compared to a simple random search approach.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/extracted/6313558/figures/MoIDP.png", "caption": "(c) MoSwimmer", "description": "Figure 4(c) shows the final Pareto front obtained by four different algorithms (TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA) and a random search on the MoSwimmer problem. The plot displays the objective function values (f1 and f2) for each solution found by the algorithms.  The Pareto front represents the set of non-dominated solutions, meaning there is no solution that is superior to any other solution in all objective functions simultaneously. The plot helps to compare the performance of the different algorithms and visualization of the final non-dominated solutions, showing how effectively each algorithm explores the objective space and identifies optimal solutions.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/extracted/6313558/figures/walker2d.png", "caption": "(d) MoIDP", "description": "Figure 4(d) presents the hypervolume (HV) performance of the TensorMOEA/D algorithm on the MoIDP (Inverted Double Pendulum) benchmark task within the MoRobtrol suite over 100 generations.  The MoIDP problem involves balancing two often-conflicting objectives, specifically the distance penalty and speed penalty, during a simulated inverted double pendulum swing. The graph showcases the algorithm's ability to explore and exploit the objective space to identify a set of high-quality, non-dominated solutions (approximating the Pareto front). The algorithm's convergence towards high-quality solutions can be visually assessed by observing the trend of HV over time.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/extracted/6313558/figures/pusher.png", "caption": "(e) MoWalker2d", "description": "Figure 4(e) shows the hypervolume (HV) performance of four different multiobjective evolutionary algorithms (MOEAs) \u2013 TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA \u2013 and a random search (RS) baseline,  evaluated on the MoWalker2d task from the MoRobtrol benchmark.  The x-axis represents the generation number, indicating the progress of the optimization over time, and the y-axis shows the HV value achieved by each algorithm at each generation.  A higher HV indicates a better-performing algorithm.  The graph illustrates how these algorithms' HV values change over generations, providing insights into their optimization progress and relative performance on this specific multiobjective robot control problem.", "section": "VI. EXPERIMENTAL STUDY"}, {"figure_path": "https://arxiv.org/html/2503.20286/extracted/6313558/figures/reacher.png", "caption": "(f) MoPusher", "description": "This figure displays the results for the MoPusher task within the MoRobtrol benchmark.  The MoPusher task involves a robot manipulating an object towards a target location, resulting in a multi-objective optimization problem.  The figure likely visualizes the Pareto front, showing the trade-off between various objectives.  The objectives would likely include minimizing the distance between the manipulated object and the target, minimizing the control cost applied by the robot, and possibly other metrics such as time taken to reach the goal. Each point on the Pareto front represents a different solution achieving a balance between these conflicting objectives. Different algorithms and/or hyperparameters may produce different Pareto fronts with varying spreads and convergences, illustrating their performances.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/extracted/6313558/figures/humanoid.png", "caption": "(g) MoReacher", "description": "This figure shows the comparative performance of four different multiobjective optimization algorithms and a random search method on the MoReacher task within the MoRobtrol benchmark.  The algorithms are TensorNSGA-III, TensorMOEA/D, TensorHypE, and TensorRVEA. The plot displays hypervolume (HV) values over generations, expected utility (EU) over generations, and a final visualization of the Pareto front for each algorithm.  It allows for a comparison of each algorithm's convergence speed, solution quality, and the distribution of solutions obtained.", "section": "V. MULTIOBJECTIVE ROBOT CONTROL BENCHMARK"}, {"figure_path": "https://arxiv.org/html/2503.20286/extracted/6313558/figures/humannoidstandup.png", "caption": "(h) MoHumanoid", "description": "Figure 4(h) shows the expected utility (EU) metric over generations for the MoHumanoid task.  The EU metric reflects the overall performance, considering both convergence and diversity of obtained solutions. The plot compares the performance of four algorithms: TensorNSGA-III, TensorMOEA/D, TensorHypE, TensorRVEA, and random search (RS). The x-axis represents the generation number, while the y-axis shows the EU value.  Higher EU values indicate better performance.", "section": "VI. EXPERIMENTAL STUDY"}]