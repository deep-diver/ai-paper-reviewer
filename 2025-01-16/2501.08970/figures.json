[{"figure_path": "https://arxiv.org/html/2501.08970/x1.png", "caption": "Figure 1: Practical Example of TCME\u00a0in Damage Monitoring: TCME\u00a0can be used to monitor potential damage to business space while preserving privacy. The system, utilizing a pre-agreed model and prompt, analyzes camera recordings. It is restricted to output only \"YES\" if significant damage is detected, ensuring minimal intrusion.", "description": "This figure illustrates a practical application of Trusted Capable Model Environments (TCMEs) in damage monitoring for a business space.  A pre-agreed machine learning model analyzes camera recordings, providing a binary output: \"YES\" if significant damage is detected, and \"NO\" otherwise.  This ensures privacy by avoiding continuous monitoring and minimizing intrusion.  Only the landlord and tenant are notified if damage is detected. The model receives only the daily recordings, and the output constraints restrict the response to a simple 'yes' or 'no'.", "section": "4. Examples"}, {"figure_path": "https://arxiv.org/html/2501.08970/x2.png", "caption": "Figure 2: TCME can be used to perform auditing of private code and models that are deployed in the TEE and participate in the \u2018attestation\u2019 that includes private components.", "description": "Figure 2 illustrates how a Trusted Capable Model Environment (TCME) can be utilized to audit private code and models within a Trusted Execution Environment (TEE) during the attestation process.  The diagram showcases a scenario where a TCME, employing a large, publicly available model, interacts with both the platform provider and a user's private model and code deployed within the TEE. The TCME leverages pre-agreed auditing prompts to assess the private components for compliance with specific constraints (e.g., absence of networking capabilities or discriminatory logic). The results from this TCME analysis are then used by the TEE to determine the overall attestation status.", "section": "4. Examples"}, {"figure_path": "https://arxiv.org/html/2501.08970/x3.png", "caption": "Figure 3: Graph coloring verification performed by Gemini-1.5-Flash. The model generally has a high precision (83%) and low recall (14%).", "description": "The figure shows the performance of the Gemini-1.5-Flash language model in verifying graph 3-colorings.  The model's predictions are evaluated against actual solutions, revealing a high precision (83%) but low recall (14%). This means that when the model predicts a coloring is correct, it is often right (high precision). However, it frequently misses correct colorings (low recall), indicating limitations in its ability to comprehensively identify valid solutions. The confusion matrix visually displays the counts of true positives, true negatives, false positives, and false negatives in the model's performance. ", "section": "5.2 Comparing with ZKPs"}]