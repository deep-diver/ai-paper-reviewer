[{"content": "| Category | sub-category | Representative Methods | Tasks | Verifier/Critic | Train-free |\n|---|---|---|---|---|---| \n| Repeat Sampling | Majority voting | CoT-SC (2023d) | Math, QA | self-consistency | \u2713 |\n|  |  | PROVE (2024) | Math | compiler | \u2713 |\n|  | Best-of-N | Cobbe et al. (2021) | Math | ORM | \u2717 |\n|  |  | DiVeRSe (2023c) | Math | PRM | \u2717 |\n| Self-correction | Human feedback | NL-EDIT (2021) | Semantic parsing | Human | \u2717 |\n|  |  | FBNET (2022) | Code | Human | \u2717 |\n|  | External tools | DrRepair (2020) | Code | compiler | \u2717 |\n|  |  | Self-debug (2024c) | Code | compiler | \u2713 |\n|  |  | CRITIC (2024) | Math, QA, Detoxifying | text-to-text APIs | \u2713 |\n|  | External models | REFINER (2024) | Math, Reason | critic model | \u2717 |\n|  |  | Shepherd (2023b) | QA | critic model | \u2717 |\n|  |  | Multiagent Debate (2023) | Math, Reason | multi-agent debate | \u2713 |\n|  |  | MAD (2024b) | Translation, Math | multi-agent debate | \u2713 |\n|  | Intrinsic feedback | Self-Refine (2023) | Math, Code, Controlled generation | self-critique | \u2713 |\n|  |  | Reflexion (2023) | QA | self-critique | \u2713 |\n|  |  | RCI (2023) | Code, QA | self-critique | \u2713 |\n| Tree Search | Uninformed search | ToT (2023) | Planing, Creative writing | self-critique | \u2713 |\n|  |  | Xie et al. (2023) | Math | self-critique | \u2713 |\n|  | Heuristic search | RAP (2023) | Planing, Math, Logical | self-critique | \u2713 |\n|  |  | TS-LLM (2024b) | Planing, Math, Logical | ORM | \u2717 |\n|  |  | rStar (2024) | Math, QA | multi-agent consistency | \u2713 |\n|  |  | ReST-MCTS* (2024a) | Math, QA | PRM | \u2717 |", "caption": "Table 1: Overview of search strategies.", "description": "This table provides a comprehensive overview of various search strategies employed in test-time reasoning within large language models (LLMs).  It categorizes methods into three main groups: repeated sampling, self-correction, and tree search, and further breaks down each category into subcategories based on their underlying mechanisms (e.g., majority voting, best-of-N sampling for repeated sampling).  For each method, the table lists representative papers, the tasks they are typically applied to, the type of verifier or critic used (if any), and whether the method requires additional training.", "section": "4 Test-time Reasoning for System-2 Thinking"}]