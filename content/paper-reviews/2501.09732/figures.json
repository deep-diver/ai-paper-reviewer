[{"figure_path": "https://arxiv.org/html/2501.09732/x1.png", "caption": "Figure 1: Inference scaling beyond increasing denoising steps. We demonstrate the performance with respect to FID \u2193bold-\u2193\\boldsymbol{\\downarrow}bold_\u2193, IS \u2191bold-\u2191\\boldsymbol{\\uparrow}bold_\u2191 on ImageNet, and CLIPScore \u2191bold-\u2191\\boldsymbol{\\uparrow}bold_\u2191, Aesthetic Score \u2191bold-\u2191\\boldsymbol{\\uparrow}bold_\u2191 on DrawBench. Our search framework exhibits substantial improvements in all settings over purely scaling NFEs with increasing denoising steps.", "description": "This figure displays the results of an experiment investigating inference-time scaling in diffusion models.  It compares the performance of simply increasing the number of function evaluations (NFEs) via denoising steps against a novel search framework for better noise candidates.  Four metrics are used to evaluate performance: Fr\u00e9chet Inception Distance (FID), Inception Score (IS), CLIPScore, and Aesthetic Score.  Lower FID values and higher IS, CLIPScore, and Aesthetic Score values indicate better image generation quality.  The results demonstrate that the search framework leads to significant performance improvements compared to simply increasing denoising steps, suggesting that a major source of efficiency lies in efficiently searching for good noise candidates instead of just solely relying on increasing the computational budget via more denoising steps. The improvement is observed on both ImageNet and DrawBench datasets.", "section": "1. Introduction"}, {"figure_path": "https://arxiv.org/html/2501.09732/x2.png", "caption": "Figure 2: Illustration of Search Algorithms. Left: Random Search selects the best sample according to the verifier score and rejects the rest. Center: Zero-Order Search samples N\ud835\udc41Nitalic_N candidates in the neighborhood of the pivot noise at each step, and selects the best one according to the verifier to continue the search from. Right: Search over Paths sample noises at intermediate sampling steps to add to current samples to expand the sampling trajectories, and select the best one to continue the search.", "description": "This figure illustrates three different search algorithms used to find better noise candidates during the sampling process of diffusion models.  Random Search randomly samples noise candidates and selects the one with the best verifier score. Zero-Order Search iteratively refines noise candidates by sampling from the neighborhood of a 'pivot' noise, choosing the best candidate at each step. Search over Paths samples noise at intermediate points in the diffusion process to explore alternative sampling trajectories.", "section": "3. How to Scale at Inference Time"}, {"figure_path": "https://arxiv.org/html/2501.09732/x5.png", "caption": "Figure 3: Performances of Oracle Verifiers. Random Search with FID and IS on ImageNet. Inference Compute is given by the total NFEs devoted to denoising steps and search; the starting points of all curves in each and the following figures denote only devoting NFEs to denoising steps and 0 NFEs in search.", "description": "This figure displays the results of experiments using oracle verifiers (FID and IS) on ImageNet with the Random Search algorithm.  The x-axis represents the total number of function evaluations (NFEs), which is the computational budget allocated to both denoising steps and the search process. The y-axis shows the performance metrics (FID and IS).  The starting points of each curve indicate the baseline performance achieved by only using the optimal number of NFEs for denoising steps (no NFEs devoted to the search). The curves demonstrate how performance improves as more NFEs are allocated to the search process.", "section": "3. How to Scale at Inference Time"}, {"figure_path": "https://arxiv.org/html/2501.09732/x13.png", "caption": "Figure 4: Performances of Supervised Verifiers. Random Search with CLIP and DINO on ImageNet across different classifier-free guidance weights. CLIP-ZeroShot refers to using the logits output by the CLIP zero-shot classifier formulated with Prompt Engineering, and DINO-LinearHead refers to using the pre-trained linear classifier provided by\u00a0Oquab et\u00a0al. [53].", "description": "This figure displays the performance of using CLIP and DINO as supervised verifiers for a random search method on the ImageNet dataset. The x-axis represents the inference compute (measured in number of function evaluations or NFEs), while the y-axis shows the Inception Score (IS). Different lines represent different classifier-free guidance (CFG) weights (1.0, 1.35, and 1.5). CLIP-ZeroShot uses the logits from CLIP's zero-shot classifier, created using prompt engineering, while DINO-LinearHead uses a pre-trained linear classifier from the DINO model. The graph showcases how the ImageNet model's performance improves with increasing inference compute when using supervised verifiers, illustrating inference-time scaling.", "section": "3.1. Search Verifiers"}, {"figure_path": "https://arxiv.org/html/2501.09732/x14.png", "caption": "Figure 5: Performances of Self-Supervised Verifiers. Left: correlation between CLIP and DINO feature similarity score and their classification logits; Right: Random Search with CLIP and DINO feature similarity score as verifiers across different classifier-free guidance weight.", "description": "This figure analyzes the effectiveness of self-supervised verifiers for inference-time scaling in diffusion models.  The left panel shows the strong correlation between the cosine similarity of CLIP/DINO features (comparing low-noise and final generated image features) and the classification logits produced by CLIP/DINO classifiers. This correlation justifies using feature similarity as a surrogate for classification logits, avoiding the need for explicit class labels. The right panel demonstrates the performance improvement achieved by using CLIP/DINO feature similarity scores in a Random Search framework across various classifier-free guidance (CFG) weights on an ImageNet classification task. The results highlight the efficacy of self-supervised methods, showing substantial performance gains from scaling inference compute using a search-based approach.", "section": "3.1. Search Verifiers"}, {"figure_path": "https://arxiv.org/html/2501.09732/x15.png", "caption": "Figure 6: Performances of Search Algorithms. We fix the verifier to be DINO-LinearHead and investigate the FID and IS of Zero-Order Search and Search over Paths on ImageNet. For each algorithm, we further demonstrate the relationship between N\ud835\udc41Nitalic_N and their performances.", "description": "This figure displays the performance of different search algorithms (Random Search, Zero-Order Search, and Search over Paths) used for improving the inference-time scaling of diffusion models.  The experiments were conducted on the ImageNet dataset, using the DINO-LinearHead verifier to evaluate the generated images.  The results are shown in terms of Fr\u00e9chet Inception Distance (FID) and Inception Score (IS).  The relationship between the performance of the algorithms and the hyperparameter N (the number of noise candidates or intermediate sampling steps) is investigated.  Lower FID values and higher IS values indicate better image quality.", "section": "3.2. Search Algorithms"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/sit_visuals/33_grid.png", "caption": "Figure 7: Visualizations of Scaling Behaviors. Each row is constructed as follows: left three: sampled with increasing NFEs in denoising steps; right four: sampled with increasing NFEs in search. First two rows are sampled from SiT-XL\u00a0[50] with DINO-LinearHead, third row is sampled from PixArt-\u03a3\u03a3\\Sigmaroman_\u03a3\u00a0[8] with Verifier Ensemble, and last two rows are sampled from FLUX-1.dev\u00a0[41] with Verifier Ensemble.", "description": "This figure visualizes the impact of scaling computation on diffusion model generation quality.  Each row shows samples generated from a different model (SiT-XL, PixArt-\u03a3, FLUX-1.dev) using two different strategies: increasing the number of function evaluations (NFEs) in denoising steps (left three images) and increasing the NFEs in search for better noises (right four images).  The first two rows use the SiT-XL model with a DINO-LinearHead verifier, while the third row utilizes the PixArt-\u03a3 model with a Verifier Ensemble, and the last two rows use the FLUX-1.dev model with a Verifier Ensemble. This demonstrates how increasing computational budget can improve generation quality in different ways.", "section": "Inference-Time Scaling in Text-to-Image"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/sit_visuals/89_grid.png", "caption": "Figure 8: Performances of Search with FLUX.1-dev at inference-time. We fix the search budget to be 3840384038403840 NFEs with random search, and demonstrate the relative performance gain (%) with generation without any search budget.", "description": "This figure showcases the performance improvements achieved by incorporating a search process into the inference stage of the FLUX-1-dev model, a cutting-edge text-to-image diffusion model.  The experiment uses a fixed search budget of 3840 NFEs (Number of Function Evaluations) with a random search strategy, and compares the results to model generations made without any search at all. The results are presented as percentage improvements across various evaluation metrics, including the aesthetic score, CLIP score, ImageReward score, and a combined Verifier Ensemble score. This provides a comprehensive assessment of how effectively the search method enhances the quality of generated images.", "section": "4. Analysis Results: Verifier-Task Alignment"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/sit_visuals/250_grid.png", "caption": "Figure 9: Scalability of search with FLUX.1-dev on DrawBench. We use random search with Verifier Ensemble to obtain the results, and demonstrate the relative performance gain (%) with generation without any search budget. Similar scaling behavior to ImageNet setting is observed across different metrics.", "description": "Figure 9 illustrates the scalability of the proposed inference-time scaling method using the FLUX-1-dev model on the DrawBench dataset.  The experiment uses random search with a Verifier Ensemble to evaluate performance.  The graph displays the relative improvement in various metrics (Aesthetic, CLIPScore, ImageReward, and LLM Grader) when using the search method compared to generation without any search.  The results show that the improvement is consistent across all four metrics, showcasing the scalability and effectiveness of the search method even with a more complex, multi-faceted dataset like DrawBench. The scaling behavior is similar to that observed earlier in experiments using the ImageNet dataset. This demonstrates the generalizability of the inference-time scaling framework across different datasets and metrics.", "section": "4. Analysis Results: Verifier-Task Alignment"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/sit_visuals/270_grid.png", "caption": "Figure 10: Performance of scaling compute for single search iteration. We use the SiT-XL model, fix the denoising budget to 250250250250 NFE, and demonstrate the performance differences with respect to the NFEs devoted to a single search iteration.", "description": "This figure shows how the number of function evaluations (NFEs) used in a single search iteration affects the performance of the SiT-XL diffusion model on the ImageNet dataset.  The denoising budget (the number of NFEs used in the denoising process) is held constant at 250.  The plot displays how different allocations of NFEs to the search process affect the model's final performance.  It shows that there are regions of optimal NFEs/iter, with diminishing returns when more NFEs/iter are used.  The results show different performance curves for different NFEs/iter values, helping to identify the most computationally efficient way to balance search and denoising.", "section": "5. Axes of Inference Compute Investment"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/sit_visuals/429_grid.png", "caption": "Figure 11: Performance of our search methods across different model sizes (SiT-{B,L,XL}) on ImageNet. We use the best set up for FID and IS separately. Left: ZO-4 with DINO-LinearHead.; Right: Random Search with DINO-LinearHead.", "description": "This figure demonstrates the effectiveness of inference-time scaling for different-sized diffusion models on the ImageNet dataset.  It compares the performance of two search methods (Zero-Order Search and Random Search) when applied to three different sizes of the SiT model (SiT-B, SiT-L, and SiT-XL). The performance metric used is the Frechet Inception Distance (FID) and the Inception Score (IS). For each model size, the plot shows how the FID and IS improve as the computation budget (measured in GFLOPs) allocated to the search process increases. The left panel shows the results obtained using Zero-Order Search (ZO-4) with a DINO-LinearHead verifier, and the right panel shows the results of Random Search with a DINO-LinearHead verifier. By comparing the performance across different model sizes and search methods, the figure helps to illustrate how effectively inference-time compute can be used to enhance the quality of images generated by diffusion models, particularly when resources are limited.", "section": "Inference-Time Scaling in Text-to-Image"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/sit_visuals/587_grid.png", "caption": "Figure 12: Performance of tuning additional parameters for algorithms.  Left: Zero-Order Search with step\nsizes \u03bb\ud835\udf06\\lambdaitalic_\u03bb; Right: Search Over Paths with lengths L\ud835\udc3fLitalic_L. We use SiT-XL and fix the verifier to be the classification logits from DINO.", "description": "This figure demonstrates the effect of tuning two hyperparameters on the performance of two different search algorithms used to improve the quality of samples generated by a diffusion model.  The left panel shows the impact of varying step sizes (\u03bb) in the Zero-Order Search algorithm on the FID (Fr\u00e9chet Inception Distance) and IS (Inception Score) metrics. The right panel illustrates how changing the path lengths (L) in the Search Over Paths algorithm affects these same metrics. Both experiments utilize the SiT-XL model and employ DINO classification logits as the verifier.  The results highlight the interplay between hyperparameter tuning, algorithm choice, and overall model performance.", "section": "3.2. Search Algorithms"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/sit_visuals/980_grid.png", "caption": "Figure 13: Performance of Random Search on ImageNet against DINO and CLIP classification logits. We use random search on the SiT-XL model and report FID, IS, Precision, and Recall.", "description": "This figure displays the results of applying random search on ImageNet using the SiT-XL model. The search process was guided by either DINO or CLIP classification logits. The figure presents four key metrics: FID (Fr\u00e9chet Inception Distance), IS (Inception Score), Precision, and Recall, which are evaluated to assess the quality and diversity of the generated images.  The x-axis likely represents increasing computational cost, as more samples are processed during the search, and the y-axis shows the corresponding metric scores. The plots visualize how these metrics change as the amount of computation allocated to the search is increased, showcasing the trade-off between computation cost and image quality.", "section": "3.1. Search Verifiers"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/flux_visuals/194_grid.jpg", "caption": "Figure 14: Comparison between Zero-Order and First-Order Search. We use the SiT-XL model and fix the verifier to be the DINO-LinearHead. The Inference Compute is aligned via the rough estimation of cost(backward) \u223csimilar-to\\sim\u223c 3\u00d7\\times\u00d7cost(forward).", "description": "This figure compares the performance of two search algorithms, Zero-Order Search and First-Order Search, used to improve the quality of samples generated by a diffusion model.  The SiT-XL model was used with the DINO-LinearHead verifier.  Zero-Order Search iteratively refines noise candidates based on verifier feedback, while First-Order Search uses the gradient of the verifier to guide the refinement. The x-axis represents the computational cost (in number of function evaluations), and the y-axis shows the resulting FID and IS scores. The comparison is made at approximately the same computational cost for both algorithms; the cost of the backward pass in First-Order Search is estimated to be roughly three times that of the forward pass.", "section": "3.2. Search Algorithms"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/flux_visuals/123_grid.jpg", "caption": "Figure 15: From Left to Right: Correlation of CLIP, DINO, and SigLIP feature similarity score with CLIPScore. All points are generated from FLUX.1-dev.", "description": "Figure 15 presents a correlation analysis between three self-supervised verifiers (CLIP, DINO, and SigLIP) and CLIPScore, a human-evaluated metric for image-text alignment, using samples generated by the FLUX-1-dev model. The figure displays the relationships using scatter plots to show how well the similarity scores calculated by each of the self-supervised verifiers aligns with human judgment (CLIPScore). This analysis helps to understand the biases of each verifier and how well they are aligned with human perception of the quality of generated images.", "section": "3.1 Search Verifiers"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/flux_visuals/126_grid.jpg", "caption": "Figure 16: The detailed prompt for evaluation with the LLM Grader.", "description": "This figure shows the detailed prompt used to instruct the large language model (LLM) grader on how to evaluate generated images.  The prompt outlines five key aspects to assess: Accuracy to Prompt, Creativity and Originality, Visual Quality and Realism, Consistency and Cohesion, and Emotional or Thematic Resonance.  For each aspect, the grader is instructed to provide a score from 0 to 10 and a brief justification.  Finally, the grader is asked to provide an overall weighted score reflecting the overall image quality.", "section": "4. Inference-Time Scaling in Text-to-Image"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/flux_visuals/149_grid.jpg", "caption": "Figure 17: \u201cloggerhead turtle\u201d (33)", "description": "This figure visualizes the impact of increasing inference-time compute on the quality of generated images. The left three images are generated by increasing the number of denoising steps while keeping the inference-time compute constant. The right three images are generated by increasing the inference-time compute through search, while maintaining a constant number of denoising steps.  The goal is to show that increasing computation via search can improve image quality beyond simply increasing the number of denoising steps.", "section": "E. More Visualizations on Scaling Behavior"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/flux_visuals/145_grid.jpg", "caption": "Figure 18: \u201cSulphur-crested cockatoo\u201d (89)", "description": "Figure 18 presents a series of images generated using the SIT-XL model depicting a Sulphur-crested cockatoo. The top row shows images generated by increasing the number of denoising steps in the diffusion process. This demonstrates the model's improvement in image quality as more computational resources are allocated. The bottom row showcases images generated using the proposed search framework, which iteratively refines noise candidates to enhance image quality with increased computational investment.  The improvement shown in the bottom row highlights the effectiveness of the search framework in improving the generation performance beyond simply increasing the number of denoising steps.", "section": "E. More Visualizations on Scaling Behavior"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/flux_visuals/183_grid.jpg", "caption": "Figure 19: \u201cSiberian husky\u201d (250)", "description": "Figure 19 displays six images of Siberian huskies generated using the SiT-XL model. The first three images were generated by increasing the number of denoising steps from 10 to 250, illustrating how the image quality improves with increased computational resources during the denoising process. The last three images were generated using Zero-Order Search with the DINO classification verifier, where the number of NFEs invested were increased from 450 to 6650.  This demonstrates the effect of the search process on image quality, highlighting that the quality further improves when increased computational resources are allocated to the noise search process during inference. ", "section": "E. More Visualizations on Scaling Behavior"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/flux_visuals/152_grid.jpg", "caption": "Figure 20: \u201cArctic wolf\u201d (270)", "description": "This figure visualizes the results of inference-time scaling experiments using the \"Arctic wolf\" prompt.  The images showcase the variations in generated images when increasing the number of function evaluations (NFEs) in the denoising process versus increasing NFEs through a search process for improved noise selection. The left three images are generated by simply increasing denoising steps; the right four images are produced using a search algorithm to find better noises for the sampling process. This comparison highlights the impact of the search method on image quality and diversity.", "section": "E. More Visualizations on Scaling Behavior"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/pixart_visuals/1_grid.jpg", "caption": "Figure 21: \u201cbaseball\u201d (429)", "description": "This figure shows six different images generated by a text-to-image model when prompted with the word \"baseball\".  The images demonstrate variations in style, perspective, and level of detail, highlighting the model's ability to generate multiple plausible interpretations of the prompt. Three images on the left are generated by simply increasing the number of denoising steps; and the three images on the right are generated by employing a search algorithm to identify better sampling noises in the diffusion process, demonstrating the effectiveness of the search method in improving the quality of the generated images.", "section": "E. More Visualizations on Scaling Behavior"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/pixart_visuals/3_grid.jpg", "caption": "Figure 22: \u201chammer\u201d (587)", "description": "This figure shows six different images generated by the FLUX-1.dev model using the Verifier Ensemble for the prompt 'hammer'.  The left three images show the result of using the standard denoising process with an increasing number of denoising steps (10, 20, and 250).  The right three images display the outputs of using the Zero-Order search method with increased inference-time compute (450, 1850, and 6650). This illustrates how increased computation during inference time, through search, can lead to improved image quality in diffusion models.", "section": "E. More Visualizations on Scaling Behavior"}, {"figure_path": "https://arxiv.org/html/2501.09732/extracted/6136690/figures/pixart_visuals/4_grid.jpg", "caption": "Figure 23: \u201cvolcano\u201d (980)", "description": "This figure shows six images generated by a text-to-image model using the prompt \"volcano\". The left three images demonstrate the visual results as the number of denoising steps increases (10, 20, 250). The right three images illustrate the impact of increasing inference-time compute through search using a zero-order search method with the DINO classifier as a verifier. This visualization demonstrates how the quality and detail of the generated image improve with both increased denoising steps and increased inference computation in the search process.", "section": "E. More Visualizations on Scaling Behavior"}]