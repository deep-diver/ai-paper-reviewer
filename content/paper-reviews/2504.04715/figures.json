[{"figure_path": "https://arxiv.org/html/2504.04715/x1.png", "caption": "Figure 1: Statistical power of model equality testing for the smaller model under quantization attack and the larger model under substitution attack.", "description": "This figure displays the statistical power of the model equality test.  The test is used to determine whether two models are the same.  It is evaluated under two attack scenarios: 1) A smaller model is substituted with a quantized version of the larger model, and 2) a cheaper model is randomly substituted for the advertised model with varying probability.  The x-axis represents the probability of substitution (from 0 to 1, with 1 meaning no substitution), and the y-axis shows the statistical power (from 0 to 1, with 1 meaning the test perfectly distinguishes between the models). The plot shows how the probability of correctly identifying substitution changes with different levels of substitution probability, revealing the limitations of the test when subtle or randomized substitutions are applied.  Different colored lines represent different model pairs.", "section": "4.1.3 Model equality testing (Gao et al., 2024)"}, {"figure_path": "https://arxiv.org/html/2504.04715/x2.png", "caption": "Figure 2: Benchmark Accuracy (y-axis) vs. Temperature (x-axis) on different models.", "description": "This figure shows the benchmark accuracy results for various LLMs at different temperatures. The x-axis represents the temperature parameter used during text generation, and the y-axis represents the accuracy achieved on various benchmarks (MMLU, GSM8K, MATH, GPQA).  Different lines represent different LLMs, illustrating how their performance varies across temperatures and across different benchmarks.", "section": "4.1 Text-output-based verification"}, {"figure_path": "https://arxiv.org/html/2504.04715/x3.png", "caption": "Figure 3: Log probability of generating first 20 shared tokens under greedy decoding for UltraChat Queries under different environment.", "description": "This figure visualizes the stability of log probabilities across different software (transformers and vLLM), hardware (A100 and H100 GPUs), and software versions when generating text using greedy decoding for UltraChat Queries.  It displays log probabilities for the first 20 tokens in two example generations, showing variations even under seemingly consistent conditions. This helps demonstrate the challenges of relying solely on log probability analysis for model verification due to inherent instability.", "section": "4.2 Log probability verification"}, {"figure_path": "https://arxiv.org/html/2504.04715/x4.png", "caption": "Figure 4: Log probability of generating first 20 shared tokens under greedy decoding for UltraChat Queries under different environment.", "description": "This figure displays the log probabilities for the first 20 tokens generated using greedy decoding on UltraChat queries.  The results are shown across multiple different environments to demonstrate the variability in log probabilities even under controlled conditions.  The environments vary across different versions of the inference frameworks (vLLM and Hugging Face Transformers), and different hardware configurations (A100 and H100 GPUs). This illustrates the challenges of relying solely on log probabilities for model verification, as even minor environmental differences can lead to significant variations in log probability values.", "section": "Log probability verification"}, {"figure_path": "https://arxiv.org/html/2504.04715/extracted/6340807/figure/seclm.png", "caption": "Figure 5: A screenshot of the API inference endpoint with TEE.", "description": "This figure displays a screenshot of an API inference endpoint that incorporates Trusted Execution Environments (TEEs).  The screenshot shows details about the endpoint's URL, measurement values for integrity verification, SSL public key, and attestation data. The attestation data includes cryptographic hashes and links to various files involved in the secure boot process, providing evidence of the endpoint's integrity and trustworthiness. The inclusion of these details demonstrates the enhanced security and transparency offered by using TEEs to verify the authenticity and integrity of the model running on the server.", "section": "Hardware-assisted verification: Trusted Execution Environment (TEE)"}]