[{"figure_path": "https://arxiv.org/html/2412.09283/x1.png", "caption": "Figure 1: Top: Comparison of the reconstruction-via-recaption results between\u00a0\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\\mathtt{InstanceCap}typewriter_InstanceCap\u00a0and state-of-the-art captioning methods for annotating the ground truth video.\u00a0\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\\mathtt{InstanceCap}typewriter_InstanceCap\u00a0produces results that more closely resemble the original video, showing greater detail fidelity (highlighted by the red circle). Bottom: The corresponding captions generated by\u00a0\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\\mathtt{InstanceCap}typewriter_InstanceCap\u00a0and others. Red denotes incorrect captions, blue represents ambiguous captions, and green indicates detailed and accurate descriptions of video. Specific visual hints are marked as A, B, and C for clarity.\nAll videos are generated using the same video generation product, Hailuo AI222https://hailuoai.com/video, which has robust prompt-following capabilities, clearly highlighting the effectiveness of\u00a0\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\\mathtt{InstanceCap}typewriter_InstanceCap.", "description": "This figure compares the video reconstruction results and generated captions using InstanceCap and other state-of-the-art methods. The top row shows the reconstructed videos, where InstanceCap's output more closely resembles the original video, especially highlighted details within red circles. The bottom row displays the captions generated by different methods, color-coded to indicate correctness (green), ambiguity (blue), and errors (red).  The videos were generated using Hailuo AI, chosen for its robust prompt-following capabilities to demonstrate the impact of InstanceCap's caption quality.", "section": "Introduction"}, {"figure_path": "https://arxiv.org/html/2412.09283/x2.png", "caption": "Figure 2: Overview of InstanceCap pipeline. Details of \u201cfrom dense prompts to structured phrases\u201d design are shown in Figure\u00a03.", "description": "This figure provides a high-level overview of the InstanceCap pipeline, illustrating the key stages involved in generating instance-aware structured captions. The pipeline begins with \"Prior Information,\" which includes details like object class and camera motion.  This information is then fed into the \"Auxiliary Model Cluster.\"  The cluster uses models like an object detector, SAM2 for instance segmentation, and tools for analyzing camera motion to process the input video.  These models help isolate \"Local Instances\" from the \"Global Videos,\" a key step in enhancing the fidelity of instance descriptions. The output of the auxiliary model cluster is then used to refine \"Dense prompts\" into \"Structured phrases\" using MLLMs. This process, further detailed in Figure 3, transforms complex video descriptions into concise yet precise instance-level captions.", "section": "3. Method"}, {"figure_path": "https://arxiv.org/html/2412.09283/x3.png", "caption": "Figure 3: Details on \u201cfrom dense prompts to structured phrases\u201d design. We propose an improved CoT pipeline with carefully designed information interactions (red arrow), which facilitates MLLMs to accurately capture instances with precise descriptions on attributes.", "description": "This figure details the \"from dense prompts to structured phrases\" design within the InstanceCap framework. It illustrates an enhanced Chain-of-Thought (CoT) pipeline that facilitates Multimodal Large Language Models (MLLMs) to accurately capture instances with precise descriptions. This pipeline leverages information interactions (highlighted by a red arrow) to guide MLLMs in generating detailed and precise descriptions of various attributes for each instance, such as appearance, actions and motion, and position.  The CoT interaction starts with a blurred background video derived from the original video.  Then it leverages global description and instance-specific prompts to generate descriptions of appearance and actions and motions. Finally combine these information with background details and camera movement obtained from global video to finalize the whole caption.", "section": "3. Method -> 3.1. InstanceCap"}, {"figure_path": "https://arxiv.org/html/2412.09283/x4.png", "caption": "Figure 4: \ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude85\ud835\ude92\ud835\ude8d\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude85\ud835\ude92\ud835\ude8d\\mathtt{InstanceVid}typewriter_InstanceVid\u00a0provides structured captions for videos in open-domain scenarios, featuring diverse instance, expansive scenes, precise and instance-aware captions, and video-generation-friendly durations.", "description": "InstanceVid features diverse instances, expansive scenes, and precise captions, making it suitable for open-domain video generation tasks. The dataset prioritizes short video durations (2-10 seconds) to align with typical open-source T2V model capabilities and the characteristics of OpenVid-1M.", "section": "3.2. InstanceVid"}, {"figure_path": "https://arxiv.org/html/2412.09283/x5.png", "caption": "Figure 5: High-level overview of\u00a0InstanceEnhancer, illustrating the data flow and the partitioning of stages. For a detailed implementation, refer to the supplemental materials, which provide an in-depth description of the enhancer pipeline design and the interdependencies between the stages.", "description": "InstanceEnhancer is a two-stage process that aligns prompts during inference. Stage A expands short prompts into detailed long prompts. Stages B(I) and B(II) use both versions to segment and enhance specific instances while preserving context.  The diagram illustrates this flow, showing the transition from short prompts to expanded prompts and how each stage contributes to the final structured caption.  It also highlights the use of Large Language Models (LLMs), along with a positive/negative lexicon, at different stages.", "section": "3.3. InstanceEnhancer"}, {"figure_path": "https://arxiv.org/html/2412.09283/x6.png", "caption": "Figure 6: Comparison on reconstruction-via-recaption between\u00a0\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\\mathtt{InstanceCap}typewriter_InstanceCap\u00a0and MiraData.\nCorresponding 3DVAE scores are also indicated.\nSimilar semantics shared between\u00a0\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\\mathtt{InstanceCap}typewriter_InstanceCap\u00a0and GT are indicated by red circles and lines.", "description": "This figure compares the reconstruction quality of video captions generated by InstanceCap and MiraData using a pre-trained T2V model, CogVideoX-5b.  Both methods generate captions from a ground truth video, which CogVideoX-5b then uses to generate new videos. These generated videos are compared to the ground truth video to assess how well the caption captured the original content.  Lower 3DVAE scores indicate better reconstruction quality. Red circles and lines highlight semantic details correctly captured by InstanceCap, showing closer alignment with the original video than MiraData.  InstanceCap retains details like \"glasses\", \"grey sweater\", and relative positions of people, showcasing improved fidelity and accuracy.", "section": "4.2. Comparison with SOTA caption models"}, {"figure_path": "https://arxiv.org/html/2412.09283/x7.png", "caption": "Figure 7: Visual comparison of\u00a0\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\\mathtt{InstanceCap}typewriter_InstanceCap\u00a0and Opensora on Single and Multiple Action Score. In terms of the dynamic degree of video generation, we show better consistency and enhanced multi-instance dynamic generation effect.", "description": "This figure visually compares the video generation results of InstanceCap and OpenSora. It includes examples of both single-action and multiple-action scenes.  InstanceCap demonstrates a greater ability to generate videos that reflect the dynamics and motion details present in the captions, especially in scenes with multiple moving instances. For instance, in the 'Single Action' example, InstanceCap correctly depicts a lion sprinting, showcasing a more accurate and dynamic representation of motion than OpenSora. In the 'Multiple Action' example, InstanceCap generates a video where both a fish swims and a turtle moves, effectively capturing the simultaneous actions described in the caption. This highlights InstanceCap's ability to handle complex, dynamic scenes involving multiple instances with distinct motions.", "section": "4.3. Text-to-video generation"}, {"figure_path": "https://arxiv.org/html/2412.09283/x8.png", "caption": "Figure 8: User study on instance detail and hallucination scores.\nOur instance-aware structured caption shows clear advantages compared to the coarse-structured MiraData\u00a0[9].", "description": "This figure presents the results of a user study comparing InstanceCap and MiraData [9] across two metrics: Instance Detail and Hallucination Scores. The x-axis represents the different captioning methods (InstanceCap and MiraData), while the y-axis represents the average score for each metric.  The bars show that InstanceCap consistently outperforms MiraData on both metrics, indicating that InstanceCap generates captions with more accurate details and fewer hallucinations.", "section": "4.2. Comparison with SOTA caption models"}, {"figure_path": "https://arxiv.org/html/2412.09283/x9.png", "caption": "Figure 9: \nVisual comparison of\u00a0\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\\mathtt{InstanceCap}typewriter_InstanceCap\u00a0and Open-Sora on instance-level attributes.\u00a0\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\\mathtt{InstanceCap}typewriter_InstanceCap\u00a0excels in precise instance detail fidelity and instruction-following capabilities, even with complex multi-instance and multi-attribute scenarios.", "description": "InstanceCap excels at preserving precise instance details and adhering to instructions, even in scenarios with multiple instances and attributes, as demonstrated in a visual comparison with Open-Sora on instance-level attributes.  For example, InstanceCap accurately generates the detail \"light brown bag\", a detail missed by Open-Sora.", "section": "4.3. Text-to-video generation"}, {"figure_path": "https://arxiv.org/html/2412.09283/x10.png", "caption": "Figure 10: (a) Ablation study on the effect of camera movement hints on the accuracy of MLLM labeling. (b) Impact of human-designed class hints on the details of instance labeling.", "description": "This figure illustrates the improvements of MLLM captions generated by adding two types of hints: camera movement hints and human-designed class hints. It includes two ablation studies (a and b). Ablation (a) shows that adding camera movement hints allows the generated caption to describe \"zoom in\", compared to the original caption that cannot capture camera movement. Ablation (b) shows that adding human-designed class hints enable MLLMs to give more detailed descriptions including \"watch\" and \"white hair\", compared to the original caption that merely describes \"denim shirt and jeans\".", "section": "4.4. Ablation Study"}, {"figure_path": "https://arxiv.org/html/2412.09283/x11.png", "caption": "Figure 11: (a) Comparison against the weak visual prompt for reconstruction-via-caption visualization on multi-instance targets. (b) Comparison against color screen backgrounds (red), which may negatively affect MLLM labeling performance.", "description": "This figure presents two ablation studies comparing InstanceCap with other visual prompting methods for video captioning. Part (a) shows InstanceCap's superiority over weak visual prompts (red circles and bounding boxes) in capturing details in a multi-instance scene (coach and players). Part (b) compares InstanceCap's blur background masking with the use of solid color (red) backgrounds for non-target occlusion. It demonstrates that blur backgrounds are more effective than solid colors in guiding MLLM annotation and reducing hallucination artifacts, enhancing instance detail fidelity and preserving visual consistency.", "section": "4.4. Ablation Study"}, {"figure_path": "https://arxiv.org/html/2412.09283/x12.png", "caption": "Figure S1: The detail of Positive/Negative Lexicon", "description": "This figure presents two lists of words: a Positive Lexicon and a Negative Lexicon. The Positive Lexicon includes words like \"kaleidoscopic, delicate, grand...\" that enhance the aesthetic quality of generated videos.  The Negative Lexicon includes words like \"dull, rough, harsh...\" that should be avoided as they detract from the aesthetic quality.", "section": "1. Positive/Negative Lexicon"}, {"figure_path": "https://arxiv.org/html/2412.09283/x13.png", "caption": "Figure S2: Detailed overview of the\u00a0InstanceEnhancer\u00a0pipeline. Example No.1 as shown in Figure\u00a0S9.", "description": "This figure provides a detailed overview of the InstanceEnhancer pipeline, a two-stage process for prompt alignment during inference.  Stage A focuses on short text expansion, where a short prompt is expanded into a more detailed, descriptive long prompt. Stage B consists of two sub-stages: B(I) involves instance segmentation, identifying and separating individual instances within the video content; and B(II) centers on structured caption generation, creating detailed descriptions of each identified instance's appearance, actions, position, and other relevant attributes, following the structure of the InstanceCap framework.  The pipeline leverages LLMs (Large Language Models) such as Gemini, Claude, GPT-40, and others, along with auxiliary tools like positive/negative lexicons, to enhance and refine the generated captions, ensuring they are detailed, vivid, contextually relevant, and aligned with user instructions.", "section": "4. Design of InstanceEnhancer"}, {"figure_path": "https://arxiv.org/html/2412.09283/x14.png", "caption": "Figure S3: Inference examples of Inseval.", "description": "This figure presents example prompts and responses used in the Inseval benchmark tests, covering Single and Multiple categories. Each example includes a sentence prompt and its expected response based on an instance's action, color, shape, texture, or specific detail.", "section": "Section 6. Inseval"}, {"figure_path": "https://arxiv.org/html/2412.09283/x15.png", "caption": "Figure S4: Visualization comparing open-source models and commercial models on prompts with poorer performance.", "description": "This figure provides a side-by-side visual comparison of video generation outputs from a commercial model (Hailuo AI) and an open-source model (CogVideoX-5b).  The prompts used are from the Inseval benchmark and focus on testing instance details, specifically across multiple object attributes like Shape and Detail. The comparison aims to showcase how different models handle more challenging, complex prompts, especially with multi-instance and multi-attribute scenarios.", "section": "7. Analysis on Commercial Products vs. Open-source Models"}, {"figure_path": "https://arxiv.org/html/2412.09283/x16.png", "caption": "Figure S5: System prompt of\u00a0\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\ud835\ude78\ud835\ude97\ud835\ude9c\ud835\ude9d\ud835\ude8a\ud835\ude97\ud835\ude8c\ud835\ude8e\ud835\ude72\ud835\ude8a\ud835\ude99\\mathtt{InstanceCap}typewriter_InstanceCap.", "description": "The prompt designed for InstanceCap, which guides the Large Language Model (LLM) to generate structured video descriptions. The prompt instructs the LLM to describe the appearance, actions, and attributes of instances in the video in detail, and to use specific, evocative vocabulary while avoiding negative or vague terms. The system prompt includes instructions for each of three tasks, such as: Describing Objects Appearances; Describing Objects' Actions and Behaviors; Use Fine Words to Describe.  The prompt also emphasizes the importance of following the structured format and notes some constraints for descriptions.", "section": "Supplementary Material / Section 2: Human-designed Class Hints"}, {"figure_path": "https://arxiv.org/html/2412.09283/x17.png", "caption": "Figure S6: Code of getting video temporal metadata.", "description": "This figure presents the Python code snippet used for extracting temporal metadata from videos. The function `load_video` takes the video path, maximum frame number, frames per second (fps), and a force_sample boolean as input. It returns uniformly sampled video frames, the time of each frame, and the total video duration.  The `build_video_prompt` function then uses these metadata to create an instruction prompt, informing the language model about the video duration, number of sampled frames, and their timestamps, to aid in generating temporally consistent captions.", "section": "5. Evaluation metrics for video reconstruction"}, {"figure_path": "https://arxiv.org/html/2412.09283/x18.png", "caption": "Figure S7: Prompt of camera movement.", "description": "This figure presents an example of Chain-of-Thought (CoT) prompting used to elicit camera movement information. The prompt includes instructions to deduce camera motion (static or dynamic) and infer the shooting angle (e.g., long distance, medium distance, overhead angle, POV) based on observed changes in video frames.  Degree adverbs (e.g., sharply, rapidly, slowly) should be used to give a detailed description of the camera movement and angle.", "section": "3.1. Instance\u0421\u0430\u0440"}, {"figure_path": "https://arxiv.org/html/2412.09283/x19.png", "caption": "Figure S8: Prompt of actions and motion.", "description": "This figure presents the Chain-of-Thought (CoT) prompts used to elicit descriptions of actions and motion from a large language model (LLM).  It is a two-step process.  The first step focuses on identifying any movement related to the target object, incorporating information from the global video description. The second step prompts the LLM to describe the motion in detail, using appropriate adjectives, and focusing solely on the target object's movement. It explicitly instructs the LLM to avoid speculation or descriptions of unrelated elements.", "section": "3. Prompt Design of Figure 3"}, {"figure_path": "https://arxiv.org/html/2412.09283/x20.png", "caption": "Figure S9: Designed example for LLMs.", "description": "This figure presents an example prompt designed for Large Language Models (LLMs) within the InstanceEnhancer pipeline. This pipeline enhances short text prompts into detailed, structured prompts suitable for video generation.  The example demonstrates how a short prompt like \"The astronaut is riding a horse.\" is expanded into a much longer and more descriptive prompt rich in visual details, character actions, and scene setting. This expanded prompt enables the LLM to generate a video that adheres more closely to the user's intent.", "section": "Section 4: Design of InstanceEnhancer"}, {"figure_path": "https://arxiv.org/html/2412.09283/x21.png", "caption": "Figure S10: Evaluation prompts of Inseval.", "description": "The figure presents the evaluation prompts designed for Inseval, categorized by single and multiple object scenarios, and covering dimensions such as Action, Color, Shape, Texture, and Detail. These prompts are designed to assess an LLM's ability to correctly identify and describe specific attributes of instances within generated videos.  The prompts use a Chain-of-Thought (CoT) structure with a multi-step question-answer format.  Variations in the prompts are introduced for different dimensions and object counts to thoroughly evaluate the model's capabilities.", "section": "6. Inseval"}, {"figure_path": "https://arxiv.org/html/2412.09283/x22.png", "caption": "Figure S11: Aligning prompt used during alignment with the open source model.", "description": "This figure presents a two-step prompting strategy designed to enhance the alignment of open-source text-to-video generation models with structured captions.  The first step involves summarizing the provided InstanceCap JSON into a continuous text paragraph, ensuring that all key details are retained. The second step focuses on refining the generated text to conform to a \"subject + attribute + position\" structure and using natural scene-setting phrases.  This process ensures the open-source model receives clear and comprehensive text input for enhanced video generation quality.", "section": "7. Analysis on Commercial Products vs. Open-source Models"}]