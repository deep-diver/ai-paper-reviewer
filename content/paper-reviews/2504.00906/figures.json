[{"figure_path": "https://arxiv.org/html/2504.00906/x1.png", "caption": "Figure 1: Agent S2 achieves new SOTA results (Success Rate) on computer use tasks on both 15-step and 50-step evaluation in OSWorld.", "description": "The bar chart compares the success rates of Agent S2 and several other state-of-the-art computer use agents on the OSWorld benchmark.  The benchmark involves completing computer use tasks within 15 and 50 steps. Agent S2 significantly outperforms all other agents on both the 15-step and 50-step evaluations, highlighting its superior performance in automating digital tasks.", "section": "1 Introduction"}, {"figure_path": "https://arxiv.org/html/2504.00906/extracted/6326309/assets/framework.png", "caption": "Figure 2: The Agent S2 framework. It composes generalist planning modules, Manager M\ud835\udc40Mitalic_M and Worker W\ud835\udc4aWitalic_W, with specialist grounding experts to complete complex, long-horizon computer use tasks. Please refer to Section\u00a03 for a detailed explanation.", "description": "Agent S2 is a compositional framework that uses both generalist and specialist modules to handle complex computer tasks that require long-term planning.  The figure shows the system's architecture.  The Manager (M) handles high-level planning, breaking down complex tasks into smaller sub-goals.  The Worker (W) executes these sub-goals, using specialist grounding experts (MoG) to accurately locate and interact with GUI elements.  The interaction between these modules is dynamic and iterative, allowing Agent S2 to adapt to changing circumstances and unexpected events.", "section": "Agent S2: Compositional Grounding and Planning for Computer Use"}, {"figure_path": "https://arxiv.org/html/2504.00906/extracted/6326309/assets/reactive_vs_proactive_planning.png", "caption": "Figure 3: Comparison between Reactive and Proactive Planning. Proactive planning re-evaluates and updates the remainder of the plan after every subtask, while reactive planning adheres to a fixed plan and only revises it in response to subtask failures.", "description": "This figure illustrates the core difference between reactive and proactive planning approaches in the context of hierarchical planning for computer use agents.  Reactive planning rigidly follows a pre-defined plan, only adjusting if a subtask fails.  In contrast, proactive planning dynamically updates the remaining plan after each completed subtask, allowing for adaptation to evolving observations and increased robustness in response to unforeseen circumstances.", "section": "3 Agent S2: Compositional Grounding and Planning for Computer Use"}, {"figure_path": "https://arxiv.org/html/2504.00906/x2.png", "caption": "Figure 4: Agent S2 attempts to use Visual Grounding Expert to select a paragraph, then self-corrects and uses Textual Grounding Expert for span selection. After completing the subgoal, it replans from the new state and starts working on a new subgoal.", "description": "Agent S2 initially tries to select a paragraph using the Visual Grounding Expert, but this attempt fails. It then self-corrects by switching to the Textual Grounding Expert, which successfully selects the desired span of text. Once this subgoal is achieved, Agent S2 proactively replan its actions, updating its internal state to reflect the successful completion of the subgoal and then proceeds to the next subgoal in its plan.", "section": "3.1 Mixture of Grounding"}, {"figure_path": "https://arxiv.org/html/2504.00906/x3.png", "caption": "Figure 5: Ablation study on Mixture of Grounding (MoG) and Proactive Hierarchical Planning (PHP).", "description": "This ablation study investigates the individual and combined effects of Mixture of Grounding (MoG) and Proactive Hierarchical Planning (PHP) on the success rate of Agent S2.  The graph displays success rates for different configurations: Agent S2 with both MoG and PHP, Agent S2 without MoG, Agent S2 without PHP, and several baseline agents (UI-TARS-72B-DPO, UI-TARS-7B-DPO, UGround-V1-7B, and Claude-3.7-Sonnet). The results show the performance gains achieved by incorporating both MoG and PHP, highlighting their importance for improved performance on 15-step and 50-step tasks.", "section": "4 Experiments"}, {"figure_path": "https://arxiv.org/html/2504.00906/x4.png", "caption": "Figure 6: 15-step performance of Agent S2 with different visual grounding models. Small open-sourced models can outperform large close-sourced reasoning models.", "description": "This figure presents a bar chart comparing the 15-step success rates of Agent S2 using different visual grounding models.  The results show that smaller, open-source models achieved higher success rates compared to larger, closed-source reasoning models. This highlights the potential advantage of leveraging smaller, more specialized models for specific tasks within a larger, compositional agent architecture.", "section": "4.3 Ablation Study"}, {"figure_path": "https://arxiv.org/html/2504.00906/x5.png", "caption": "Figure 7: Contributing factors of 15-step to 50-step scaling success.", "description": "This figure shows the breakdown of reasons why Agent S2, a computer-use agent, improves its performance when given more time steps (from 15 to 50).  The analysis focuses on successful cases and identifies four key contributing factors: Adaptive Navigation (exploring different ways to interact), Adaptive Interaction (trying different methods to achieve a goal), Backward Correction (correcting previous mistakes), and Task Complexity (inherent difficulty of tasks).  The percentages indicate the contribution of each factor to the overall improvement in success rate.", "section": "4.2 Main Results"}, {"figure_path": "https://arxiv.org/html/2504.00906/x6.png", "caption": "Figure 8: Failure categories on a subset of the OSWorld benchmark.", "description": "This figure shows a breakdown of the reasons why Agent S2 failed on a subset of tasks from the OSWorld benchmark.  It categorizes failures into several key areas, such as problems with the overall plan, issues with grounding (locating specific UI elements), difficulties interacting with elements, problems with navigation within the application, and tasks that were inherently infeasible to complete. The size of each category's slice reflects the proportion of failures attributed to that particular cause. This helps to identify and analyze the main challenges faced by the agent.", "section": "4.4 Error Analysis"}, {"figure_path": "https://arxiv.org/html/2504.00906/x7.png", "caption": "Figure 9: Agent S2 demonstrates textual grounding. The task instruction is: I think the last paragraph is redundant so I want to add strike-through on words in the last paragraph. Can you do this for me? Agent S2 intelligently utilizes the textual grounding expert to perform a precise word-level selection of text.", "description": "Agent S2 is tasked with adding strikethrough formatting to the last paragraph of a document.  The figure shows the agent's step-by-step process using textual grounding. Initially, it attempts visual grounding but self-corrects, demonstrating adaptive behavior.  It then leverages the textual grounding expert to precisely select the target words before applying the formatting. This highlights the system's ability to accurately identify and manipulate specific text within a document, showcasing its advanced grounding capabilities. The precise word selection is key, avoiding the limitations of selecting larger text blocks, demonstrating sophisticated text understanding.", "section": "3.1 Mixture of Grounding"}, {"figure_path": "https://arxiv.org/html/2504.00906/x8.png", "caption": "Figure 10: Agent S2 demonstrates structural grounding. The task instruction is: Add a new column named \u201cProfit\u201d and calculate the profit for each week by subtracting \u201cCOGS\u201d from \u201cSales\u201d in that column. Agent S2 adaptively interacts with the \u201cProfit\u201d column and chooses to use the structural grounding expert to perform cell-level operations.", "description": "Agent S2 is shown using structural grounding to add a new column named \"Profit\" to a spreadsheet.  The goal is to calculate profit for each week by subtracting the COGS (cost of goods sold) from the Sales figures. The figure visually shows the steps involved, highlighting how Agent S2 interacts with the spreadsheet cells at a low level. This involves using a specialized 'structural grounding expert' that understands spreadsheet structure to perform fine-grained actions within cells, such as entering formulas and dragging to fill in values.  The adaptive nature of Agent S2 is apparent, dynamically adjusting its actions based on the evolving state of the spreadsheet.  This illustrates Agent S2's ability to handle detailed, low-level operations within specific applications.", "section": "3.1 Mixture of Grounding"}, {"figure_path": "https://arxiv.org/html/2504.00906/x9.png", "caption": "Figure 11: Agent S2 demonstrates replanning. The task instruction is: Could you set the \u2018Dim screen when inactive\u2019 to off in settings? Even though the \u2018Dim screen when inactive\u2019 option is not found in verbatim, Agent S2 proactively replans and reasons to find the correct setting.", "description": "Agent S2 receives the instruction to disable the \"Dim screen when inactive\" setting in the system settings.  However, this exact setting name is not present in the user interface. The figure shows how Agent S2, using its proactive hierarchical planning, dynamically adjusts its plan. Initially, it attempts to locate the setting directly. Upon failure to find the verbatim setting, it re-evaluates the situation, exploring related settings (like screen brightness or power saving modes).  It revises its plan, identifying alternative options that achieve the user's intent. This process of replanning and exploration, illustrated through screenshots of the user interface, demonstrates Agent S2's adaptive behavior and problem-solving capabilities in uncertain environments.", "section": "F Case Studies on AndroidWorld"}, {"figure_path": "https://arxiv.org/html/2504.00906/x10.png", "caption": "Figure 12: Agent S2 on the WindowsAgentArena environment. The task instruction is: Create a shortcut on the Desktop for the folder named \u201dProjects\u201d that is located in the Documents folder. Name the shortcut \u201dProjects - Shortcut\u201d. Through consistent replanning, Agent S2 is able to dynamically update its plan and revise its current subtask in more detail.", "description": "Agent S2 successfully completes a complex task on the WindowsAgentArena benchmark.  The task involves creating a desktop shortcut for a folder, requiring multiple steps and interaction with the Windows GUI. The figure showcases Agent S2's ability to dynamically adjust its plan, refining its actions based on the evolving state of the environment and feedback from the interface. This highlights the effectiveness of the Proactive Hierarchical Planning component of the Agent S2 framework.", "section": "E Case Studies on WindowsAgentArena"}, {"figure_path": "https://arxiv.org/html/2504.00906/x11.png", "caption": "Figure 13: Agent S2 on the AndroidWorld mobile environment. It utilizes open, touch, and type interactions to complete the instruction \u201cGo to the new contact screen and enter the following details: First Name: Grace, Last Name: Taylor, Phone: 799-802-XXXX, Phone Label: Work\u201d.", "description": "Agent S2 successfully navigates the AndroidWorld environment to create a new contact.  The figure displays a sequence of screenshots showing the agent's interactions, starting with opening the Contacts app and culminating in entering all requested contact details (First Name, Last Name, Phone number, and Phone Label). This demonstrates Agent S2's ability to handle touch, typing, and dropdown menu selection actions within a mobile GUI.", "section": "F Case Studies on AndroidWorld"}]