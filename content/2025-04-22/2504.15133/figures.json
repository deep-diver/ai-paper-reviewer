[{"figure_path": "https://arxiv.org/html/2504.15133/extracted/6315031/fig/overview.png", "caption": "Figure 1: Editing LLM behaviors via steering.\nOne of the core ideas is to transform the objective that needs to be controlled into an intervention vector and to regulate the LLM\u2019s output behavior by multiplying it with a controllable magnitude during the forward propagation.", "description": "This figure illustrates the core concept of EasyEdit2, a framework for steering Large Language Models (LLMs).  It shows how an undesired LLM response (e.g., a neutral or negative response to a question about feelings) can be transformed into a desired response (e.g., a positive response) by applying a 'steering vector'. This vector, generated based on the desired behavior, is multiplied with the LLM's output during forward propagation to adjust the model's behavior without altering the underlying model parameters.  The process involves transforming the control objective into a vector that modulates the LLM's output, effectively 'steering' it towards the desired response.", "section": "1 Introduction"}, {"figure_path": "https://arxiv.org/html/2504.15133/extracted/6315031/fig/case.png", "caption": "Figure 2: Visual depiction of diverse scenarios in EasyEdit2 for intervening in LLM behaviors.", "description": "This figure visually demonstrates EasyEdit2's capability to intervene in various aspects of Large Language Model (LLM) behaviors.  It shows six key scenarios where EasyEdit2 can be applied: ensuring safety by preventing harmful outputs; controlling sentiment to generate either positive or negative responses; adjusting personality to evoke specific behavioral patterns; regulating the reasoning process of the LLM; correcting factual inaccuracies; and manipulating features of the language used (e.g. formality, style).  For each scenario, an example question is posed alongside the negative and positive target responses to highlight the control offered by EasyEdit2.", "section": "3 Design and Implementation"}, {"figure_path": "https://arxiv.org/html/2504.15133/extracted/6315031/fig/framework.png", "caption": "Figure 3: The overall architecture of EasyEdit2.\nThe framework consists of several key components:\n(1) The Datasets module loads data for training and evaluation.\n(2) The Methods module includes steering vector generator (e.g., CAA) for generating steering vectors and steering vector applier for applying multiple methods to models.\n(3) The Steering Vector Library manages generated vectors and supports merging techniques (e.g., TIES).\n(4) The Evaluators module assesses steering effects using rule-based, classifier-based, and LLM-based metrics.\nThe entire pipeline enables controlled and flexible model steering.", "description": "EasyEdit2's architecture centers around four key modules:  The Datasets module preprocesses data for training and evaluating the system. The Methods module houses the Steering Vector Generator (which uses methods like CAA to create steering vectors) and the Steering Vector Applier (applying various steering methods to the model).  The Steering Vector Library stores and manages generated vectors, facilitating the merging of multiple vectors using techniques such as TIES. Finally, the Evaluators module assesses the effectiveness of the steering process using rule-based, classifier-based, and LLM-based evaluation metrics.  This integrated pipeline allows for precise and adaptable control over the language model's behavior.", "section": "3 Design and Implementation"}, {"figure_path": "https://arxiv.org/html/2504.15133/extracted/6315031/fig/code.png", "caption": "Figure 4: \nA code snippet in EasyEdit2, where the CAA method shifts output language from English to Chinese.", "description": "This code snippet demonstrates a core functionality of EasyEdit2, specifically using the Contrastive Activation Addition (CAA) method. It shows how to prepare training and generation datasets, generate steering vectors using the `BaseVectorGenerator` class, apply these vectors to the model using `BaseVectorApplier`, and finally generate steered outputs in a different language (Chinese in this example) compared to the input language (English). This highlights EasyEdit2's capability for controlling language features of Large Language Models (LLMs).", "section": "3 Design and Implementation"}, {"figure_path": "https://arxiv.org/html/2504.15133/extracted/6315031/fig/web.png", "caption": "Figure 5: Gradio-based online demo, showing the test-time steering tab with an example interaction.", "description": "The figure displays a screenshot of the online demo built using Gradio, showcasing the test-time steering functionalities of the EasyEdit2 framework.  The screenshot shows the user interface with an example interaction where a user input is provided and the model's output is shown before and after the steering intervention is applied, highlighting the changed model behavior.", "section": "5 Demonstration"}]