[{"content": "<table class=\"ltx_tabular ltx_centering ltx_align_middle\" id=\"S2.T1.1\">\n<tr class=\"ltx_tr\" id=\"S2.T1.1.1\">\n<td class=\"ltx_td ltx_align_center ltx_border_tt\" id=\"S2.T1.1.1.1\"><span class=\"ltx_text ltx_font_bold\" id=\"S2.T1.1.1.1.1\">Algorithm</span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_tt\" id=\"S2.T1.1.1.2\"><span class=\"ltx_text ltx_font_bold\" id=\"S2.T1.1.1.2.1\">Train Batch Size</span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_tt\" id=\"S2.T1.1.1.3\"><span class=\"ltx_text ltx_font_bold\" id=\"S2.T1.1.1.3.1\">Rollout N</span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_tt\" id=\"S2.T1.1.1.4\"><span class=\"ltx_text ltx_font_bold\" id=\"S2.T1.1.1.4.1\">KL Coef</span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_tt\" id=\"S2.T1.1.1.5\"><span class=\"ltx_text ltx_font_bold\" id=\"S2.T1.1.1.5.1\">Max Response Len</span></td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S2.T1.1.2\">\n<td class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\" id=\"S2.T1.1.2.1\">REINFORCE++</td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\" id=\"S2.T1.1.2.2\">8</td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\" id=\"S2.T1.1.2.3\">8</td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\" id=\"S2.T1.1.2.4\">0.001</td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb ltx_border_t\" id=\"S2.T1.1.2.5\">4096</td>\n</tr>\n</table>", "caption": "Table 1: Important Training Parameters", "description": "This table lists the hyperparameters used during the training process of the Logic-RL model.  It shows the algorithm used (REINFORCE++), the batch size for training, the number of rollouts per update, the coefficient for the KL divergence penalty, and the maximum response length allowed during training. These parameters are crucial for controlling the training process and achieving optimal performance.  Understanding these values helps in interpreting the results of the Logic-RL model and potentially reproducing or adapting the training process for similar tasks.", "section": "2 Method"}, {"content": "<table class=\"ltx_tabular ltx_align_middle\" id=\"S3.T2.8.8\">\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.9\">\n<td class=\"ltx_td ltx_align_left ltx_border_tt\" id=\"S3.T2.8.8.9.1\" rowspan=\"2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.9.1.1\">Model</span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_tt\" colspan=\"6\" id=\"S3.T2.8.8.9.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.9.2.1\">Difficulty by Number of People</span></td>\n<td class=\"ltx_td ltx_border_tt\" id=\"S3.T2.8.8.9.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"></td>\n<td class=\"ltx_td ltx_border_tt\" id=\"S3.T2.8.8.9.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"></td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.10\">\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.10.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">2</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.10.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">3</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.10.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">4</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.10.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">5</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.10.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">6</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.10.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">7</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.10.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">8</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.10.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text\" id=\"S3.T2.8.8.10.8.1\">Avg.</span></td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.11\">\n<td class=\"ltx_td ltx_align_left ltx_border_t\" id=\"S3.T2.8.8.11.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.11.1.1\">o3-mini-high</span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.11.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.99</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.11.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.98</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.11.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.97</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.11.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.95</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.11.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.94</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.11.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.89</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.11.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.83</td>\n<td class=\"ltx_td ltx_nopad_r ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.11.9\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.94</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.12\">\n<td class=\"ltx_td ltx_align_left\" id=\"S3.T2.8.8.12.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.12.1.1\">o1-2024-12-17</span></td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.12.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.83</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.12.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.51</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.12.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.38</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.12.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.38</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.12.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.35</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.12.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.30</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.12.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.20</td>\n<td class=\"ltx_td ltx_nopad_r ltx_align_center\" id=\"S3.T2.8.8.12.9\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.42</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.13\">\n<td class=\"ltx_td ltx_align_left\" id=\"S3.T2.8.8.13.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.13.1.1\">Deepseek-R1</span></td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.13.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.91</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.13.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.73</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.13.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.77</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.13.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.78</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.13.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.75</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.13.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.88</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.13.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.83</td>\n<td class=\"ltx_td ltx_nopad_r ltx_align_center\" id=\"S3.T2.8.8.13.9\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.81</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.14\">\n<td class=\"ltx_td ltx_align_left ltx_border_t\" id=\"S3.T2.8.8.14.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.14.1.1\">GPT-4o</span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.14.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.68</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.14.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.57</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.14.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.49</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.14.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.32</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.14.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.23</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.14.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.21</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.14.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.11</td>\n<td class=\"ltx_td ltx_nopad_r ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.14.9\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.37</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.15\">\n<td class=\"ltx_td ltx_align_left\" id=\"S3.T2.8.8.15.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.15.1.1\">GPT-4o-mini</span></td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.15.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.63</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.15.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.42</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.15.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.34</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.15.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.17</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.15.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.09</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.15.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.10</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.15.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.01</td>\n<td class=\"ltx_td ltx_nopad_r ltx_align_center\" id=\"S3.T2.8.8.15.9\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.25</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.16\">\n<td class=\"ltx_td ltx_align_left\" id=\"S3.T2.8.8.16.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.16.1.1\">NuminaMath-7B-CoT</span></td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.16.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.28</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.16.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.13</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.16.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.12</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.16.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.05</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.16.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.01</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.16.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.00</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.16.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.00</td>\n<td class=\"ltx_td ltx_nopad_r ltx_align_center\" id=\"S3.T2.8.8.16.9\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.08</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.17\">\n<td class=\"ltx_td ltx_align_left\" id=\"S3.T2.8.8.17.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.17.1.1\">Deepseek-Math-7B</span></td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.17.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.35</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.17.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.21</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.17.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.08</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.17.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.06</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.17.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.02</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.17.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.00</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.17.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.00</td>\n<td class=\"ltx_td ltx_nopad_r ltx_align_center\" id=\"S3.T2.8.8.17.9\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.10</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.18\">\n<td class=\"ltx_td ltx_align_left\" id=\"S3.T2.8.8.18.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.18.1.1\">Qwen2.5-Base-7B</span></td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.18.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.41</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.18.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.34</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.18.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.16</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.18.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.09</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.18.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.00</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.18.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.00</td>\n<td class=\"ltx_td ltx_align_center\" id=\"S3.T2.8.8.18.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.00</td>\n<td class=\"ltx_td ltx_nopad_r ltx_align_center\" id=\"S3.T2.8.8.18.9\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.14</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.19\">\n<td class=\"ltx_td ltx_align_left ltx_border_t\" id=\"S3.T2.8.8.19.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.19.1.1\">Qwen2.5-7B-Instruct-1M</span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.19.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.49</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.19.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.40</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.19.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.25</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.19.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.11</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.19.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.06</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.19.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.02</td>\n<td class=\"ltx_td ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.19.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.01</td>\n<td class=\"ltx_td ltx_nopad_r ltx_align_center ltx_border_t\" id=\"S3.T2.8.8.19.9\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\">0.19</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S3.T2.8.8.8\" style=\"background-color:#C8EBFF;\">\n<td class=\"ltx_td ltx_align_left ltx_border_bb\" id=\"S3.T2.8.8.8.9\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text\" id=\"S3.T2.8.8.8.9.1\" style=\"background-color:#C8EBFF;\">+ <span class=\"ltx_text ltx_font_bold\" id=\"S3.T2.8.8.8.9.1.1\">Logic-RL</span></span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb\" id=\"S3.T2.1.1.1.1\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text\" id=\"S3.T2.1.1.1.1.1\" style=\"background-color:#C8EBFF;\">0.99<sup class=\"ltx_sup\" id=\"S3.T2.1.1.1.1.1.1\"><span class=\"ltx_text ltx_font_italic\" id=\"S3.T2.1.1.1.1.1.1.1\" style=\"color:#006400;\">\u21910.50</span></sup></span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb\" id=\"S3.T2.2.2.2.2\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text\" id=\"S3.T2.2.2.2.2.1\" style=\"background-color:#C8EBFF;\">0.99<sup class=\"ltx_sup\" id=\"S3.T2.2.2.2.2.1.1\"><span class=\"ltx_text ltx_font_italic\" id=\"S3.T2.2.2.2.2.1.1.1\" style=\"color:#006400;\">\u21910.59</span></sup></span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb\" id=\"S3.T2.3.3.3.3\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text\" id=\"S3.T2.3.3.3.3.1\" style=\"background-color:#C8EBFF;\">0.94<sup class=\"ltx_sup\" id=\"S3.T2.3.3.3.3.1.1\"><span class=\"ltx_text ltx_font_italic\" id=\"S3.T2.3.3.3.3.1.1.1\" style=\"color:#006400;\">\u21910.69</span></sup></span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb\" id=\"S3.T2.4.4.4.4\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text\" id=\"S3.T2.4.4.4.4.1\" style=\"background-color:#C8EBFF;\">0.92<sup class=\"ltx_sup\" id=\"S3.T2.4.4.4.4.1.1\"><span class=\"ltx_text ltx_font_italic\" id=\"S3.T2.4.4.4.4.1.1.1\" style=\"color:#006400;\">\u21910.81</span></sup></span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb\" id=\"S3.T2.5.5.5.5\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text\" id=\"S3.T2.5.5.5.5.1\" style=\"background-color:#C8EBFF;\">0.91<sup class=\"ltx_sup\" id=\"S3.T2.5.5.5.5.1.1\"><span class=\"ltx_text ltx_font_italic\" id=\"S3.T2.5.5.5.5.1.1.1\" style=\"color:#006400;\">\u21910.85</span></sup></span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb\" id=\"S3.T2.6.6.6.6\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text\" id=\"S3.T2.6.6.6.6.1\" style=\"background-color:#C8EBFF;\">0.80<sup class=\"ltx_sup\" id=\"S3.T2.6.6.6.6.1.1\"><span class=\"ltx_text ltx_font_italic\" id=\"S3.T2.6.6.6.6.1.1.1\" style=\"color:#006400;\">\u21910.78</span></sup></span></td>\n<td class=\"ltx_td ltx_align_center ltx_border_bb\" id=\"S3.T2.7.7.7.7\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text\" id=\"S3.T2.7.7.7.7.1\" style=\"background-color:#C8EBFF;\">0.67<sup class=\"ltx_sup\" id=\"S3.T2.7.7.7.7.1.1\"><span class=\"ltx_text ltx_font_italic\" id=\"S3.T2.7.7.7.7.1.1.1\" style=\"color:#006400;\">\u21910.48</span></sup></span></td>\n<td class=\"ltx_td ltx_nopad_r ltx_align_center ltx_border_bb\" id=\"S3.T2.8.8.8.8\" style=\"padding-top:1.5pt;padding-bottom:1.5pt;\"><span class=\"ltx_text\" id=\"S3.T2.8.8.8.8.1\" style=\"background-color:#C8EBFF;\">0.89<sup class=\"ltx_sup\" id=\"S3.T2.8.8.8.8.1.1\"><span class=\"ltx_text ltx_font_italic\" id=\"S3.T2.8.8.8.8.1.1.1\" style=\"color:#006400;\">\u21910.70</span></sup></span></td>\n</tr>\n</table>", "caption": "Table 2: Comparison of different models including reasoning models and general models on K&K logic puzzle across various difficulty.", "description": "This table compares the performance of various large language models (LLMs) on a dataset of Knights and Knaves (K&K) logic puzzles.  The models are tested across different difficulty levels of the puzzles, which are determined by the number of characters involved.  The table shows the average accuracy of each model across all difficulties, allowing for a direct comparison of their reasoning abilities.  The models compared include both those specifically designed for reasoning tasks and general-purpose LLMs.", "section": "3 Experiment"}, {"content": "<table class=\"ltx_tabular ltx_centering ltx_align_middle\" id=\"S8.T3.1\">\n<tr class=\"ltx_tr\" id=\"S8.T3.1.1\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top ltx_border_tt\" id=\"S8.T3.1.1.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.1.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.1.1.1.1\" style=\"width:398.3pt;\">Question:</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.2\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.2.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.2.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.2.1.1.1\" style=\"width:398.3pt;\">A very special island is inhabited only by knights and knaves. Knights always tell the truth, and knaves always lie. Five residents (William, Chloe, Lily, Jack, and Logan) made the following statements: (1) William said: \"William is a knight and Chloe is a knight.\" (2) Chloe said: \"Lily is a knight.\" (3) Lily said: \"William is a knave and Jack is a knight.\" (4) Jack said: \"William is a knave.\" (5) Logan said: \"Lily is a knave if and only if William is a knave.\" So\nwho is a knight and who is a knave?</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.3\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top ltx_border_t\" id=\"S8.T3.1.3.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.3.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.3.1.1.1\" style=\"width:398.3pt;\">Response: &lt;think&gt;</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.4\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.4.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.4.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.4.1.1.1\" style=\"width:398.3pt;\">To solve this, let\u2019s start analyzing the statements one by one, beginning with William\u2019s statement since it\u2019s a good starting point due to its self-referential nature.</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.5\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.5.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.5.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.5.1.1.1\" style=\"width:398.3pt;\">William\u2019s statement: \"William is a knight and Chloe is a knight.\"</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.6\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.6.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.6.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.6.1.1.1\" style=\"width:398.3pt;\">- If William is telling the truth (i.e., he is a knight), then both parts of his statement must be true. However, if William is a knight, the statement \"William is a knight\" is true, <span class=\"ltx_text\" id=\"S8.T3.1.6.1.1.1.1\" style=\"color:#FF0000;\">but the statement \"Chloe is a knight\" cannot determine the truth about Chloe at this point since we haven\u2019t analyzed Chloe\u2019s statement yet.<span class=\"ltx_text ltx_font_bold ltx_font_italic\" id=\"S8.T3.1.6.1.1.1.1.1\" style=\"color:#0000FF;\"> (Hesitate)</span><span class=\"ltx_text\" id=\"S8.T3.1.6.1.1.1.1.2\" style=\"color:#0000FF;\">\n</span></span> Therefore, William cannot be a knight because it would lead to a contradiction.</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.7\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.7.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.7.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.7.1.1.1\" style=\"width:398.3pt;\">\u2026</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.8\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.8.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.8.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.8.1.1.1\" style=\"width:398.3pt;\"><span class=\"ltx_text\" id=\"S8.T3.1.8.1.1.1.1\" style=\"color:#FF0000;\">Let\u2019s test both possibilities.<span class=\"ltx_text ltx_font_bold ltx_font_italic\" id=\"S8.T3.1.8.1.1.1.1.1\" style=\"color:#0000FF;\"> (Explore)</span></span></span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.9\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.9.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.9.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.9.1.1.1\" style=\"width:398.3pt;\">Testing Chloe as a knight: If Chloe is a knight, then her statement \"Lily is a knight\" is true, so Lily is a knight.</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.10\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.10.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.10.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.10.1.1.1\" style=\"width:398.3pt;\">Analyzing Lily\u2019s statement: \"William is a knave and Jack is a knight.\"</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.11\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.11.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.11.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.11.1.1.1\" style=\"width:398.3pt;\">\u2026</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.12\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.12.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.12.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.12.1.1.1\" style=\"width:398.3pt;\"><span class=\"ltx_text\" id=\"S8.T3.1.12.1.1.1.1\" style=\"color:#FF0000;\">Now, we have determined:<span class=\"ltx_text ltx_font_bold ltx_font_italic\" id=\"S8.T3.1.12.1.1.1.1.1\" style=\"color:#0000FF;\"> (Summerize)</span></span></span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.13\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.13.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.13.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.13.1.1.1\" style=\"width:398.3pt;\">- William is a knave.</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.14\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.14.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.14.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.14.1.1.1\" style=\"width:398.3pt;\">- Chloe is a knight.</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.15\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.15.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.15.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.15.1.1.1\" style=\"width:398.3pt;\">\u2026</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.16\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.16.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.16.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.16.1.1.1\" style=\"width:398.3pt;\"><span class=\"ltx_text\" id=\"S8.T3.1.16.1.1.1.1\" style=\"color:#FF0000;\">Let\u2019s verify all statements:</span> <span class=\"ltx_text ltx_font_bold ltx_font_italic\" id=\"S8.T3.1.16.1.1.1.2\" style=\"color:#0000FF;\"> (Verify)</span></span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.17\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.17.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.17.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.17.1.1.1\" style=\"width:398.3pt;\">- \"William is a knight and Chloe is a knight\" (False, since William is a knave).</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.18\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T3.1.18.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.18.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.18.1.1.1\" style=\"width:398.3pt;\">- \"Lily is a knight\" (True).</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T3.1.19\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top ltx_border_b\" id=\"S8.T3.1.19.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T3.1.19.1.1\">\n<span class=\"ltx_p\" id=\"S8.T3.1.19.1.1.1\" style=\"width:398.3pt;\">\u2026</span>\n</span>\n</td>\n</tr>\n</table>", "caption": "Table 3: An example of a large language model trained through reinforcement learning naturally exhibiting reasoning behaviors such as hesitation, exploration, summarization, and verification, even though these behaviors were not present in the training data.", "description": "This table showcases an example of a large language model's reasoning process after undergoing reinforcement learning.  The model demonstrates several key emergent reasoning behaviors not present in its original training data.  These include: hesitation and self-verification (expressed through phrases such as 'I am not entirely sure; let's re-check this step'), multi-path exploration and backtracking (where the model tries multiple solution approaches and revisits earlier steps), summarization of its reasoning process (condensing the reasoning into key points), and explicit verification of steps. The example problem is a logic puzzle involving knights and knaves, requiring the model to use deductive reasoning to determine the identity of each character based on their statements. The model's response shows a thought process that resembles human problem-solving strategies, involving trial and error, exploration of different possibilities, and self-correction. This highlights the model's ability to develop sophisticated reasoning skills during reinforcement learning without explicit instruction.", "section": "Qualitative Analysis of Emergent Reasoning"}, {"content": "<table class=\"ltx_tabular ltx_centering ltx_align_middle\" id=\"S8.T4.1\">\n<tr class=\"ltx_tr\" id=\"S8.T4.1.1\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top ltx_border_tt\" id=\"S8.T4.1.1.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T4.1.1.1.1\">\n<span class=\"ltx_p\" id=\"S8.T4.1.1.1.1.1\" style=\"width:398.3pt;\">Question:</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T4.1.2\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T4.1.2.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T4.1.2.1.1\">\n<span class=\"ltx_p\" id=\"S8.T4.1.2.1.1.1\" style=\"width:398.3pt;\">A very special island is inhabited only by knights and knaves. Knights always tell the truth, and knaves always lie. Three residents (Jack, Samuel, Lily) made the following statements: (1) Jack said, \"If Samuel is a knight, then Lily is a knave.\" (2) Samuel said, \"If Jack is a knight, then Lily is a knave.\" (3) Lily said, \"Jack is a knight.\" So who is a knight and who is a knave?</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T4.1.3\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top ltx_border_t\" id=\"S8.T4.1.3.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T4.1.3.1.1\">\n<span class=\"ltx_p\" id=\"S8.T4.1.3.1.1.1\" style=\"width:398.3pt;\">Response: &lt;think&gt;</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T4.1.4\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T4.1.4.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T4.1.4.1.1\">\n<span class=\"ltx_p\" id=\"S8.T4.1.4.1.1.1\" style=\"width:398.3pt;\">Let\u2019s analyze the statements step by step.</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T4.1.5\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T4.1.5.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T4.1.5.1.1\">\n<span class=\"ltx_p\" id=\"S8.T4.1.5.1.1.1\" style=\"width:398.3pt;\">1. Jack\u2019s statement is: \"If Samuel is a knight then Lily is a knave.\"</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T4.1.6\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T4.1.6.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T4.1.6.1.1\">\n<span class=\"ltx_p\" id=\"S8.T4.1.6.1.1.1\" style=\"width:398.3pt;\">\u2026</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T4.1.7\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T4.1.7.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T4.1.7.1.1\">\n<span class=\"ltx_p\" id=\"S8.T4.1.7.1.1.1\" style=\"width:398.3pt;\">Now that we know Samuel is a knave, let\u2019s analyze Samuel\u2019s statement again:</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T4.1.8\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T4.1.8.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T4.1.8.1.1\">\n<span class=\"ltx_p\" id=\"S8.T4.1.8.1.1.1\" style=\"width:398.3pt;\">- Samuel\u2019s statement: \"If Jack is a knight then Lily is a knave.\"</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T4.1.9\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T4.1.9.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T4.1.9.1.1\">\n<span class=\"ltx_p\" id=\"S8.T4.1.9.1.1.1\" style=\"width:398.3pt;\"><span class=\"ltx_text\" id=\"S8.T4.1.9.1.1.1.1\" style=\"color:#FF0000;\">- An implication \"If P then Q\" is false only when P is true and Q is false.<span class=\"ltx_text ltx_font_bold ltx_font_italic\" id=\"S8.T4.1.9.1.1.1.1.1\" style=\"color:#0000FF;\"> (Formula Application)</span></span> Here, \"If Jack is a knight then Lily is a knave\" is false when Jack is a knight and Lily is not a knave. This is consistent with our previous conclusion that Jack is a knight and Lily is a knight.</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T4.1.10\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top ltx_border_b\" id=\"S8.T4.1.10.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T4.1.10.1.1\">\n<span class=\"ltx_p\" id=\"S8.T4.1.10.1.1.1\" style=\"width:398.3pt;\">\u2026</span>\n</span>\n</td>\n</tr>\n</table>", "caption": "Table 4: An example of using logical formulas to solve a Knights and Knaves puzzle.", "description": "This table presents an example of how the model uses logical formulas to solve a Knights and Knaves puzzle. It demonstrates the model's ability to apply formal logical reasoning, such as the implication formula (\"If P, then Q\"), in solving the puzzle. This is particularly notable because these formal logical reasoning skills are not explicitly taught or demonstrated in the training data.  The example shows the model's step-by-step reasoning process, where it analyzes the statements given by the characters in the puzzle and reaches a conclusion based on its understanding of the logic involved. This illustrates the emergence of advanced reasoning capabilities in the model that are not present in its initial training.", "section": "Qualitative Analysis of Emergent Reasoning"}, {"content": "<table class=\"ltx_tabular ltx_centering ltx_align_middle\" id=\"S8.T5.1\">\n<tr class=\"ltx_tr\" id=\"S8.T5.1.1\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top ltx_border_tt\" id=\"S8.T5.1.1.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T5.1.1.1.1\">\n<span class=\"ltx_p\" id=\"S8.T5.1.1.1.1.1\" style=\"width:398.3pt;\">Question:A very special island is inhabited only by knights and knaves. Knights always tell the truth, and knaves\nalways lie. Six residents (Benjamin, Michael, Evelyn, Sophia, James, and Jacob) made the following statements: (1) Benjamin said, \"If Sophia is a knight, then Evelyn is also a knight.\" (2) Michael said, \"Benjamin is a knave, or James is a knight.\" (3) Evelyn said, \"Sophia is a knight, or James is a knave.\" (4) Sophia said, \"If Michael is a knave, then James is a knight.\" (5) James said, \"Sophia is a knight, or Evelyn is a knight.\" (6) Jacob said, \"Benjamin is a knave, and Sophia is a knight.\" So who is a knight and who is a knave?</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T5.1.2\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top ltx_border_t\" id=\"S8.T5.1.2.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T5.1.2.1.1\">\n<span class=\"ltx_p\" id=\"S8.T5.1.2.1.1.1\" style=\"width:398.3pt;\">Response: &lt;think&gt;</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T5.1.3\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T5.1.3.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T5.1.3.1.1\">\n<span class=\"ltx_p\" id=\"S8.T5.1.3.1.1.1\" style=\"width:398.3pt;\">Let\u2019s analyze each statement step-by-step based on whether the speaker is a knight or a knave.</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T5.1.4\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T5.1.4.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T5.1.4.1.1\">\n<span class=\"ltx_p\" id=\"S8.T5.1.4.1.1.1\" style=\"width:398.3pt;\">1. Benjamin: \"If Sophia is a knight then Evelyn is a knight\"</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T5.1.5\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T5.1.5.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T5.1.5.1.1\">\n<span class=\"ltx_p\" id=\"S8.T5.1.5.1.1.1\" style=\"width:398.3pt;\">- If Benjamin is a knight, then the statement must be true. Thus, if Sophia is a knight, Evelyn has to be a knight.</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T5.1.6\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T5.1.6.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T5.1.6.1.1\">\n<span class=\"ltx_p\" id=\"S8.T5.1.6.1.1.1\" style=\"width:398.3pt;\">2. Michael: \"Benjamin is a knave or James is a knight\"</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T5.1.7\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T5.1.7.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T5.1.7.1.1\">\n<span class=\"ltx_p\" id=\"S8.T5.1.7.1.1.1\" style=\"width:398.3pt;\">\u2026</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T5.1.8\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top\" id=\"S8.T5.1.8.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T5.1.8.1.1\">\n<span class=\"ltx_p\" id=\"S8.T5.1.8.1.1.1\" style=\"width:398.3pt;\">From Jacob\u2019s statement, if Jacob is a knight then Sophia must be a knight and Benjamin must be a knave.</span>\n</span>\n</td>\n</tr>\n<tr class=\"ltx_tr\" id=\"S8.T5.1.9\">\n<td class=\"ltx_td ltx_align_justify ltx_align_top ltx_border_b\" id=\"S8.T5.1.9.1\">\n<span class=\"ltx_inline-block ltx_align_top\" id=\"S8.T5.1.9.1.1\">\n<span class=\"ltx_p\" id=\"S8.T5.1.9.1.1.1\" style=\"width:398.3pt;\"><span class=\"ltx_ERROR undefined\" id=\"S8.T5.1.9.1.1.1.1\">{CJK*}</span>UTF8gbsn\n<span class=\"ltx_text\" id=\"S8.T5.1.9.1.1.1.2\" style=\"color:#FF0000;\">\u4ee5\u5361\u6587\u7684\u65b9\u5f0f\u63a8\u7406: </span></span>\n<span class=\"ltx_p\" id=\"S8.T5.1.9.1.1.2\"><span class=\"ltx_text\" id=\"S8.T5.1.9.1.1.2.1\" style=\"color:#FF0000;\">- \u5047\u8bbe Jacob \u662f\u9a91\u58eb\uff0c\u90a3\u4e48 Jacob \u7684\u58f0\u660e \"Benjamin \u662f\u80cc\u53db\u8005\u4e14 Sophia \u662f\u9a91\u58eb\" \u5c31\u662f\u771f\u7684\u3002\u8fd9\u610f\u5473\u7740 Benjamin \u662f\u80cc\u53db\u8005\u800c Sophia \u662f\u9a91\u58eb\u3002</span></span>\n<span class=\"ltx_p\" id=\"S8.T5.1.9.1.1.3\"><span class=\"ltx_text\" id=\"S8.T5.1.9.1.1.3.1\" style=\"color:#FF0000;\">- \u65e2\u7136 Sophia \u662f\u9a91\u58eb\uff0c\u6839\u636e Benjamin \u7684\u58f0\u660e \"\u5982\u679c Sophia \u662f\u9a91\u58eb\u90a3\u4e48 Evelyn \u4e5f\u662f\u9a91\u58eb\"\uff0cEvelyn \u4e5f\u662f\u9a91\u58eb\u3002</span></span>\n<span class=\"ltx_p\" id=\"S8.T5.1.9.1.1.4\">\u2026</span>\n<span class=\"ltx_p\" id=\"S8.T5.1.9.1.1.5\"><span class=\"ltx_text\" id=\"S8.T5.1.9.1.1.5.1\" style=\"color:#FF0000;\">\u7efc\u4e0a\u6240\u8ff0\uff0cSophia, Evelyn, \u548c Jacob \u662f\u9a91\u58eb\uff0c\u800c Benjamin, Michael, \u548c James \u662f\u80cc\u53db\u8005\u3002 <span class=\"ltx_text ltx_font_bold ltx_font_italic\" id=\"S8.T5.1.9.1.1.5.1.1\" style=\"color:#0000FF;\"> (Language Switching)</span></span></span>\n<span class=\"ltx_p\" id=\"S8.T5.1.9.1.1.6\">\u2026</span>\n</span>\n</td>\n</tr>\n</table>", "caption": "Table 5: An example of our model used language switching to solve a Knights and Knaves puzzle.", "description": "This table showcases an example of the model's reasoning process where it uses a mix of English and Chinese to solve a Knights and Knaves puzzle, highlighting the model's ability to incorporate different linguistic structures during its problem-solving steps.", "section": "Qualitative Analysis of Emergent Reasoning"}]