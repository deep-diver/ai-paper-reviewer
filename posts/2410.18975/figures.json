[{"figure_path": "2410.18975/figures/figures_1_0.png", "caption": "Figure 1: An example of UNBOUNDED. We follow the life of Archibus, the user's custom wizard character. The user can interact with the generative game using natural language, and Archibus' hunger, energy and fun meters update accordingly. A spontaneous and unconstrained story unfolds while the user playing, and the character can explore new environments with a myriad of possible actions and unexpected interactions. The game runs in interactive speeds, refreshing every second.", "description": "The figure shows three panels illustrating a sequence of events in the UNBOUNDED game. Each panel displays a cartoon-style image of a wizard character, Archibus, in different settings accompanied by text describing the scene and the character's current state (hunger, energy, fun levels). The first panel shows Archibus in a classroom, interacting with students; the second shows Archibus in a flowery meadow eating pears, and the third shows Archibus back in the classroom opening a book. Below each panel, there's a speech bubble containing user input (natural language instructions) influencing the progression of the game.", "section": "ABSTRACT"}, {"figure_path": "2410.18975/figures/figures_3_0.png", "caption": "Figure 2: Example of UNBOUNDED. Based on an initial user input, UNBOUNDED sets up game simulation environments, and generates character actions in the environments. Users can interact with the character with natural language instructions, exploring the game with unlimited options.", "description": "The figure showcases an example of UNBOUNDED gameplay.  It starts with a user inputting character details (a young witch) and a game topic (dragon hunting). The game then generates a series of scenes, presented as a flowchart with branching paths.  Each scene depicts the witch in a different environment (forest, pond, village, mountain) performing various actions, like exploring, fighting a dragon, shopping, and eating, driven by both the user\u2019s instructions and the game's internal logic.  The character's hunger, energy, and fun meters are shown to dynamically update in each panel, illustrating how actions affect the character's status.  Multiple branching paths indicate the non-linear, open-ended nature of the game, showcasing spontaneous story unfoldings based on player interaction and in-game mechanics. The images are stylized, cartoonish depictions of the game's virtual world.", "section": "2 RELATED WORK"}, {"figure_path": "2410.18975/figures/figures_4_0.png", "caption": "Figure 3: Generative game examples of UNBOUNDED. The user can insert a custom character into the game, engage with the character through natural language instructions, bring the character to different environments, and interact with it to maintain a healthy state under the games' mechanics.", "description": "The figure displays five distinct scenes from the UNBOUNDED game, each featuring a different character (a witch, a wizard, a puppy, a cat, and a panda) in a unique environment (a dreamy landscape, a mysterious underground world, floating islands, a city, and a vibrant rainforest). Each scene shows multiple images, demonstrating the dynamic visual generation capabilities of the game.  Below each set of images, a progress bar is shown for Hunger, Energy, and Fun, representing the character's current state, which updates based on user interactions and the simulated character life. The caption highlights the interactive nature of the game, allowing users to customize characters, utilize natural language to interact, and guide the character's experiences within the various environments.", "section": "3 METHOD"}, {"figure_path": "2410.18975/figures/figures_5_0.png", "caption": "Figure 4: (a) Our overall image generation method. We achieve real-time image generation with LCM LORA, maintain character consistency with DreamBooth LoRAs, and introduce a regional IP-Adapter (shown in (c)) for improved environment and character consistency. (b) Our proposed dynamic mask generation separating the environment and character conditioning, preventing interference between the two.", "description": "The figure shows the overall framework for image generation in UNBOUNDED, highlighting three key components. (a) presents the overall architecture, illustrating how LCM LoRA, DreamBooth LoRAs, and a regional IP-Adapter work together for real-time image generation while maintaining character consistency.  (b) details the dynamic mask generation process that separates environment and character conditioning using cross-attention mechanisms, preventing interference between them. Finally, (c) focuses on the regional IP-Adapter, explaining how it uses a dynamic mask and block drop strategies to ensure consistent character appearance within various environments, addressing character-environment interference by separately conditioning the image generation.", "section": "3 METHOD"}, {"figure_path": "2410.18975/figures/figures_7_0.png", "caption": "Figure 6: Overview of our user-simulation data collection process for LLM distillation. (a) We begin by collecting diverse topic and character data, filtered using ROUGE-L for diversity. (b) The World LLM and User LLM interact to generate user-simulation data through multi-round exchanges.", "description": "This figure illustrates the process of collecting user-simulation data for LLM distillation.  Panel (a) shows the topic collection process, starting with a topic pool, using an LLM to generate diverse topics and characters, and then filtering these using ROUGE-L to ensure diversity.  The selected topics are then input into a topic pool. Panel (b) depicts user-simulation data collection, where a World LLM and a User LLM interact in a multi-round exchange to generate interaction data for the game. This interaction data includes actions such as continuing the current action, exploring environments, and open-ended interactions. The interaction data and the game environment, character actions, and mechanics then comprise the simulation data.  The data generated is used in training the smaller model.", "section": "3.3.2 FRAMEWORK FOR SMALL LLM DISTILLATION"}]