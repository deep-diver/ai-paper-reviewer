[{"figure_path": "https://arxiv.org/html/2412.12953/x1.png", "caption": "Figure 1: The proposed MoDE architecture (left) uses a transformer with causal masking, where each block includes noise-conditional self-attention and a noise-conditioned router that assigns tokens to expert models based on the noise level. This design enables efficient, scalable action generation. On the right, the router\u2019s activation of subsets of simple MLP experts with Swish-GLU activation during denoising is illustrated.", "description": "MoDE architecture uses a transformer with causal masking. Each transformer block has noise-conditional self-attention and a router.  The router selects expert models based on the noise level of the input. During denoising, the router activates subsets of MLP experts which use Swish-GLU activations.", "section": "Method"}, {"figure_path": "https://arxiv.org/html/2412.12953/x2.png", "caption": "Figure 2: After training MoDE, the router is noise-conditioned, allowing pre-computation of the experts used at each noise level before inference. This enables removing the router and retaining only the selected experts, significantly improving network efficiency.", "description": "MoDE's router pre-computes expert utilization at each noise level before inference. This allows fusing selected expert MLPs into a single, composite MLP, enhancing efficiency by eliminating per-step expert invocation and streamlining memory access.  The figure illustrates how the router activates different experts based on the noise level during the denoising process. At high noise levels, different experts are used than at lower noise levels. Caching eliminates the need for the router after training. This process significantly reduces the FLOPs overhead by over 80% and speeds up inference by a factor of two compared to standard Mixture of Experts.", "section": "METHOD"}, {"figure_path": "https://arxiv.org/html/2412.12953/x3.png", "caption": "(a) LIBERO-90 Tasks", "description": "The figure shows example tasks within the LIBERO-90 benchmark.  LIBERO-90 consists of 90 diverse, short-horizon tasks in different simulated environments.  The environments include a variety of objects and interactive elements such as drawers, doors, cabinets, switches, buttons, and more. The tasks range in complexity from simple pick-and-place tasks to more complex manipulation sequences. In this particular visualization, tasks include opening drawers, stacking objects, picking, placing, pushing, and interacting with buttons and switches.", "section": "4.1 LONG-HORIZON MULTI-TASK EXPERIMENTS"}, {"figure_path": "https://arxiv.org/html/2412.12953/x4.png", "caption": "(b) Results for LIBERO-10 and LIBERO-90", "description": "The figure presents a bar chart comparing the performance of different models on two LIBERO benchmark challenges: LIBERO-10 and LIBERO-90. The models compared are DP-T, DP-CNN, QueST, MoDE (Mixture-of-Denoising Experts) and Prt-MODE (pretrained MoDE).  The y-axis represents the average success rate. The chart demonstrates that pretrained MoDE achieves near-perfect performance on LIBERO-10 and outperforms other models on LIBERO-90. It also suggests that pretraining leads to significant improvements in both settings.", "section": "4.1 LONG-HORIZON MULTI-TASK EXPERIMENTS"}, {"figure_path": "https://arxiv.org/html/2412.12953/x5.png", "caption": "Figure 3: Visualization and Results for LIBERO environment. (a) Few example environments and tasks of the LIBERO-90 task suite. (b) Average results for both LIBERO challenges averaged over 3333 seeds with 20202020 rollouts for each task.", "description": "Figure 3 visualizes the LIBERO environment and presents results comparing MoDE to baseline models (DP-T, DP-CNN, and QueST) on the LIBERO-10 and LIBERO-90 benchmark tasks. \n\nPart (a) showcases representative environments and tasks from the LIBERO-90 suite, which includes 90 diverse short-horizon manipulation tasks.  These tasks span a range of complexities and manipulation skills within simulated robotic environments.\n\nPart (b) displays the average success rate achieved by each model on both LIBERO-10 (10 long-horizon tasks) and LIBERO-90. The results, based on 20 rollouts per task averaged over 3 seeds, highlight MoDE's superior performance compared to the baseline models across these benchmarks. Notably, the pretrained MoDE (Prt-MODE) demonstrates even higher performance.", "section": "4.1 LONG-HORIZON MULTI-TASK EXPERIMENTS"}, {"figure_path": "https://arxiv.org/html/2412.12953/x6.png", "caption": "(a) Environments", "description": "The CALVIN benchmark features four distinct simulated robot environments (A, B, C, and D). Each environment contains a different arrangement of objects, including drawers, slides, and colored blocks, which are used for diverse manipulation tasks. The robot's objective is to interact with these objects based on language instructions. An example of an instruction could be \"push the blue block into the drawer.\" The variations in object placement and color across the four environments encourage generalization during policy learning.", "section": "4. EVALUATION"}, {"figure_path": "https://arxiv.org/html/2412.12953/x8.png", "caption": "(b) Example CALVIN-Rollout", "description": "A series of images illustrating a CALVIN environment rollout.  The robot is shown performing a sequence of five tasks: 1) pushing a red block to the left, 2) pulling a cabinet handle to open a drawer, 3) lifting a pink block from a sliding compartment within the cabinet, 4) storing a grasped block (likely the pink one) in the drawer, and 5) grasping and lifting a red block. The goal for the next task is given to the robot only after the successful completion of the previous task. The captions on each frame describe the task being performed.", "section": "4.1 LONG-HORIZON MULTI-TASK EXPERIMENTS"}, {"figure_path": "https://arxiv.org/html/2412.12953/x9.png", "caption": "Figure 4: Overview of the CALVIN environment. (a) CALVIN contains four different settings (A,B,C,D) with different configurations of slides, drawers and textures. (b) Example rollout consisting of 5555 tasks in sequence. The next goal is only given to the policy, if it manages to complete the prior.", "description": "The CALVIN environment, a simulated robot manipulation setup, is depicted in this figure.  Part (a) showcases the four distinct environment configurations (A, B, C, and D) available in CALVIN. These variations feature different arrangements of interactive elements like slides and drawers, as well as varying textures on surfaces.  Part (b) illustrates a sample rollout of a policy interacting with the CALVIN environment. It highlights the sequential nature of task execution, where the robot receives a new instruction only after successfully completing the previous one. The example rollout consists of five consecutive tasks, demonstrating the policy's ability to chain skills together. ", "section": "4.2 SCALING MULTI-TASK EXPERIMENTS"}, {"figure_path": "https://arxiv.org/html/2412.12953/x10.png", "caption": "Figure 5: Computational efficiency comparison between MoDE and a Dense-Transformer model with the same number of parameters.\nLeft: Average inference speed over 100 forward passes for various batch sizes.\nRight: FLOP count for MoDE with router cache and without compared against a dense baseline.\nMoDE demonstrates superior efficiency with lower FLOP count and faster inference thanks to its router caching and sparse expert design.", "description": "This figure compares the computational efficiency of MoDE against a dense transformer baseline with a similar number of parameters. The left plot shows that MoDE with caching significantly improves inference speed, especially at larger batch sizes. At batch size 1, MoDE is only slightly faster (12ms vs 15ms). However, at batch size 512, MoDE achieves nearly 40% faster inference (64ms vs 104ms). The right plot demonstrates the substantial reduction in FLOPs achieved by MoDE, particularly with router caching enabled. At batch size 1, the difference is marginal. However, at batch size 512, MoDE requires 16x fewer FLOPs (361 vs 5,772 GFLOPs) due to its sparse architecture and caching mechanism. These results highlight the superior computational efficiency of MoDE in terms of both inference speed and FLOP count.", "section": "4.4 COMPUTATIONAL EFFICIENCY OF MODE"}, {"figure_path": "https://arxiv.org/html/2412.12953/x11.png", "caption": "Figure 6: Visualized Expert Utilization.\nThe average usage of all experts in MoDE across all layers is shown.\nPurple color corresponds to low usage and yellow color to high one, and each image is separately normalized. The average activation shows that MoDE learns to utilize different experts for different noise levels.", "description": "This figure visualizes how a Mixture-of-Denoising-Experts (MoDE) model distributes its workload across different expert modules during the denoising process of generating actions. Each small heatmap represents a layer in the MoDE architecture, and the horizontal axis represents the different expert modules within that layer. The vertical axis shows the denoising steps, progressing from high noise levels at the top to low noise levels at the bottom. The color intensity within each cell indicates the proportion of tokens (parts of the input data) that the corresponding expert processes at a given denoising step. Darker yellow colors signify higher utilization of an expert, while darker purple colors indicate lower usage. The figure shows how different experts specialize in different phases of the denoising process, with some experts handling high-noise inputs and others focusing on refining low-noise outputs. This specialized distribution of work allows MoDE to efficiently generate complex and nuanced actions by leveraging the strengths of different expert modules.", "section": "4.5.3 HoW DOES THE MODEL DISTRIBUTE THE TOKENS TO DIFFERENT EXPERTS?"}, {"figure_path": "https://arxiv.org/html/2412.12953/x12.png", "caption": "Figure 7: Example Scenes of the SIMPLER Li et\u00a0al. (2024b) benchmark used to test generalist policies on various tasks from the Bridge and Google Fractal dataset.", "description": "Figure 7 presents sample environments from the SIMPLER benchmark (Li et al., 2024b), which evaluates generalist robot policies on manipulation tasks. The scenes include examples from the Bridge and Google Fractal datasets, highlighting the diversity of the benchmark's tasks.  These involve tasks like picking up objects, opening drawers, and manipulating tools. The SIMPLER benchmark uses real-world scenes rendered into a simulation for robust evaluation of policy generalization capabilities.", "section": "4 Evaluation"}, {"figure_path": "https://arxiv.org/html/2412.12953/x13.png", "caption": "Figure 8: Scaling performance of MoDE and Dense-MoDE on CALVIN ABC and ABCD environments, showing average performance for 2222 to 8888 experts using best-performing variants for each environment.", "description": "Figure 8, located in the \"Evaluation\" section (specifically subsection 4.5.4: \"How does the model scale with more experts?\"), presents the performance of MoDE and its dense variants (Dense-small and Dense-large) on two CALVIN benchmark challenges: ABC and ABCD. The x-axis represents the number of experts used in the MoDE architecture, ranging from 2 to 8. The y-axis represents the performance, measured as the average rollout length achieved by the policy.  Higher average rollout lengths indicate better performance, as the robot successfully completes more tasks within a given instruction sequence. Two variants of dense MoDE baselines are included for comparison. Dense-small has the same latent dimensionality as MoDE, while Dense-large is scaled to match MoDE's overall parameter count (2048 dimensions). The graph demonstrates how increasing the number of experts in MoDE initially improves performance, peaking at 4 experts for both ABC and ABCD. However, further increasing the number of experts leads to a decrease in performance, potentially due to overfitting or increased routing complexity.  The consistent underperformance of the Dense-small variant across both tasks highlights the parameter efficiency of the MoE architecture in MoDE.", "section": "4 Evaluation"}, {"figure_path": "https://arxiv.org/html/2412.12953/x14.png", "caption": "(a)", "description": "The figure shows some example environments and tasks from the LIBERO-90 task suite.  LIBERO-90 involves short-horizon tasks across a diverse range of environments. The environments include household objects like drawers, cabinets, and various small objects. The tasks typically involve manipulating these objects to achieve specified goals, such as opening drawers, grasping objects, or placing them in designated locations. The images provide a visual representation of the complexity and variety of tasks included in the LIBERO-90 benchmark.", "section": "4.1 LONG-HORIZON MULTI-TASK EXPERIMENTS"}, {"figure_path": "https://arxiv.org/html/2412.12953/x15.png", "caption": "(b)", "description": "This bar chart shows the results of evaluating the Mixture-of-Denoising-Experts (MoDE) model on the LIBERO benchmark and comparing it against other Diffusion Policies and a state-of-the-art transformer model QueST. It shows that MoDE outperforms other approaches across the board, with substantial improvements on both the LIBERO-10 and LIBERO-90 challenges. Pretrained MoDE generally achieves better performance than its non-pretrained counterpart.", "section": "4.1 LONG-HORIZON MULTI-TASK EXPERIMENTS"}, {"figure_path": "https://arxiv.org/html/2412.12953/x16.png", "caption": "(c)", "description": "This image visualizes how tokens are distributed to different experts in a 12-layer Mixture of Experts (MoE) model during the denoising process. Each subplot corresponds to a distinct layer, with experts (E0 to E3) represented on the horizontal axis and the log-scaled token count on the vertical axis. The color intensity depicts the proportion of tokens routed to each expert: darker colors signify higher usage. This visualization highlights how MoDE learns specialized denoising behaviors across its experts, varying with noise levels. Notably, different layers exhibit distinct patterns of expert utilization, suggesting layer-specific roles in the denoising process.  The analysis further reveals transitions in expert usage at certain noise levels, indicating shifts in the model's focus during action generation.", "section": "4.5 Ablation Studies"}, {"figure_path": "https://arxiv.org/html/2412.12953/x17.png", "caption": "(d)", "description": "This image shows the average token routing probabilities assigned by the router to different experts based on the input noise level. The experts are represented on the x-axis (E0 to E3), and the y-axis shows the logarithm of the noise levels (\u03c3). Brighter colors indicate higher routing probabilities, showing which experts are activated more for each noise level during the denoising process. The illustration reveals that the routing probabilities vary significantly with the noise level, highlighting the noise-dependent nature of MoDE's expert utilization.  This visualization reveals the distinct specialization of each expert based on the noise level.", "section": "ABLATION STUDIES"}, {"figure_path": "https://arxiv.org/html/2412.12953/x18.png", "caption": "Figure 9: Average Expert Utilization for different Load Balancing Weights across all denoising levels.", "description": "This figure visualizes the impact of different load-balancing weights (YLB) on expert utilization in a Mixture-of-Denoising-Experts (MoDE) model during the denoising process.  Each subfigure corresponds to a different YLB value (0.1, 0.01, 0.001, and 0.0001). Within each subfigure, a heatmap represents the average usage of each of the four experts (E0 to E3) across the model's layers (0 to 7) for different noise levels in the denoising process (\u03c31 to \u03c310, representing decreasing noise levels).  The color intensity within each cell of the heatmap indicates the proportion of tokens routed to a specific expert at a particular layer and noise level.  Darker colors represent higher utilization of an expert. The figure aims to demonstrate how varying the load balancing loss affects how the model distributes tokens to different experts during the denoising process.", "section": "4.5 ABLATION STUDIES"}, {"figure_path": "https://arxiv.org/html/2412.12953/x19.png", "caption": "(a)", "description": "The figure shows example environments and tasks from the LIBERO-90 task suite.  These tasks are diverse and involve short horizons, meaning the robot needs to complete them in relatively few steps.  The figure also demonstrates the range of environments in the benchmark, including different objects, layouts, and backgrounds.  The environments are interactive, so the robot can move, push, and manipulate various objects within each setting. Examples of the 90 diverse short-horizon tasks include \"pick up the red cube\", \"move the blue block\", and \"close the drawer\". The tasks are labeled with language instructions that are given to the model.", "section": "4.1 LONG-HORIZON MULTI-TASK EXPERIMENTS"}, {"figure_path": "https://arxiv.org/html/2412.12953/x20.png", "caption": "(b)", "description": "This bar chart presents the success rate of different models such as DP-T, DP-CNN, QueST, MODEPrt, MODE on two LIBERO challenges namely LIBERO-10 and LIBERO-90.  LIBERO-10 challenge comprises of 10 tasks, whereas LIBERO-90 tests policies on 90 short horizon tasks. As shown, MODE achieves higher success rate compared to other models across both benchmarks.", "section": "4.1 LONG-HORIZON MULTI-TASK EXPERIMENTS"}, {"figure_path": "https://arxiv.org/html/2412.12953/x21.png", "caption": "(c)", "description": "This image visualizes the expert utilization across 12 layers in a Mixture of Experts (MoE) Diffusion Policy. Each subplot corresponds to a layer, with experts E0-E3 on the horizontal axis and the log-scaled token count on the vertical axis. The color gradient represents the proportion of tokens routed to each expert; darker colors indicate higher usage. The figure reveals that the experts specialize in handling different noise levels. High-noise regimes (\u03c31-\u03c37) and low-noise regimes (\u03c38-\u03c310) are handled by different experts, with some experts focusing on initial denoising and others on final refinement. The first layer (L0) exhibits a strong preference for the final denoising steps at low noise levels. Certain layers, especially L4 and L5, clearly demarcate high-noise and low-noise handling experts, showcasing the transition point at around \u03c38. Smooth transitions in expert activations across noise levels are seen, like in L7, demonstrating smooth hand-offs between experts in denoising phases. Overall, the figure elucidates the noise-level specialization and coordinated behavior among experts within the MoE architecture during the denoising process.", "section": "4.5 ABLATION STUDIES"}]