[{"figure_path": "2410.16392/figures/figures_2_0.png", "caption": "Figure 1: Organization of this survey. A non-exhaustive list of papers is provided.", "description": "The figure shows a tree-like structure that organizes the survey of LLM-based optimization of compound AI systems by workflow, optimization methods, applications, and discussions.", "section": "1 Introduction"}, {"figure_path": "2410.16392/figures/figures_5_0.png", "caption": "Figure 2: Credit assignment: a local vs. a global approach. In backpropagation, the optimizer updates each parameter individually. In trace propagation, the prompt contains the execution trace, which allows it to generate all updated variables in a single call. Note that the loss is a textual feedback. In addition, the gradient of the instruction is not the gradient of the output, but the gradient of the instruction with respect to the gradient of the output.", "description": "The figure illustrates the difference between backpropagation and trace propagation in credit assignment for LLM-based optimization of compound AI systems.", "section": "3.2 Credit Assignment with Dynamic Program Analysis"}, {"figure_path": "2410.16392/figures/figures_5_1.png", "caption": "Figure 2: Credit assignment: a local vs. a global approach. In backpropagation, the optimizer updates each parameter individually. In trace propagation, the prompt contains the execution trace, which allows it to generate all updated variables in a single call. Note that the loss is a textual feedback. In addition, the gradient of the instruction is not the gradient of the output, but the gradient of the instruction with respect to the gradient of the output.", "description": "The figure illustrates the difference between backpropagation and trace propagation in credit assignment for LLM-based optimization of compound AI systems.", "section": "3.2 Credit Assignment with Dynamic Program Analysis"}]