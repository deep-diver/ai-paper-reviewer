[{"figure_path": "https://arxiv.org/html/2411.18671/x1.png", "caption": "Figure 1: \nComparison of TAPTRv3 with prior methods. Evaluation on four challenging test sets, where \u2018Avg. L.\u2019 denotes average video length. Circle colors represent training data composition, \u2018Real T. Data\u2019 and \u2018Syn. T. Data\u2019 denote the real and synthetic data, larger circle indicates more data. Results show TAPTRv3 achieves the best performance on most datasets. Even with only 11K synthetic training data, TAPTRv3 remains competitive against BootsTAPIR that is trained on 15M additional real data.", "description": "This figure compares the performance of TAPTRv3 with several other point tracking methods across four challenging datasets.  It highlights the impact of training data (real vs synthetic) on model accuracy and demonstrates that TAPTRv3, even with limited synthetic training data (11K), outperforms other methods and remains competitive with methods trained on significantly more real data (15M). The average video length for each dataset is indicated. Circle size represents the amount of training data used for each model, with larger circles denoting more data. The color of the circle represents the type of data, showing whether it is real-world or synthetic.", "section": "Abstract"}, {"figure_path": "https://arxiv.org/html/2411.18671/x2.png", "caption": "Figure 2: \nIllustration of our key contributions.\nThe darker arrow indicates larger attention weight.\n(a) Point-level feature in TAPTRv2 causes ambiguous attention in cross-attention because of the large variation and distractions. The red point is the tracking point, the green points are sampling points in cross-attention.\n(b) Patch-level spatial context features help eliminate distractions in TAPTRv3.\n(c) TAPTRv2 limits temporal attention in a small window.\n(d) TAPTRv3 extends temporal attention to arbitrary length while utilizing visibility to further adjust the temporal attention weights. Rectangles indicate visibility predictions, the darker the larger.", "description": "Figure 2 illustrates the key improvements of TAPTRv3 over TAPTRv2.  (a) shows how TAPTRv2's point-level feature representation leads to ambiguous attention weights due to variations and distractions in the image.  The red point represents the target, and green points are the considered sampling points for attention. (b) demonstrates TAPTRv3's use of patch-level spatial context features, effectively mitigating distractions. (c) highlights TAPTRv2's limitation to short-term temporal attention. (d) shows TAPTRv3's improved long-term temporal attention mechanism that considers visibility (darker rectangle means higher visibility) for more accurate weighting.", "section": "1. Introduction"}, {"figure_path": "https://arxiv.org/html/2411.18671/x3.png", "caption": "Figure 3: \nOverview (a) and core components (b) (c) of TAPTRv3. After the user has specified the point to track, the point query preparation stage prepares the content feature and spatial context features for this point in the initial frame. When TAPTRv3 receives a new frame, the sequential point tracking stage will regard the content feature and the specified location as the point query, and regard the new frame\u2019s corresponding image feature map as a set of keys and values. The points query, keys, and values will be sent to the multi-layer transformer decoder to detect the tracking point in the new frame. The location prediction will further be used to update the point query\u2019s positional part, providing a better initial position for tracking in the next frame.\nFor clarity, the global matching module is not plotted.", "description": "Figure 3 illustrates the architecture of TAPTRv3, a point tracking model.  It consists of two main stages: Point Query Preparation and Sequential Point Tracking. In the preparation stage, when a user specifies a point to track in the initial frame, the model extracts the point's feature (content) and surrounding contextual features. This combined information forms the point query.  The sequential tracking stage then iteratively processes new frames.  For each new frame, the point query (content feature and location) and the frame's feature map (keys and values) are fed into a multi-layer transformer decoder. The decoder refines the point's location prediction which is then used to update the point query for the next frame, ensuring more accurate tracking.  Note that the global matching module, used to handle scene cuts, is not shown in this simplified diagram.", "section": "3. Method"}, {"figure_path": "https://arxiv.org/html/2411.18671/x4.png", "caption": "Figure 4: Illustration of patch-level similarity calculation.", "description": "Figure 4 illustrates the calculation of patch-level similarity within the Context-aware Cross-Attention (CCA) module of TAPTRv3.  The figure shows how, for each sampling point, a patch of surrounding context features (Km) is extracted from the image feature map. This patch is then compared with a corresponding patch of context features (C) centered at the query point. The comparison is done using an element-wise multiplication (producing Sm), which is then flattened and fed into an MLP to produce a similarity score (wm).  These scores represent the similarity between the query point and each sampling point in its spatial context, guiding the attention mechanism.", "section": "3.3. Context-aware Cross-Attention with APU"}, {"figure_path": "https://arxiv.org/html/2411.18671/x5.png", "caption": "Table 2: Ablations on key component. \u201cLTA\u201d refers to Long-Temporal Attention, \u201cVis.\u201d is short for visibility, \u201cNo Window\u201d indicates the removal of the sliding window, and \u201cNo Inv. Sup.\u201d represents no supervision of the invisible points\u2019 positions.", "description": "This ablation study analyzes the impact of key components in TAPTRv3 on its performance.  Specifically, it investigates the effects of Long-Temporal Attention (LTA), visibility information ('Vis.'), the sliding window mechanism ('No Window'), and supervision of invisible point positions ('No Inv. Sup.').  The table quantifies the impact of removing or modifying each of these components on the Average Jaccard (AJ), the average occlusion accuracy (<\u03b4avg), and the overall accuracy (OA) metrics.  The results highlight the contributions of each component to the model's overall robustness and accuracy.", "section": "4.4 Ablation Studies and Analysis"}, {"figure_path": "https://arxiv.org/html/2411.18671/x6.png", "caption": "Table 3: Ablation on patch-level similarity.", "description": "This table presents the ablation study results on different methods for calculating patch-level similarity used in the Context-aware Cross-Attention (CCA) module of TAPTRv3.  It compares three approaches: the element-wise method, using every pair of points, and the average approach. The results show that considering all pairs of points within the patches leads to the best performance, outperforming simpler methods.", "section": "4.4 Ablation Studies and Analysis"}, {"figure_path": "https://arxiv.org/html/2411.18671/x7.png", "caption": "Table 4: Ablation on context features updating.", "description": "This table presents ablation study results on different methods for updating context features in the Context-aware Cross-Attention (CCA) module of TAPTRv3.  It compares the performance using different update methods, focusing on the Average Jaccard index (AJ), the percentage of correctly classified occluded points (<daug), and the Overall Accuracy (OA).  The goal is to determine the optimal approach for updating spatial context features within the CCA module to improve the model's accuracy in tracking any point in a video.", "section": "4.4 Ablation Studies and Analysis"}, {"figure_path": "https://arxiv.org/html/2411.18671/x8.png", "caption": "Figure 5: \nVisualization of ground truth, TAPTRv3, and TAPTRv2. In the early stages of tracking, both TAPTRv2 and TAPTRv3 can produce accurate tracking results. As the camera shifts and the tracking points disappear from the video for an extended period (over 100 frames), TAPTRv2 completely loses the tracking, whereas TAPTRv3 maintains stable tracking. Best view in electronic version.", "description": "This figure visualizes a comparison of tracking performance between TAPTRv3 and TAPTRv2, along with the ground truth. The early frames show that both models accurately track the points. However, when the camera moves and the points are out of view for over 100 frames, TAPTRv2 fails to maintain the tracking, while TAPTRv3 consistently maintains stable tracking. This demonstrates TAPTRv3's enhanced robustness in challenging tracking scenarios.", "section": "5. Visualization"}, {"figure_path": "https://arxiv.org/html/2411.18671/x9.png", "caption": "Figure 6: \nDetailed visual illustration of global matching.", "description": "This figure provides a detailed visual explanation of the global matching process in TAPTRv3. It illustrates how the model uses the spatial context features to compute a more robust similarity map between the tracking point and the current frame's feature map, thereby improving the accuracy of global matching.", "section": "3. Method"}, {"figure_path": "https://arxiv.org/html/2411.18671/x10.png", "caption": "Figure 7: \nDetailed visual illustration of different methods for computing patch-level similarity.", "description": "This figure provides a detailed visual comparison of different methods for calculating patch-level similarity, a key component of the Context-aware Cross-Attention (CCA) module in TAPTRv3.  It illustrates the difference between the 'Every two points' method used in TAPTRv3, which considers pairwise similarity between all points in two patches, and the 'Element-wise' method, which only considers similarities between points at the same position in two patches. The figure highlights the process of generating similarity scores from patch features, showing how these scores are used to weigh the contribution of different sampling points in the attention mechanism. This visual aids in understanding the choice of the 'Every two points' method in TAPTRv3 for achieving superior performance in handling complex spatial variation.", "section": "3.3. Context-aware Cross-Attention with APU"}, {"figure_path": "https://arxiv.org/html/2411.18671/x11.png", "caption": "Figure 8: \nDetailed visual illustration of different methods for the updating of spatial context features.", "description": "Figure 8 illustrates the two different methods used in TAPTRv3 for updating spatial context features.  Method (a) uses VLTA (Visibility-aware Long-Temporal Attention) where each spatial context feature (Cn) is treated as a query, and VLTA attends to the refined content features of past frames to update it. This method leverages long-term temporal information and visibility to improve the quality of the update. Method (b) uses a simpler MLP (multilayer perceptron) approach to update the spatial context features. This method concatenates the current frame's spatial context features (Cn) with the point query's content feature and then updates them via the MLP. The figure visually compares these two strategies for updating spatial context features within the TAPTRv3 framework.", "section": "3.2 Visibility-aware Long-Temporal Attention"}, {"figure_path": "https://arxiv.org/html/2411.18671/x12.png", "caption": "Figure 9: \nVisual comparison between TAPTRv2 and TAPTRv3. Best view in electronic version. From the third image in the first row (36th frame), TAPTRv2 loses tracking of the turtle\u2019s flippers, and in the last few frames loses tracking of the turtle shell and the point on the fish below the turtle. TAPTRv3, on the other hand, maintains stable and accurate tracking throughout the video.", "description": "Figure 9 presents a visual comparison of TAPTRv2 and TAPTRv3's performance on a video of a turtle swimming underwater.  Starting from frame 36, TAPTRv2 begins to lose track of fine details such as the turtle's flippers. By the end of the video sequence, TAPTRv2 fails to track the shell of the turtle and a point marked on a fish beneath it. In contrast, TAPTRv3 maintains consistent and accurate tracking of all designated points throughout the entire video duration, demonstrating its improved robustness and accuracy.", "section": "4. Experiments"}, {"figure_path": "https://arxiv.org/html/2411.18671/x13.png", "caption": "Figure 10: \nVisual comparison between TAPTRv2 and TAPTRv3.\nBest view in electronic version. When the goldfish is about to swim out of the frame from right to left (119th frame), TAPTRv2 loses many target tracking points. Afterward, the goldfish swims back from left to right, and starting from the 358th frame, the video shows the other side of the goldfish, where the original target tracking points are occluded. However, TAPTRv2 incorrectly estimates them as visible or on another fish. TAPTRv3, on the other hand, maintains the correct estimation. Until the last dozens of frames, when the goldfish turns around again, TAPTRv3 successfully detects the initial target tracking points, estimates them as visible, and provides accurate positions.", "description": "This figure compares the performance of TAPTRv2 and TAPTRv3 in tracking a goldfish.  When the goldfish briefly leaves the frame, TAPTRv2 loses track of many points and incorrectly identifies occluded points as visible, even labeling them as being on a different fish.  In contrast, TAPTRv3 maintains accurate tracking throughout the sequence. Even when the goldfish is later viewed from a different angle, obscuring the originally tracked points, TAPTRv3 successfully recovers these points, demonstrating its enhanced robustness in handling challenging viewing conditions and occlusions.", "section": "4. Experiments"}, {"figure_path": "https://arxiv.org/html/2411.18671/x14.png", "caption": "Figure 11: \nVisual comparison between TAPTRv2 and TAPTRv3. Best view in electronic version. Over time, TAPTRv2 incorrectly estimates the location and visibility of points on jellyfish, and the error accumulates, while TAPTRv3\u2019s results are more accurate.", "description": "This figure compares the performance of TAPTRv2 and TAPTRv3 in tracking points on a jellyfish over time.  TAPTRv2's estimations of point location and visibility become increasingly inaccurate as the video progresses, with errors accumulating. In contrast, TAPTRv3 maintains significantly more accurate tracking throughout the video sequence.", "section": "5. Visualization"}]