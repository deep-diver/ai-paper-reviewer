[{"figure_path": "https://arxiv.org/html/2412.00131/x1.png", "caption": "Figure 1: The model architecture of the Open-Sora Plan consists of a VAE, a Diffusion Transformer, and conditional encoders. The conditional injection encoders enable precise manipulation of individual frames (whether it\u2019s the first frame, a subset of frames, or all frames) using designated structural signals, such as images, canny edges, depth maps, and sketches.", "description": "The figure illustrates the Open-Sora Plan's video generation model architecture. It's a three-part system: a Variational Autoencoder (VAE) compresses video frames into a low-dimensional latent space; a Diffusion Transformer processes these latent representations to generate new frames; and conditional encoders allow for fine-grained control over individual frames or sets of frames.  These encoders inject various structural signals (images, canny edges, depth maps, and sketches) directly into the generation process, enabling precise manipulation of the generated video's appearance based on the user's input.", "section": "Core Models of Open-Sora Plan"}, {"figure_path": "https://arxiv.org/html/2412.00131/x2.png", "caption": "Figure 2: Overview of WF-VAE. WF-VAE\u00a0[li2024wfvaeenhancingvideovae] consists of a backbone and a main energy path, with such a path injecting the main flow of video energy into the backbone through concatenations.", "description": "Figure 2 illustrates the architecture of the Wavelet-Flow Variational Autoencoder (WF-VAE).  The WF-VAE processes video data by using a multi-level Haar wavelet transform to decompose the video into different frequency components (low-frequency and high-frequency details). This decomposition allows for efficient processing and compression of the video data. A main energy path carries the core video information through the network, while the backbone integrates the processed wavelet components. The main energy path's information is combined with the backbone's output through concatenation, ensuring that important video features are preserved throughout the process. This design enhances training speed and reduces memory usage, making it efficient for handling high-resolution videos. ", "section": "2 Core Models of Open-Sora Plan"}, {"figure_path": "https://arxiv.org/html/2412.00131/x4.png", "caption": "Figure 3: Overview of the Joint Image-Video Skiparse Denoiser. The model learns the denoising process in a low-dimensional latent space, which is compressed from input videos via our Wavelet-Flow VAE. Text prompts and timesteps are injected into each Cross-DiT block layer equipped with 3D RoPE. Our Skiparse attention is applied to every layer except the first and last two layers.", "description": "The figure illustrates the architecture of the Joint Image-Video Skiparse Denoiser, a key component of the Open-Sora Plan video generation model.  The model operates in a low-dimensional latent space, derived from input videos compressed using the Wavelet-Flow VAE (Variational Autoencoder).  This latent space representation is processed through a series of Cross-DiT (Cross-Dimensional Transformer) blocks. Each block incorporates both text prompts and timestep information (indicating the stage of the denoising process), enhanced by a 3D Rotational Positional Encoding (ROPE) mechanism to handle spatio-temporal dependencies effectively. Notably, a Skiparse attention mechanism is implemented in all but the first and last two Cross-DiT blocks. This Skiparse attention is a computationally efficient variant of full 3D attention that enhances performance and reduces memory usage, making it suitable for large-scale video generation. ", "section": "2.2 Joint Image-Video Skiparse Denoiser"}, {"figure_path": "https://arxiv.org/html/2412.00131/x5.png", "caption": "Figure 4: Calculation process of Skiparse Attention with sparse ratio k=2\ud835\udc582k=2italic_k = 2 for example. In our Skiparse Attention operation, we alternately perform the Single Skip and the Group Skip operations, reducing the sequence length to 1/k1\ud835\udc581/k1 / italic_k compared to the original size in each operation.", "description": "Figure 4 illustrates the Skiparse Attention mechanism, a computationally efficient attention method used in the Open-Sora Plan's video generation model.  The figure uses a sparse ratio (k) of 2 to demonstrate how it reduces computational cost.  The core idea is to alternate between 'Single Skip' and 'Group Skip' operations. In a Single Skip operation, only every k-th token (in this case, every second token) participates in the attention calculation, reducing the number of attention computations.  The Group Skip operation groups tokens into blocks of size k and then selectively samples from these blocks to participate in the attention mechanism. By alternating these two skip operations, the effective sequence length is reduced to 1/k of the original, thus significantly decreasing the computational complexity.", "section": "2.2 Joint Image-Video Skiparse Denoiser"}, {"figure_path": "https://arxiv.org/html/2412.00131/x6.png", "caption": "Figure 5: The interacted sequence scope of different attention mechanisms. Various attention mainly differ in the number and position of selected tokens during attention computations.", "description": "Figure 5 illustrates the differences in how various attention mechanisms select tokens for processing within a sequence.  It visually compares four different attention methods: Full 3D Attention, 2+1D Attention, Skip + Window Attention, and Skiparse Attention (the proposed method).  Each method is shown alongside a visual representation of the sequence of tokens and which tokens are considered during the attention calculations.  The main difference between these methods lies in the number of tokens selected and their positions within the sequence, directly influencing computational cost and the scope of information considered for each attention operation.  The figure highlights that the Skiparse Attention method strikes a balance between computational efficiency and the ability to capture long-range dependencies, which is a key aspect of the paper's contribution.", "section": "2.2 Joint Image-Video Skiparse Denoiser"}, {"figure_path": "https://arxiv.org/html/2412.00131/x7.png", "caption": "Figure 6: Overview of our Image Condition Controller. Our Controller unifies multiple image conditional tasks including image-to-video, video transition, and video continuation in one framework when giving masks are changed.", "description": "The figure illustrates the architecture of an Image Condition Controller designed for versatile video generation tasks. It integrates multiple conditional inputs, including image-to-video generation, video transition, and video continuation.  The controller leverages a masked video input, allowing for precise manipulation of individual frames. The architecture comprises a VAE encoder to extract image features, which are then combined with latent noise and text embeddings in a Diffusion Transformer. The output is then passed through a VAE decoder to generate the desired video frames. The use of masks enables the unified handling of various image conditioning tasks within a single framework.", "section": "2.3 Conditional Controllers"}, {"figure_path": "https://arxiv.org/html/2412.00131/x8.png", "caption": "Figure 7: Overview of our Structure Condition Controller.\nThe structure Controller contains two light components including an encoder that focuses on extracting a high-level representation from the structural signals and a projector that transforms such representation into injection features.\nFinally, we directly add obtained injection features to the pre-trained model for structure control.", "description": "The Structure Condition Controller efficiently adds structural control to the base model by using two lightweight components: an encoder and a projector.  The encoder processes the structural signals (like canny edges, depth maps, or sketches) to extract a high-level representation. This representation is then transformed by the projector into injection features. These features are directly added to the pre-trained model's corresponding transformer block to enable structure control during video generation.", "section": "2.3 Structure Condition Controller"}, {"figure_path": "https://arxiv.org/html/2412.00131/x11.png", "caption": "(a)", "description": "The figure shows the distribution statistics of image datasets.  The first row presents histograms illustrating the distribution of aesthetic scores for three different datasets: Anytext, Human-images, and SAM. The second row displays histograms showing the distribution of resolutions (image dimensions) for the same three datasets.  The distributions reveal variations in aesthetic quality and resolution among the datasets.", "section": "4.4 Data Statistics"}, {"figure_path": "https://arxiv.org/html/2412.00131/x12.png", "caption": "(b)", "description": "Figure 12(b) shows the distribution statistics of video datasets used in the Open-Sora Plan project.  It presents three rows of histograms, each row representing a different aspect of the video data. The first row visualizes the distribution of video durations across various lengths. The second row displays the distribution of aesthetic scores assigned to the videos, reflecting their perceived visual quality.  The third row shows the distribution of video resolutions, indicating the variety of video dimensions included in the dataset. This figure helps to characterize the dataset used for training and evaluating the Open-Sora video generation model.", "section": "4.4 Data Statistics"}, {"figure_path": "https://arxiv.org/html/2412.00131/x13.png", "caption": "(c)", "description": "The figure shows a comparison among several state-of-the-art methods in Image-to-Video tasks.  Two example image-to-video generations are presented, each with the same prompt given to different models. This allows for a visual comparison of the quality and style of video generated by each model. Specifically, it highlights the differences in the realism, detail, and overall fidelity of the generated videos.", "section": "5.3 Condition Controllers"}, {"figure_path": "https://arxiv.org/html/2412.00131/x14.png", "caption": "(d)", "description": "The figure shows the distribution statistics of video datasets.  Specifically, the first row displays the distribution of video durations, the second row shows the distribution of aesthetic scores, and the third row shows the distribution of resolutions. Each row contains histograms for three different datasets: Panda70M, Stock Video, and VIDAL-10M.", "section": "4.4 Data Statistics"}, {"figure_path": "https://arxiv.org/html/2412.00131/x15.png", "caption": "(e)", "description": "This figure shows a comparison of different video generation methods on the task of generating videos from text descriptions. The figure shows several state-of-the-art methods, along with OpenSora, on two different video generation examples. Each example has multiple generated videos from multiple methods to visually compare their relative performance.", "section": "5.3 Condition Controllers"}, {"figure_path": "https://arxiv.org/html/2412.00131/x16.png", "caption": "(f)", "description": "This figure shows the qualitative comparison of several state-of-the-art video generation methods on a dynamic scene with motion blur. The ground truth video is compared to the results generated by WF-VAE-L(Chn=16), CogVideo-X(Chn=16), WF-VAE-L, WF-VAE-S, Allegro, and OD-VAE. The comparison highlights the differences in reconstruction quality and visual fidelity across different methods, demonstrating the superior performance of WF-VAE in handling dynamic scenes with motion blur.", "section": "5.1 Wavelet-Flow VAE"}, {"figure_path": "https://arxiv.org/html/2412.00131/x17.png", "caption": "(g)", "description": "This figure shows a qualitative comparison of several state-of-the-art video generation models on the task of generating videos from text prompts. The specific text prompt used is \"A cinematic wide portrait of a man with his face lit by the glow of a TV.\" The figure presents the generated videos by different models in a grid format, allowing for a direct visual comparison. The quality and style of the generated videos are assessed based on various factors such as realism, details, motion smoothness, and overall visual appeal.", "section": "5.3 Condition Controllers"}, {"figure_path": "https://arxiv.org/html/2412.00131/x18.png", "caption": "(h)", "description": "EMA of the variance of the maximum gradient norm.  This plot shows the exponential moving average (EMA) of the variance of the maximum gradient norm across all NPUs/GPUs. The EMA smooths out fluctuations in the variance, making it easier to see overall trends and identify potential issues.  A sudden increase in this value might indicate the presence of outliers in the training data or problems with the training process.", "section": "3.2 Adaptive Gradient Clipping Strategy"}, {"figure_path": "https://arxiv.org/html/2412.00131/x19.png", "caption": "Figure 8: Logging abnormal iterations during training. We resume training at step 75k and display logs from step 75k to 76k, noting an anomaly around step 75.6k. (a) Diffusion model loss during training. (b) Abnormal local batches discarded per step. (c) Gradient norm upper bound plotted based on a 3-sigma criterion. (d) Maximum gradient norm among all local batches. (e) Variance of the maximum gradient norm. Note that most steps involve values close to 0. (f) Maximum value of all processed gradient norms. (g) EMA of the maximum gradient norm. (h) EMA of the variance of the maximum gradient norm.", "description": "Figure 8 illustrates the effects of an anomaly detected during training of a diffusion model.  The training was resumed at step 75,000, and data from steps 75,000 to 76,000 are displayed.  A key anomaly is observed around step 75,600.  The figure shows eight plots:\n(a) The overall diffusion model loss during training.\n(b) Number of abnormal local batches discarded at each step.\n(c) Upper bound for the gradient norm, calculated using a 3-sigma criterion.\n(d) Maximum gradient norm across all local batches in each step.\n(e) Variance of the maximum gradient norm.\n(f) The maximum value of all processed gradient norms.\n(g) Exponential Moving Average (EMA) of the maximum gradient norm.\n(h) EMA of the variance of the maximum gradient norm. This detailed breakdown helps to visually understand how the proposed adaptive gradient clipping strategy responds to and mitigates anomalies during model training, preserving stability and output quality.", "section": "3 Assistant Strategies"}, {"figure_path": "https://arxiv.org/html/2412.00131/x20.png", "caption": "(a)", "description": "The figure shows the distribution statistics of image datasets. The first row displays the distribution of aesthetic scores, while the second row shows the distribution of resolutions.  Specifically, it presents the top 10 most frequent resolutions for the Anytext, Human-images, and SAM datasets, alongside histograms illustrating the distribution of aesthetic scores for each dataset.  The distributions reveal differences in terms of resolution variety and aesthetic score ranges across these datasets.  For example, the Anytext dataset shows a unified resolution (512x512), while Human-images and SAM demonstrate greater diversity in resolution and aesthetic scores.", "section": "4.4 Data Statistics"}, {"figure_path": "https://arxiv.org/html/2412.00131/x21.png", "caption": "(b)", "description": "This figure shows the distribution statistics of video datasets. The first row presents the distribution of video durations. The second row displays the distribution of aesthetic scores. The third row illustrates the distribution of resolutions.", "section": "4.4 Data Statistics"}]