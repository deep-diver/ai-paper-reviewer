[{"figure_path": "https://arxiv.org/html/2503.16375/x2.png", "caption": "Figure 1: Our model enables efficient, unbounded generation of large outdoor scene geometry. Scenes are textured with SceneTex\u00a0[6].", "description": "This figure showcases the capabilities of the model to generate expansive and coherent outdoor scenes efficiently.  It displays multiple examples of large-scale outdoor environments, demonstrating the model's ability to handle diverse scene geometries and details. The scenes presented include various elements, such as castles, high-rises, and natural landscapes, highlighting the model's capacity for generating complex and diverse environments. Note that the scenes in the image have been textured using SceneTex.", "section": "Abstract"}, {"figure_path": "https://arxiv.org/html/2503.16375/x3.png", "caption": "Figure 2: A scene generated by our model, trained on multiple scenes. We texture the scene using SceneTex. As shown, our model combines elements from different scenes in the dataset such as castles and skyscrapers. For the untextured mesh, please see the supplement (Figure\u00a016).", "description": "This figure showcases a scene generated by the model which is trained on multiple scenes from the NuiScene43 dataset. The scene demonstrates the model's ability to combine elements from diverse architectural styles, including castles and skyscrapers, into a cohesive whole.  The scene is textured using SceneTex. The supplemental material (Figure 16) provides a view of the untextured mesh for further analysis.", "section": "1. Introduction"}, {"figure_path": "https://arxiv.org/html/2503.16375/x4.png", "caption": "Figure 3: \nTo accommodate scene chunks of varying heights, vector sets offer a compact and uniform representation, whereas prior work relies on spatially structured latents that require scaling either the latent resolution or the chunk itself for compatibility, resulting in high memory usage or loss of detail.", "description": "This figure compares different latent representations used in generating 3D scenes with varying heights.  Spatially structured latents, such as triplanes, struggle with scenes containing varied heights. Scaling either the latent resolution or the chunk size to accommodate different heights leads to memory issues or loss of detail.  In contrast, vector sets provide a compact and uniform representation that efficiently handles scenes with varying heights, thus avoiding memory problems and detail loss.", "section": "3. Method"}, {"figure_path": "https://arxiv.org/html/2503.16375/x5.png", "caption": "Figure 4: Overview of our VAE and diffusion models. For the VAE we use vector sets\u00a0[49] for latent compression. For the diffusion model we train a conditional outpainting model with four different settings to allow for fast generation in a raster scan pattern during inference.", "description": "This figure illustrates the architecture of the VAE (Variational Autoencoder) and diffusion models used in the paper.  The VAE uses vector sets for efficient compression of the latent space, representing scene chunks as uniform vector sets instead of spatially structured latents which improves memory efficiency and performance. The diffusion model is designed for outpainting, allowing the model to efficiently generate unbounded scenes.  It incorporates four different conditioning settings during training to facilitate fast generation in a raster-scan pattern during inference. This ensures that the model can seamlessly generate new chunks of the scene by taking into account the previously generated parts. The diagram details the data flow for both the encoder and decoder stages in the VAE, as well as the input and output elements of the diffusion model, highlighting the conditional outpainting process.", "section": "3. Method"}, {"figure_path": "https://arxiv.org/html/2503.16375/x6.png", "caption": "Figure 5: A sample scene processed using our curation pipeline. The occupancy is processed with marching cubes to get the mesh.", "description": "This figure shows a sample scene after undergoing the data curation pipeline described in the paper.  The pipeline involves several steps, including filtering Objaverse to select high-quality scenes, establishing a consistent scale across scenes, and converting the mesh to an occupancy grid.  This occupancy grid is then used as input for the marching cubes algorithm, which generates a 3D mesh.  The resulting mesh is a more refined representation of the scene suitable for training the model.", "section": "3.1. Dataset"}, {"figure_path": "https://arxiv.org/html/2503.16375/x7.png", "caption": "Figure 6: We show generation results for the vector set and triplane baseline trained on a single scene. Orange boxes and zoomed-in renders highlight chunk outpainting coherence, while blue boxes illustrate scene geometry (zoom in for details). Zoomed-in renders may also have adjusted camera angles for clarity. The triplane model struggles with building details and introduces noisy artifacts, whereas the vector set model has better fidelity. While models can generate continuous chunks with smoothly connected roads and pipes (orange box, right), they sometimes fail to maintain coherence across chunks, leading to broken bridges (orange box, left).", "description": "This figure compares the performance of vector set and triplane methods for generating unbounded outdoor scenes.  The vector set method demonstrates superior performance in terms of detail and coherence, while the triplane method struggles with details and introduces artifacts.  The images highlight differences in how smoothly the models generate contiguous sections of the scene, particularly noticeable in the examples of road and bridge construction where the triplane model shows more errors. This is shown through both full-scene renders and zoomed-in sections for detailed analysis. ", "section": "3. Method"}, {"figure_path": "https://arxiv.org/html/2503.16375/x8.png", "caption": "Table 1: Comparison of VAE training resources for vector set vs triplane backbones. Training for all experiments was run on 2 L40S GPUs, total batch size and memory across 2 gpus are reported. The # Latents is the size of the latent for the VAE backbone and Output Res indicates the triplane size after deconvolution. Increasing the output triplane resolution to 3\u00d712823superscript12823\\times 128^{2}3 \u00d7 128 start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT causes the model to exceed memory limits (OOM).", "description": "This table compares the computational resources required for training a Variational Autoencoder (VAE) with two different latent representations: vector sets and triplanes.  The experiment used two NVIDIA L40S GPUs.  The table shows the batch size, the size of the latent vector (#Latents), the output resolution of the triplane after deconvolution (Output Res), training time, and GPU memory usage. It highlights that increasing the triplane resolution significantly increases memory consumption, resulting in an out-of-memory (OOM) error.", "section": "4. Experiment"}, {"figure_path": "https://arxiv.org/html/2503.16375/x9.png", "caption": "Table 2: Comparison of difffusion training resources of vector set representation against triplanes. Training across all experiments was run on 1 A6000 GPU. The # Tokens are the token length for the transformer.", "description": "This table compares the computational resources required for training diffusion models using two different latent representations: vector sets and triplanes.  The training was performed on a single NVIDIA A6000 GPU. The table shows the batch size used, the number of tokens in the transformer (related to model complexity), the total training time in hours, and the GPU memory (VRAM) used in gigabytes (GB). This allows for a comparison of the efficiency of each representation in terms of training time and memory usage.", "section": "4. Experiment"}, {"figure_path": "https://arxiv.org/html/2503.16375/x10.png", "caption": "Figure 7: We compare generation results using RePaint\u00a0[31] for outpainting for resampling steps r=1\ud835\udc5f1r=1italic_r = 1 and r=5\ud835\udc5f5r=5italic_r = 5.", "description": "This figure compares the results of using RePaint, a resampling-based inpainting method, with different numbers of resampling steps (r=1 and r=5) for generating unbounded scenes.  It visually demonstrates the impact of the number of resampling steps on the coherence and quality of the generated scene. More resampling steps generally lead to better coherence but at the cost of increased computational time.", "section": "4.4.2 Diffusion"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-texture-overview.png", "caption": "Figure 8: We present results from our NuiScene model trained on multiple scenes. In Figure (a), the top-right shows the generated geometry, while the top-left displays the textured model using SceneTex\u00a0[6]. We render these models and feed them into Trellis\u00a0[45] for reconstruction (zoom in to see details). It can be seen that our method showcases better geometric detail. Figure (b) presents a large scene generated by our model, showcasing its ability to blend elements from different scenes in the dataset.", "description": "Figure 8 demonstrates the NuiScene model's ability to generate large-scale outdoor scenes by blending elements from multiple source scenes.  Part (a) compares the model's output (top-right: raw geometry; top-left: textured using SceneTex) to the results of feeding the model's output into a separate 3D reconstruction model, Trellis [45]. This comparison highlights the superior geometric detail preserved by the NuiScene model. Part (b) showcases a complete scene generated by NuiScene, demonstrating its ability to seamlessly integrate elements from diverse input scenes, creating a cohesive and complex environment.", "section": "4.5. Multiple Scenes"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-texture-100.png", "caption": "Figure 9: Sample and depth mean deviation maps are calculated for sampling chunks from scenes. The sample map is a binary map defining valid x and z coordinates where quad chunks are fully occupied. And the depth mean variation map is used to filter out overly flat regions.", "description": "Figure 9 visualizes the process of selecting training data from scenes.  Two maps are generated for each scene: a sample map and a depth mean deviation map. The sample map is a binary representation, where '1' indicates fully occupied quad-chunk areas suitable for training data and '0' shows empty areas. This ensures that only meaningful chunks are selected, improving the quality and efficiency of training.  The depth mean deviation map provides a measure of depth variation within each chunk.  This map is used as a filter, excluding overly flat regions from training data, further increasing training data quality and mitigating potential bias towards less diverse data.", "section": "3.1. Dataset"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-texture-200.png", "caption": "Figure 10: Three additional scenes used to train our multi-scene model. The top two sub-scenes were split from the same scene in Objaverse for occupancy calculation. The shown scenes have been processed with fixed ground geometries, and their meshes were extracted using the marching cubes algorithm on the occupancy grid.", "description": "Figure 10 shows three additional scenes used to train the multi-scene model. The top two scenes are actually sub-parts from the same scene in the Objaverse dataset.  These three scenes were preprocessed to have consistent ground geometry before the meshes were extracted using the marching cubes algorithm from the occupancy grids.", "section": "3.1 Dataset"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-texture-250.png", "caption": "(a) An illustration of our choice for the camera trajectory, indicated by red arrows.", "description": "This figure illustrates the camera trajectory used for capturing images to generate textures for the scenes.  The red arrows show the path of the camera, which is designed as a snake-scan pattern to ensure comprehensive coverage of the scene's details. The long side of the trajectory covers 2 meters and consists of 200 frames, while the shorter side covers 0.5 meters and consists of 50 frames. The total number of frames depends on the scene's shape and size, ranging from approximately 1200 to 1800 frames.", "section": "S2.3. Details on Scene Texturing"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-texture-450.png", "caption": "(b) Image rendered at position (1).", "description": "This image shows a rendering of a scene from a specific camera position (position 1) as part of a camera trajectory used for capturing images to texture a large outdoor scene. The camera's trajectory is designed for comprehensive coverage of the scene's details and consists of multiple camera positions and viewpoints, ensuring that different parts of the scene are captured effectively. The rendered image provides a snapshot of the textured scene from one of the key viewpoints along this trajectory.", "section": "3.1 Dataset"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-scene-1.png", "caption": "(c) Image rendered at position (2).", "description": "This image is one of a series of images showing different viewpoints of a scene being rendered for texturing. The scene is an outdoor urban environment. The image shows a perspective view of the scene from a moderately high angle. The image is used to illustrate the sampling technique used for collecting data for training an AI model that creates similar scenes. This particular image shows a portion of a city with buildings and roads visible.", "section": "3.1 Dataset"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-textured-1.png", "caption": "(d) Image rendered at position (3).", "description": "This image shows one of the four viewpoints used in the creation of the camera trajectory for texturing the scene with SceneTex.  The camera is positioned to capture a particular section of the large-scale outdoor scene. The full trajectory consists of multiple such viewpoints, each captured as a frame to ensure comprehensive coverage for accurate and high-quality texture synthesis. The placement of the viewpoints is designed to follow a snake-scan like pattern, creating a systematic coverage of the entire scene.", "section": "3.1 Dataset"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-scene-2.png", "caption": "(e) Image rendered at position (4).", "description": "This image shows a rendering of a scene from a specific camera position in a simulated environment.  The camera is positioned as part of a snake-scan trajectory used for generating textures of large outdoor environments. This particular viewpoint is one of four shown to illustrate the comprehensive coverage of the scene provided by the chosen camera path.  The whole sequence of images taken along the path is used to generate textures for the outdoor scenes.", "section": "3.1 Dataset"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-textured-2.png", "caption": "Figure 11: An overview of our choice of the camera trajectory in Blender and the four images respectively rendered at position (1), (2), (3) and (4). We adopt a snake-scan trajectory pattern allowing for a more comprehensive coverage of the entire scene. The long side of the trajectory spans 2 meters at a fixed number of 200 frames, and the shorter side spans 0.5 meters for 50 frames. Depending on the shape of the scene, the total number of frames ranges from 1.2k to 1.8k.", "description": "This figure illustrates the camera trajectory used for capturing high-quality textures of outdoor scenes using SceneTex. A snake-scan pattern is employed, ensuring comprehensive scene coverage.  The longer side of the trajectory covers 2 meters across 200 frames, while the shorter side covers 0.5 meters in 50 frames. The total number of frames varies between 1200 and 1800 depending on scene dimensions. The figure displays four example images rendered from different viewpoints along this trajectory.", "section": "3.1 Dataset"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-scene-3.png", "caption": "(a) Generated scene (1).", "description": "This figure shows a generated scene from the NuiScene model.  The image showcases the model's ability to generate realistic outdoor environments, demonstrating the quality of the geometry produced by the model.  The generated scene includes a variety of elements, suggesting that the model has learned to combine different architectural styles and landscape features from its training data.", "section": "4. Experiment"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-textured-3.png", "caption": "(b) Textured scene (1).", "description": "This figure shows a textured 3D rendering of an outdoor scene generated by the model.  The scene depicts a variety of elements, such as a castle-like structure, and appears to be set in a rural or medieval-style environment. The texture applied adds a high level of visual detail to the scene, making it look realistic and immersive.", "section": "4.4. Single Scene"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-scene-4.png", "caption": "(c) Generated scene (2).", "description": "This figure shows a 21x21 chunk generated by the vector set diffusion model trained on a single scene.  The image showcases the model's ability to generate outdoor scenes with a variety of building styles and features, demonstrating its capacity for high-quality scene generation. Note that while the caption only says '(c) Generated Scene (2)', this image is part of a larger figure illustrating multiple generated scenes.", "section": "4.4 Single Scene"}, {"figure_path": "https://arxiv.org/html/2503.16375/extracted/6295304/figtab/Figures/Supplementary/fig-textured-4.png", "caption": "(d) Textured scene (2).", "description": "This figure shows a textured 3D rendering of a generated scene from the NuiScene model. The scene depicts a cityscape with various building types and surrounding environments. The texture is applied to the 3D model to create a more realistic and visually appealing representation of the generated scene.", "section": "4.5 Multiple Scenes"}, {"figure_path": "https://arxiv.org/html/2503.16375/x11.png", "caption": "(e) Generated scene (3).", "description": "This figure showcases a 3D scene generated by the NuiScene model.  The scene demonstrates the model's ability to generate realistic outdoor environments, including a variety of building styles and landscaping features. The image is part of a series presented to illustrate the model's capabilities in generating large-scale, coherent scenes from a dataset of diverse outdoor environments.", "section": "4.4. Single Scene"}, {"figure_path": "https://arxiv.org/html/2503.16375/x12.png", "caption": "(f) Textured scene (3).", "description": "This image displays a textured 3D rendering of an outdoor scene, generated by the model.  The scene shows a variety of architectural styles and landscaping, showcasing the model's ability to blend various elements seamlessly. This is one example in the supplementary material demonstrating the model's ability to generate visually appealing and realistic scenes. ", "section": "4. Experiment"}, {"figure_path": "https://arxiv.org/html/2503.16375/x13.png", "caption": "(g) Generated scene (4).", "description": "This figure shows a generated scene from the NuiScene model.  The scene depicts a modern city with buildings and trees, and features clouds in the sky. The image is part of a series demonstrating the model's ability to generate diverse and high-quality outdoor scenes.", "section": "4.4 Single Scene"}, {"figure_path": "https://arxiv.org/html/2503.16375/x14.png", "caption": "(h) Textured scene (4).", "description": "This image shows a textured 3D scene generated by the model, specifically scene number 4. The scene features a modern city with buildings and trees, and clouds in the sky.  This texture was applied using SceneTex, highlighting the model's ability to generate realistic and detailed outdoor environments.", "section": "4.4. Single Scene"}]