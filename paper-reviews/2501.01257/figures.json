[{"figure_path": "https://arxiv.org/html/2501.01257/x1.png", "caption": "Figure 1: The ELO rating leaderboard.", "description": "This figure shows the Elo ratings of 30 different large language models (LLMs) on the CODEELO benchmark.  The Elo rating system is used to rank the models based on their performance on a set of competitive programming problems. Higher Elo ratings indicate better performance.  The figure visually represents the ranking of the models, with the highest-performing models at the top.", "section": "4 Evaluation on Existing LLMs"}, {"figure_path": "https://arxiv.org/html/2501.01257/x2.png", "caption": "Figure 2: The Elo ratings using C++ and Python as programming languages.", "description": "This figure compares the Elo ratings achieved by several large language models (LLMs) when using C++ versus Python as the programming language for solving competitive coding problems.  It highlights the significant performance difference observed between the two languages, showing that models generally perform better when using C++.  This difference is attributed to the constraints on algorithm running time often imposed in competitive coding, where C++'s efficiency provides an advantage.", "section": "5 Analysis Experiments"}, {"figure_path": "https://arxiv.org/html/2501.01257/x3.png", "caption": "Figure 3: Violin plots of ratings across tested contests.", "description": "This violin plot visualizes the distribution of Elo ratings achieved by various large language models (LLMs) across multiple CodeForces contests.  Each violin represents a different LLM, showing the spread and central tendency of its Elo ratings. The wider parts of the violins indicate higher data density at that Elo rating range. The plot helps to compare the consistency and overall performance of different LLMs in competitive programming.", "section": "4 Evaluation on Existing LLMs"}, {"figure_path": "https://arxiv.org/html/2501.01257/x4.png", "caption": "Figure 4: An example of a problem in CodeForces. Each problem contains: 1) title, 2) time limit, 3) memory limit, 4) problem description, 5) input format, 6) output format, 7) test case examples, and 8) note (optional). This problem can be found at https://codeforces.com/contest/2034/problem/E.", "description": "Figure 4 presents a detailed breakdown of a typical problem from the CodeForces platform, which serves as the foundation for the CODEELO benchmark.  The image showcases the various components of a CodeForces problem, including the problem's title, constraints (time and memory limits), a comprehensive description of the problem's task and requirements,  specifications for input and output formats, sample test cases illustrating input and expected output, and an optional notes section that provides additional clarification or constraints. This example problem, accessible via the provided CodeForces link, highlights the structure and level of detail inherent in the problems used to evaluate the LLMs in the benchmark.", "section": "3 CODEELO Benchmark"}, {"figure_path": "https://arxiv.org/html/2501.01257/x5.png", "caption": "Figure 5: An example of a problem (examples and note parts are omitted) that needs a special judge since there can be multiple valid outputs for the same input (input and outputs refer to test cases but not problem and solutions). e.g., given the input \"abc\", acceptable outputs could include \"abb\", \"acc\", \"aac\", and any other string derived from \"abc\" except itself. So we cannot simply compare the output with a predetermined correct solution for evaluation in this problem. CodeForces addresses this by evaluating the code submissions directly on their official platform, marking its first support for this kind of problem. The complete problem can be found at https://codeforces.com/contest/2047/problem/B.", "description": "Figure 5 demonstrates a Codeforces problem requiring a special judge.  A special judge is necessary because multiple correct outputs exist for a single input. The example given shows that for the input \"abc\", outputs like \"abb\", \"aac\", and others derived from \"abc\" (excluding \"abc\" itself) are all valid.  Direct output comparison against a pre-defined solution is impossible; therefore, CodeForces's platform is used for evaluation, which directly supports problems needing special judges.", "section": "F Special Judge"}]