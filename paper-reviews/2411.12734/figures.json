[{"figure_path": "https://arxiv.org/html/2411.12734/x1.png", "caption": "Figure 1: SWIFT tackles the problem of high-speed dynamic in-hand partially non-prehensile manipulation with soft robotic hands. Using a soft multi-finger gripper, the robot grasps a pen. Then, using a learned action sequence, rapidly rotates the pen around a finger and catches it.", "description": "The figure demonstrates the SWIFT system performing dynamic in-hand pen spinning.  A soft robotic hand, specifically a soft multi-finger gripper, initially grasps a pen.  A learned action sequence then causes the robot to rapidly rotate the pen around one of its fingers before skillfully catching it. This showcases the system's ability to handle high-speed, partially non-prehensile manipulation tasks.", "section": "I. INTRODUCTION"}, {"figure_path": "https://arxiv.org/html/2411.12734/x2.png", "caption": "Figure 2: Multi-finger Omnidirectional End-effector (MOE). The soft hand we used is a three-finger variant of the MOE. Each finger has four tendons actuated by two servo motors, each motor controlling the finger in perpendicular directions.", "description": "The figure shows a three-fingered soft robotic hand, a variant of the Multi-finger Omnidirectional End-effector (MOE).  Each finger is composed of four tendons, controlled independently by two servo motors. Each motor's actuation moves the finger in a perpendicular direction relative to the other motor's actuation, providing flexibility and dexterity. The image displays both the unactuated and actuated states of the hand, highlighting how the tendons move the fingers. This setup is crucial for the pen-spinning experiments because of its compliant nature and ability to safely interact with the pen.", "section": "IV. METHODS"}, {"figure_path": "https://arxiv.org/html/2411.12734/x3.png", "caption": "Figure 3: Task progression over time. There are three main stages for each pen-spinning trajectory. We place the pen according to the blue slots fixed on the table, and the robot moves to grasp and move the pen to reach the pre-spin pose with g\ud835\udc54gitalic_g or pre-defined constant. The MOE fingers then execute s\ud835\udc60sitalic_s to attempt to spin the pen, and finger m\u20621\ud835\udc5a1m1italic_m 1 waits for d\ud835\udc51ditalic_d seconds before closing to catch the pen. Finally, the robot arm moves to the initial joint configuration, dropping the pen and restarting the cycle.", "description": "Figure 3 illustrates the pen-spinning process using a soft robotic hand.  The process starts with the pen placed in a designated slot. The robot arm then grasps the pen, adjusting its position (parameter 'g') before initiating a spinning motion controlled by parameters 's'.  A specific finger (m1) holds the pen during spinning for a defined duration ('d'). Finally, the hand catches the pen, the arm returns to its starting position, releasing the pen, and the cycle begins again.", "section": "IV. METHODS"}, {"figure_path": "https://arxiv.org/html/2411.12734/x4.png", "caption": "Figure 4: Our setup for pen spinning. Top: A 3-finger MOE soft robotic hand is attached to a 6 degree-of-freedom robot arm to develop a system that can safely interact with the pen and learn to spin it. An RGB-D camera is used to evaluate the performance of the sampled action based on the objective function.\nThe box catches the pen when it is dropped to simplify resetting the system for the next trial. Bottom: the length, radius, weight, and approximate center of mass of each object used in the experiment", "description": "Figure 4 shows the experimental setup for the pen-spinning task. The top panel depicts a 3-finger MOE soft robotic hand attached to a 6-DOF robotic arm. This setup allows for safe and controlled interaction with the pen during the learning process. An RGB-D camera is integrated to capture visual and depth data, enabling real-time feedback and state estimation to evaluate the success of the actions performed. A box is strategically placed to catch the pen when dropped, which simplifies the reset process and allows for efficient repeated trials. The bottom panel provides detailed information of dimensions and physical properties of each object used in the experiments (pens, brush and screwdriver). This includes their length, radius, weight, and approximate center of mass.", "section": "IV. METHODS"}, {"figure_path": "https://arxiv.org/html/2411.12734/x5.png", "caption": "Figure 5: SWIFT optimization pipeline. There are 4 main stages for each iteration k\ud835\udc58kitalic_k: 1) During grasping and resetting, the robot arm moves the MOE hand to a target grasp location following a specific grasping location gksubscript\ud835\udc54\ud835\udc58g_{k}italic_g start_POSTSUBSCRIPT italic_k end_POSTSUBSCRIPT. 2) The robot arm then moves the MOE hand to the pre-spin configuration, where the MOE fingers execute the parameterized action. 3) An RGB-D camera records the trial, and we apply masks from SAM-v2 to create a segmented point cloud. We then apply other post-processing of the point cloud to get the rotation and displacement state of the pen. 4) Lastly, the pipeline evaluates the objective function with observed states of the pen and updates the action parameters with the optimization algorithm CMA-ES.", "description": "Figure 5 illustrates the SWIFT (Soft-hand With In-hand Fast re-orienTation) optimization pipeline.  The process involves four main steps, repeated for each iteration (k): 1) The robotic arm positions the MOE (Multi-finger Omnidirectional End-effector) hand to grasp the pen at a specific location (g<sub>k</sub>), which may be optimized during the process. 2) The MOE hand is moved to a pre-spin position, and the parameterized action is executed by the hand's fingers. 3) An RGB-D camera captures the action.  SAM-v2 (Segment Anything v2) is used to segment the pen from the captured image, creating a point cloud that is then processed to determine the pen's rotation and displacement. 4) Finally, the objective function is evaluated using the observed pen state, and the action parameters are updated via the CMA-ES (Covariance Matrix Adaptation Evolution Strategy) optimization algorithm.", "section": "IV. METHODS"}, {"figure_path": "https://arxiv.org/html/2411.12734/x6.png", "caption": "Figure 6: Spinning visualization after optimization. Top row: pen 1 with balanced weights. Middle row: pen 2 with unbalanced weight. Bottom row: pen 3 with unbalanced weight. The circle in the initial frame indicates the center of mass for the pen.", "description": "This figure shows a series of images visualizing the successful pen spinning results after the optimization process. Each row represents a different pen (Pen 1, Pen 2, Pen 3), with Pen 1 having a balanced weight distribution while Pens 2 and 3 are unbalanced.  The images within each row capture the stages of the pen-spinning action, from initial grasp to successful final pose. A circle is overlaid in the initial frame on each pen to show the location of its center of mass.", "section": "V. EVALUATION"}, {"figure_path": "https://arxiv.org/html/2411.12734/x7.png", "caption": "Figure 7: Generalization to other objects. We applied SWIFT to other objects with more irregular shapes, such as a brush or a screwdriver. The circle in the initial frame indicates the approximated center of masses.", "description": "Figure 7 demonstrates the generalization capability of the SWIFT system.  Instead of only spinning pens, the system was tested on objects with more complex shapes and mass distributions: a brush and a screwdriver.  The images show the successful spinning of these objects, highlighting SWIFT's adaptability. The circle in the initial frame of each sequence marks the approximated center of mass for each object.", "section": "V. EVALUATION"}]