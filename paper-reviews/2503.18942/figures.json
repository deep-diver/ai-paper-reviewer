[{"figure_path": "https://arxiv.org/html/2503.18942/x2.png", "caption": "Figure 1: Video-T1: We present the generative effects and performance improvements of video generation under Test-Time Scaling (TTS) settings. The videos generated with TTS are of higher quality and more consistent with the prompt than those generated without TTS.", "description": "This figure demonstrates the impact of Test-Time Scaling (TTS) on video generation quality.  The top row showcases videos generated without TTS, while the bottom row shows videos generated using TTS.  The differences highlight how TTS leads to videos that are more faithful to the text prompt and exhibit improved visual coherence and overall quality. Specific examples include clearer image generation, more accurate object representation, and better adherence to the described actions.", "section": "1. Introduction"}, {"figure_path": "https://arxiv.org/html/2503.18942/x3.png", "caption": "Figure 2: Results of Test-Time Scaling for Video Generation. As the number of samples in the search space increases by scaling test-time computation (TTS), the models\u2019 performance exhibits consistent improvement (In the bar chart, light colors correspond to the results without TTS, while dark colors represent the improvement after TTS.).", "description": "This figure displays the results of applying test-time scaling (TTS) to video generation.  The bar chart shows the total score improvement across different video generation models (Pyramid-Flow (SD3), Pyramid-Flow (Flux), CogVideoX-2B, CogVideoX-5B, and OpenSora v1.2) as the number of samples in the search space increases.  The light colored bars represent the model performance *without* TTS, and the dark colored bars show the *improvement* in total score achieved *with* TTS. This visually demonstrates the consistent performance gains obtained by increasing the computation during the testing phase, enhancing the quality of the generated videos.", "section": "Results"}, {"figure_path": "https://arxiv.org/html/2503.18942/x4.png", "caption": "Figure 3: Pipeline of Tes-Time Scaling for Video Generation. Top: Random Linear Search for TTS video generation is to randomly sample Gaussian noises, prompt the video generator to generate sequential of video clips through step-by-step denoising in a linear manner, and select the highest score form the test verifiers. Bottom: Tree of Frames (ToF) Search for TTS video generation is to divide the video generation process into three stages: (a) the first stage performs image-level alignment that influences the later frames; (b) the second stage is to apply dynamic prompt in test verifiers \ud835\udcb1\ud835\udcb1\\mathcal{V}caligraphic_V to focus on motion stability, physical plausibility to provide feedback that guides heuristic searching process; (c) the last stage assesses the overall quality of the video and select the video with highest alignment with text prompts.", "description": "This figure illustrates the pipeline of Test-Time Scaling (TTS) for video generation.  The top part depicts the Random Linear Search method, where Gaussian noise is sampled, fed into a video generator for step-by-step denoising, and the resulting video is evaluated by verifiers. The highest-scoring video is chosen. The bottom half shows the Tree-of-Frames (ToF) Search method which involves three stages. Stage 1: Initial image-level alignment, influencing subsequent frames. Stage 2: Dynamic prompt is applied, focusing on motion stability and physical plausibility within the test verifiers. The resulting feedback guides the search process. Stage 3: Final evaluation of video quality, selecting the video with the highest text-prompt alignment.", "section": "3. Method"}, {"figure_path": "https://arxiv.org/html/2503.18942/x5.png", "caption": "Figure 4: Performance of random linear search on different video models and verifiers. The top row displays results for autoregressive models, while the bottom row shows diffusion-based models. The initial points of the curves represent the random video sample results without TTS. The models are arranged in order of increasing parameter count from left to right; different colored curves represent the performance trends under various verifiers, and the gray dashed line corresponds to the baseline established by VBench, which serves as a ground-truth verifier.", "description": "This figure showcases the results of applying a random linear search method for test-time scaling (TTS) on six different video generation models.  The models are categorized into autoregressive (top row) and diffusion-based (bottom row) models, and are presented in ascending order of their parameter size. Each model's performance is evaluated using four different verifiers (represented by distinct colored lines). The gray dashed line signifies the performance baseline set by VBench, a ground-truth verifier that serves as a point of comparison. The starting point of each colored line indicates the quality of videos generated without TTS (test-time scaling). The subsequent points illustrate the performance improvement as the TTS computation budget (and therefore the number of samples explored) increases.", "section": "4.1. Experiment Setup"}, {"figure_path": "https://arxiv.org/html/2503.18942/x6.png", "caption": "Figure 5: Comparison between random linear search and ToF search. The red curve represents random linear search. The blue curve represents ToF search, with the dashed line being the predicted curve from a geometric series decay approximation. Curve fitting reveals that similar subsequent trends tend to converge to an upper limit.", "description": "Figure 5 compares the performance of two test-time scaling (TTS) search algorithms: random linear search and Tree-of-Frames (ToF) search.  The graph plots the total VBench score (a metric for video quality) against the amount of computational resources used (NFE).  The red curve shows the performance of random linear search, where increasing computation leads to incremental improvements in video quality but at a diminishing rate of return.  The blue curve illustrates the performance of ToF search, which demonstrates significantly better efficiency.  The dashed blue line represents a geometric series decay approximation fitted to the ToF search curve. This highlights that the ToF search converges to a maximum quality score more efficiently, indicating better resource utilization.  The convergence suggests that beyond a certain computational budget, additional resources offer minimal quality improvement.", "section": "4.1. Experiment Setup"}, {"figure_path": "https://arxiv.org/html/2503.18942/x7.png", "caption": "Figure 6: Qualitative TTS performance improvement ratio on different complexities of prompts across different video generation models across diverse benchmark dimensions of Vbench.", "description": "This figure displays a bar chart visualizing the percentage improvement in video generation quality achieved by Test-Time Scaling (TTS) across various model complexities and benchmark dimensions.  Each bar represents a specific model (e.g., NOVA, Pyramid-Flow) and benchmark dimension (e.g., scene, object class, motion), showing the percentage increase in the VBench score after applying TTS. The various colors within each bar indicate the use of different verifiers. The figure highlights how TTS enhances performance differently across various video generation models and benchmark dimensions, providing insights into the effectiveness of TTS in different scenarios.", "section": "4.1 Experiment Setup"}, {"figure_path": "https://arxiv.org/html/2503.18942/extracted/6305288/assets/failure.jpg", "caption": "Figure 7: Using TTS, the small model (Pyramid-Flow) achieves scores that are close to, or even exceed, those of the 13B large model (HunyuanVideo) in many dimensions. The gray dashed horizontal line in the figures indicates HunyuanVideo\u2019s score in that dimension.", "description": "Figure 7 presents a comparison of performance between a smaller video generation model (Pyramid-Flow) and a significantly larger model (HunyuanVideo) when using test-time scaling (TTS).  The figure shows that with increased computational resources allocated during inference (via TTS), the smaller Pyramid-Flow model achieves results comparable to or even surpassing those of the much larger 13B parameter HunyuanVideo model across multiple evaluation metrics. The gray dashed lines in each subplot represent the baseline performance of the HunyuanVideo model on that specific dimension, providing a clear visual comparison to the performance of the smaller model when utilizing TTS.", "section": "4.1 Experiment"}, {"figure_path": "https://arxiv.org/html/2503.18942/x8.png", "caption": "Figure 8: Failure cases on prompt \u201cA person is clapping\u201d.", "description": "Figure 8 shows examples where the test-time scaling (TTS) method does not improve video generation quality.  The figure displays several video frames generated from the prompt \u201cA person is clapping.\u201d  Even with increased inference-time computation, the model struggles to generate realistic hand movements. This illustrates that model limitations can constrain the effectiveness of the TTS method, particularly for complex actions.", "section": "B. More Experiments"}, {"figure_path": "https://arxiv.org/html/2503.18942/x9.png", "caption": "Figure 9: Verifications during TTS process.", "description": "This figure illustrates the hierarchical verification process within the Tree-of-Frames (ToF) search algorithm during test-time scaling (TTS).  The example shows a video generation task prompted by the text \"a bear climbing a tree.\" The ToF approach breaks down the video generation into three stages: (1) generation of the initial frame, (2) generation of intermediate frames, and (3) generation of the final frame.  At each stage, a verifier assesses the generated frames against the corresponding portion of the prompt. The verifier output, either \"Yes\" (successful) or \"No\" (unsuccessful), guides the progress of the search process. The flow demonstrates that the ToF method provides feedback in a step-wise manner during the video generation, refining the output to align with the prompt by verifying each stage sequentially.", "section": "3. Method"}, {"figure_path": "https://arxiv.org/html/2503.18942/x10.png", "caption": "Figure 10: TTS performance on Appearance Style across diverse verifiers.", "description": "Figure 10 presents the results of applying test-time scaling (TTS) to improve the \"Appearance Style\" aspect of video generation.  It shows how different video generation models perform across various evaluation metrics (verifiers) as the amount of computation allocated at test time increases.  The graphs illustrate the consistent improvement in appearance quality achieved by increasing the computational budget, highlighting the effectiveness of TTS for enhancing this specific visual attribute.", "section": "4.1 Experiment Setup"}, {"figure_path": "https://arxiv.org/html/2503.18942/x11.png", "caption": "Figure 11: TTS performance on Aesthetic Quality across diverse verifiers.", "description": "This figure displays the results of test-time scaling (TTS) on the aesthetic quality of videos generated by six different video generation models.  Each model is evaluated using four different verifiers (VBench, VideoLLaMa3, VisionReward, and VideoScore), which assess the videos' quality from different perspectives.  The x-axis represents the increasing computational cost (measured in NFE, number of function evaluations) during inference as the TTS is applied. The y-axis shows the corresponding aesthetic quality scores. The graphs illustrate how the aesthetic quality of the videos improves consistently as more computational resources are allocated during the test phase (increased NFE).  The different verifiers show varying degrees of improvement, highlighting the diverse aspects of video quality assessment.", "section": "4.1 Experiment Setup"}, {"figure_path": "https://arxiv.org/html/2503.18942/x12.png", "caption": "Figure 12: TTS performance on Color across diverse verifiers.", "description": "Figure 12 presents the results of applying Test-Time Scaling (TTS) to enhance color generation in videos. It displays the performance of different video generation models (NOVA, OpenSora v1.2, Pyramid-Flow (SD3), Pyramid-Flow (Flux), CogVideoX-2B, and CogVideoX-5B) across various verifiers (VBench, VideoLLaMa3, VisionReward, and VideoScore). The x-axis represents the computational cost (NFE), and the y-axis shows the performance score on the 'Color' dimension of the VBench benchmark. Each line represents a different video generation model, with different colors representing the different verifiers used to evaluate model performance. The figure demonstrates how increasing test-time computation generally improves the quality of color generation across various models and verifiers.", "section": "4.1 Experiment Setup"}, {"figure_path": "https://arxiv.org/html/2503.18942/x13.png", "caption": "Figure 13: More visual results during TTS process on Pyramid-Flow. From left to right, each row of frames are extracted from a video sequence. From top to bottom, each row represents the output video results of TTS with an increasing number of samples.", "description": "This figure shows the results of applying Test-Time Scaling (TTS) to video generation using the Pyramid-Flow model. Each set of images represents a short video clip, with each row representing a different number of samples used during the TTS process.  As the number of samples increases (from top to bottom), the quality and coherence of the generated videos improves. This demonstrates the effectiveness of TTS in enhancing the quality of video generation.", "section": "4.1 Experiment Setup"}, {"figure_path": "https://arxiv.org/html/2503.18942/x14.png", "caption": "Figure 14: More visual results during TTS process on Pyramid-Flow. The TTS method can effectively alleviate common issues in video generation, such as those related to human motion and complex movements.", "description": "This figure showcases several video sequences generated using the Pyramid-Flow model with the Test-Time Scaling (TTS) technique.  Each row presents a different number of samples used during the TTS process, illustrating how increased computation at inference time enhances the video generation.  The videos in the figure demonstrate improvements in the overall quality, especially in handling complex movements and human motion, which are often challenging aspects of video generation. The results illustrate how TTS helps to effectively address common issues encountered when generating videos, resulting in smoother and more realistic movement.", "section": "4. Experiment"}, {"figure_path": "https://arxiv.org/html/2503.18942/x15.png", "caption": "Figure 15: More visual results during TTS process on CogVideoX-5B.", "description": "This figure displays several example videos generated using the CogVideoX-5B model with the Test-Time Scaling (TTS) method.  Each set of images shows a sequence of frames from a single video, progressing from left to right.  Multiple rows show the same video generated with increasing computational resources allocated at inference time. The differences in quality and consistency demonstrate the impact of TTS on the overall video generation quality.", "section": "4.1. Experiment Setup"}, {"figure_path": "https://arxiv.org/html/2503.18942/x16.png", "caption": "Figure 16: More visual results during TTS process on CogVideoX-5B.", "description": "This figure showcases additional visual results obtained from employing the Test-Time Scaling (TTS) method on the CogVideoX-5B model.  The images demonstrate the enhanced video generation quality achieved through TTS by displaying multiple frames extracted from videos generated with increasing computational budget. Each row represents a separate video and shows the progression of generation quality as more computational resources are used during inference.", "section": "4. Experiment"}, {"figure_path": "https://arxiv.org/html/2503.18942/x17.png", "caption": "Figure 17: More visual results during TTS process on CogVideoX-2B. The TTS method can help to enhance multi-object spatial perception.", "description": "This figure showcases the improved multi-object spatial perception achieved by applying Test-Time Scaling (TTS) to the CogVideoX-2B model.  It presents several example video generations, each showing an increase in the quality and accuracy of the scene's spatial arrangement as the computational resources allocated to TTS are increased.  The images illustrate that with more compute at inference time, the model more accurately represents the relationships between objects specified in the text prompt (e.g., an apple correctly positioned on a sandwich). This demonstrates the effectiveness of TTS in refining detailed aspects of video generation, beyond just overall visual quality.", "section": "4.1. Experiment Setup"}]