[{"figure_path": "https://arxiv.org/html/2411.02335/x1.png", "caption": "Figure 1: A typical case of activation sparsity (with a sparsity ratio of 60%) in a gated feed-forward network of LLMs, where considerable elements weakly contribute to the outputs within the activation scores.", "description": "Figure 1 illustrates activation sparsity in a large language model (LLM).  The gated feed-forward network within the LLM processes input, and the activation function produces an output. In this example, a significant portion (60%) of the activation function's output consists of elements with weak contributions to the final output. These weakly-contributing elements represent the activation sparsity, and they can be eliminated for potential computational gains or model interpretation improvements.", "section": "1 INTRODUCTION"}, {"figure_path": "https://arxiv.org/html/2411.02335/x2.png", "caption": "Figure 2: The PPL-activation Pareto curve of the 0.1B MoE with different expert numbers versus the 0.1B vanilla decoder-only Transformer.", "description": "This figure illustrates the Pareto curves that show the trade-off between activation sparsity and model perplexity (PPL) for different models.  The 0.1B parameter MoE (Mixture-of-Experts) model is shown with varying numbers of experts (16, 30, and 60), while the vanilla 0.1B parameter decoder-only Transformer serves as a baseline for comparison.  The x-axis represents the activation ratio (1-sparsity ratio), indicating the proportion of activated neurons. The y-axis represents the perplexity, a measure of the model's prediction accuracy.  Lower perplexity indicates better performance, while a higher activation ratio implies lower sparsity. The curves reveal the performance-sparsity trade-off, demonstrating that increasing activation sparsity often comes at the cost of higher perplexity (reduced performance). The comparison highlights the performance-sparsity trade-off differences between MoE and vanilla models.", "section": "1 INTRODUCTION"}, {"figure_path": "https://arxiv.org/html/2411.02335/x3.png", "caption": "Figure 3: The PPL-activation Pareto curve of our PPL-p%percent\ud835\udc5dp\\%italic_p % sparsity versus two baselines within models of different scales. \u201cStraightforward ReLU\u201d is only applicable to ReLU-activated models.", "description": "Figure 3 illustrates the performance-sparsity trade-off for different activation sparsity metrics across various model sizes (0.1B, 0.2B, 0.4B, 0.8B, and 1.2B parameters). It compares the proposed PPL-p% sparsity metric with two baseline methods: a straightforward ReLU-based method (applicable only to ReLU-activated models) and a Top-k sparsity method. The x-axis represents the activation ratio (1 - sparsity ratio), indicating the proportion of activated neurons, and the y-axis shows the perplexity (PPL), a measure of model performance.  Each curve represents a different model scale, and each point shows the perplexity given the activation ratio achieved by the corresponding method. This figure demonstrates the effectiveness of the PPL-p% sparsity metric in achieving a better balance between performance and sparsity compared to simpler approaches.", "section": "4 Experiments"}, {"figure_path": "https://arxiv.org/html/2411.02335/x4.png", "caption": "Figure 4: The trend of activation ratios (hereinafter using PPL-1%percent11\\%1 % sparsity) of models with different scales and activation functions during the pre-training stage. The fitted curves are plotted in brown. The number of training tokens is no less than 190 times the scale of non-embedding parameters.", "description": "This figure displays the relationship between activation ratio and the amount of training data for large language models (LLMs) using different activation functions (ReLU and SiLU) and model sizes.  The activation ratio, calculated using the PPL-1% sparsity metric, represents the proportion of activated neurons in the model.  The x-axis shows the number of tokens (in billions) processed during training, and the y-axis shows the activation ratio.  Each line represents a different model size (0.1B, 0.2B, 0.4B, 0.8B, and 1.2B parameters).  The brown lines represent curves fitted to the data points.  The number of training tokens used was at least 190 times the number of non-embedding parameters in each model.  This demonstrates how activation sparsity evolves during training and differs based on activation function and model size.", "section": "4.2 ACTIVATION SPARSITY WITH THE AMOUNT OF TRAINING DATA AND ACTIVATION FUNCTIONS"}, {"figure_path": "https://arxiv.org/html/2411.02335/x5.png", "caption": "Figure 5: The limit activation ratios on 0.1B ReLU-activated models.", "description": "This figure shows the limit activation ratio for a 0.1B parameter ReLU-activated model across various width-depth ratios.  The limit activation ratio represents the sparsity level the model converges to with an infinite amount of training data. The x-axis represents the width-depth ratio (hidden dimension divided by number of layers).  The y-axis displays the limit activation ratio. The plot illustrates the relationship between the model's architecture (width-depth ratio) and its resulting activation sparsity when sufficient training data is used.", "section": "4.3 ACTIVATION SPARSITY WITH THE WIDTH-DEPTH RATIO"}, {"figure_path": "https://arxiv.org/html/2411.02335/x6.png", "caption": "Figure 6: The limit training loss on 0.1B ReLU-activated models.", "description": "This figure shows the relationship between the width-depth ratio and the training loss of a 0.1B parameter ReLU-activated model after extensive training.  The width-depth ratio is the ratio of the hidden dimension to the number of layers in the transformer model. The x-axis represents different width-depth ratios, and the y-axis represents the training loss (limit value after extensive training). The graph illustrates that there's a minimum training loss within a specific range of width-depth ratios, indicating an optimal model architecture for this specific configuration.  Outside of this range, the training loss increases, implying that a wider or narrower architecture can negatively impact performance.", "section": "4.3 ACTIVATION SPARSITY WITH THE WIDTH-DEPTH RATIO"}, {"figure_path": "https://arxiv.org/html/2411.02335/x7.png", "caption": "Figure 7: The limit activation ratio for pre-trained models with different scales and activation functions.", "description": "This figure shows the limit of activation sparsity (activation ratio) for pre-trained language models with varying parameter scales and activation functions.  The limit represents the activation ratio as the amount of training data approaches infinity.  Separate lines are plotted to show the values for models using the ReLU activation function and those using the SiLU activation function.  The x-axis shows the parameter scale of the model, and the y-axis displays the limit activation ratio. This helps in understanding the relationship between model scale, activation function choice, and the resulting sparsity.", "section": "4.4 ACTIVATION SPARSITY WITH THE PARAMETER SCALE"}, {"figure_path": "https://arxiv.org/html/2411.02335/x8.png", "caption": "Figure 8: The derivative trends of the sparsity-data curve with the increase of data-scale ratio, within ReLU/SiLU models of distinct scales.", "description": "Figure 8 shows how the rate of change in activation sparsity changes as the amount of training data increases relative to the model size (parameter scale). Separate lines are plotted for both ReLU and SiLU activation functions, and different colored lines represent models of varying sizes (0.1B, 0.2B, 0.4B, 0.8B, 1.2B parameters).  The figure visualizes the convergence speed towards a limit of sparsity as training data increases.  It shows that smaller models reach their sparsity limits faster than larger models.", "section": "4.4 ACTIVATION SPARSITY WITH THE PARAMETER SCALE"}, {"figure_path": "https://arxiv.org/html/2411.02335/x9.png", "caption": "Figure 9: The distribution of the neuron activation frequencies within models of distinct scales. Four datasets from the pre-training data are involved.", "description": "Figure 9 illustrates the distribution of neuron activation frequencies across models of varying sizes (0.1B, 0.2B, 0.4B, 0.8B, and 1.2B parameters).  The analysis focuses on how frequently each neuron is activated during the model's pre-training phase. To provide context, the data is partitioned into four distinct datasets used in the pre-training process: Code, Wikipedia, Math, and Chinese. This visualization helps to understand whether activation patterns remain consistent across different model scales and datasets, offering insights into the scaling properties of neuron activation behavior.", "section": "4.4 ACTIVATION SPARSITY WITH THE PARAMETER SCALE"}, {"figure_path": "https://arxiv.org/html/2411.02335/extracted/5975868/figures/token-dist.jpg", "caption": "Figure 10: The activation ratio (%) distributions of 71,549 tokens sampled from the vocabulary. We conduct a pair-wise comparison of the average activation ratio of each token within models of different scales. Note that the red line is the y=x\ud835\udc66\ud835\udc65y=xitalic_y = italic_x curve.", "description": "Figure 10 visually examines the consistency of activation patterns across various model scales.  It displays the distribution of activation ratios for 71,549 randomly selected tokens from the vocabulary. A pairwise comparison is made showing the average activation ratio of each token across models of different sizes (0.1B, 0.2B, 0.4B, 0.8B, and 1.2B parameters) for both ReLU and SiLU activation functions. The red line represents a perfect correlation (y=x), indicating identical activation ratios across models. Deviations from this line highlight differences in activation behavior across different parameter scales for specific tokens.", "section": "4.4 ACTIVATION SPARSITY WITH THE PARAMETER SCALE"}, {"figure_path": "https://arxiv.org/html/2411.02335/x10.png", "caption": "Figure 11: The trend of pre-training loss for models with different scales and activations.", "description": "This figure visualizes the training loss curves for different sized language models during the pre-training phase.  The models vary in scale (0.1B, 0.2B, 0.4B, 0.8B, and 1.2B parameters) and use either ReLU or SiLU activation functions. The x-axis represents the number of tokens processed during training, and the y-axis shows the training loss. This allows for a comparison of the training dynamics across various model sizes and activation functions.", "section": "A TRAINING LOSS DYNAMICS"}, {"figure_path": "https://arxiv.org/html/2411.02335/x11.png", "caption": "Figure 12: The limits of the training loss with the amount of training data approaches infinity.", "description": "This figure shows the convergence points of training loss for different model sizes and activation functions as the amount of training data approaches infinity.  It illustrates the minimum achievable training loss for each model configuration, indicating the potential efficiency limits for each.", "section": "4.2 Activation Sparsity with the Amount of Training Data and Activation Functions"}, {"figure_path": "https://arxiv.org/html/2411.02335/x12.png", "caption": "Algorithm 1  Find the CETT value for PPL-p%percent\ud835\udc5dp\\%italic_p % sparsity", "description": "The algorithm performs a binary search to find an optimal cumulative error of tail truncation (CETT) value.  This CETT value, when applied to a list of model checkpoints, results in an increase of the average perplexity (PPL) by a specified percentage (p%). The algorithm iteratively adjusts the CETT value, evaluating the average PPL on a validation dataset for each adjustment. The process continues until the desired PPL increase is achieved within a specified error tolerance.  The final CETT value represents the sparsity level that balances model performance and sparsity.", "section": "3.1 Metric of Activation Sparsity"}]