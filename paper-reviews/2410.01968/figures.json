[{"figure_path": "2410.01968/figures/figures_4_0.png", "caption": "Figure 1: Structure of the proposed self-consistent auto-encoder (SCAE). The encoder enc first encodes the original trajectory Tt into latent space zt. Fourier transformation is then applied to zt to get latent parameters 0t = (ft, at, bt) while a separate MLP module learns t. A sinusoidal function reconstructs the latent embedding 2t, followed by the decoder dec recovering the input trajectory ft. Particularly, we re-input ft to the encoder to obtain reconstructed latent embedding 2t. Therefore, SCAE consists of both motion and latent reconstruction losses, as indicated by red arrows. We follow FLD to make multi-step predictions and thus the final loss sums Lo,\u2026\u2026, LN.", "description": "Figure 1 illustrates the architecture of the self-consistent auto-encoder (SCAE), which encodes motion trajectories into a latent space, performs Fourier transformation to extract latent parameters, reconstructs latent embeddings, and decodes the embeddings to reconstruct the original trajectories, using both motion and latent reconstruction losses for training.", "section": "4.1 Self-Consistent Latent Dynamics"}, {"figure_path": "2410.01968/figures/figures_5_0.png", "caption": "Figure 2: Bi-level motion fine-tuning (BMI) optimizes both the robot policy and the decoder alternatively. The learning begins by sampling from the learned latent space p(z) and decoding these latent samples into target reference motions for robot imitation. The decoder's loss function comprises two components, as indicated by the red arrows: (1) the mean squared error (MSE) between the robot's trajectory and the decoded trajectory, and (2) the latent reconstruction error between the sampled latent embeddings zt and the embeddings of the decoded trajectories zt.", "description": "The figure illustrates the bi-level motion fine-tuning process, showing how the robot policy and decoder are optimized alternately to generate physically consistent reference motions for robot imitation.", "section": "4.3 Bi-Level Fine-Tuning"}, {"figure_path": "2410.01968/figures/figures_7_0.png", "caption": "Figure 4: The figure displays the learned latent phases of four motions. Each circle represents a latent channel where the radius is the amplitude and the black bar is the phase timing. Compared to FLD, SCAE takes fewer frequency components and lower amplitudes to represent the same motion.", "description": "The figure compares the learned latent phases of four motions using FLD and SCAE, showing that SCAE uses fewer frequency components and lower amplitudes to represent the same motions.", "section": "5.1 Latent Dynamics Model Learning"}, {"figure_path": "2410.01968/figures/figures_7_1.png", "caption": "Figure 5: The figure shows the latent manifolds for 13 motions. Each color corresponds to a trajectory segment from a motion type. The arrows denote the motion evolution direction. The manifold induced by SCAE shows consistent structures across different motions.", "description": "Figure 5 visualizes the latent manifolds learned by FLD and SCAE for 13 different motions, showing that SCAE learns more consistent and structured latent representations.", "section": "5.1 Latent Dynamics Model Learning"}, {"figure_path": "2410.01968/figures/figures_11_0.png", "caption": "Figure 7: Multi-step forward prediction structure of FLD.", "description": "Figure 7 illustrates the multi-step forward prediction structure of the Fourier Latent Dynamics (FLD) model, showing how it uses a combination of convolutional layers, latent embedding, Fourier transforms, and sinusoidal reconstruction to predict subsequent trajectory segments.", "section": "A.1 Structure of FLD"}, {"figure_path": "2410.01968/figures/figures_17_0.png", "caption": "Figure 9: Learned latent phases of 13 different motions. From top to bottom, the motions are: run, jog, step fast, jump, spin-kick, back, side left, jog slow, side right, cross-over, kick, stride, step.", "description": "The figure visualizes the learned latent phases of thirteen different motions using two different methods, FLD and SCAE, showing that SCAE learns a much sparser representation.", "section": "A.4.2 More Results on Latent Dynamics Model Learning"}, {"figure_path": "2410.01968/figures/figures_18_0.png", "caption": "Figure 11: Normal motions learned by BMI.", "description": "The figure shows the normal motions learned by the BMI method, including stride and back motions.", "section": "A.4.3 Visualization of Learned Policy"}, {"figure_path": "2410.01968/figures/figures_19_0.png", "caption": "Figure 10: Motion reconstruction performance.", "description": "The figure compares the motion reconstruction performance of FLD and SCAE on various motions.", "section": "5.1 Latent Dynamics Model Learning"}, {"figure_path": "2410.01968/figures/figures_19_1.png", "caption": "Figure 13: Unsatisfying motions learned by BMI.", "description": "The figure shows the robot's performance on spin-kick and cross-over motions, illustrating the challenges in learning highly dynamic movements while maintaining balance.", "section": "A.4.3 Visualization of Learned Policy"}]