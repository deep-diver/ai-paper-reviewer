[{"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/system_arch.png", "caption": "(a) Communication in the multi-agent system", "description": "This figure illustrates the communication pathways between the three main components of the multi-agent system: the Action Manager, the Health Manager, and the Memory Unit.  The Action Manager oversees the planning and execution of tasks, coordinating the interactions between different agents. The Health Manager focuses on managing health data, generating reports, and handling medication reminders.  The Memory Unit, crucial for personalized experiences, stores and retrieves both short-term (STM) and long-term (LTM) information.  Arrows depict the flow of information between these components, showing how data and instructions are passed and processed for the overall functioning of the healthcare assistant.", "section": "System Architecture"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/action_manager.png", "caption": "(b) Communication between the planner and caller in Action Manager", "description": "The figure illustrates the communication flow between the planner and caller agents within the Action Manager module. The planner agent, responsible for planning and generating action trajectories, sends the relevant information to the caller agent. The caller agent then executes the planned actions using various tools or APIs. This interaction is a key part of the multi-agent system's workflow, showcasing how these agents collaborate to achieve complex healthcare tasks.", "section": "System Architecture"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/app_diag.png", "caption": "Figure 1: Multi-Agent Design for Healthcare Assistant", "description": "This figure illustrates the multi-agent architecture of the healthcare assistant system.  It showcases the three main components: the Action Manager, the Health Manager, and the Memory Unit (both short-term and long-term).  The Action Manager coordinates the overall workflow by handling user prompts and managing agent interactions. The Health Manager houses several specialized agents for tasks such as health monitoring, medication reminders, and report generation.  The Memory Unit acts as the system's knowledge base, storing both short-term contextual information from ongoing interactions and long-term data such as patient history and preferences.  The figure also displays how these components communicate and interact to provide a comprehensive healthcare assistance experience.", "section": "System Architecture"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/datagen.png", "caption": "Figure 2: System flow diagram of the E2E application", "description": "This figure illustrates the three-tier architecture of the end-to-end (E2E) application.  The frontend (user interface) handles user interaction, sending requests to the backend for processing. The backend manages agent models, data storage (SQLite database), and interacts with external services like Twilio (for notifications) and potentially a smart-watch simulator. The data layer (SQLite database) stores user data, interaction history, and other relevant information.  The communication flow shows how user actions trigger processes at the backend, leading to responses generated by agent models and stored in the database. The system utilizes several components such as: Frontend (React.js based application), Backend (Django framework), SQLite database, Celery (for task queue management), Twilio (for SMS and notification), and Qwen-7b Coder Instruct model for the agent models.", "section": "Application Design"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/appointment_booking_new.png", "caption": "Figure 3: Data Creation Process", "description": "The figure illustrates the data creation pipeline employed in the paper.  It starts with collecting data, then standardizes the format for consistency across various use cases.  Data generation involves creating synthetic trajectories that mimic realistic user interactions. This is followed by data enhancement techniques, including transformations to improve data quality and prevent overfitting. The data is then thoroughly verified to ensure accuracy and completeness, with any necessary updates being made to the generation pipeline for iterative improvement.  Finally, data interleaving is performed to create separate datasets for the planner and caller agents, optimizing the training process of the models.", "section": "Data Creation"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/reminder-upload.png", "caption": "Figure 4: Appointment Booking", "description": "This figure demonstrates the appointment booking process within the multi-agent healthcare assistant.  It shows a multi-turn conversation between the user and the AI, where the user describes their symptoms (abdominal pain and nausea). The AI, through its planner and caller agents, interacts with the user, clarifying symptoms and suggesting a suitable specialist (Gastroenterologist) based on the user's availability. The system then confirms the appointment time and date.", "section": "5 Application Design"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/reminder-set.png", "caption": "(a) Medication Uploaded schedule Reminders", "description": "This figure shows the user interface of the application, specifically focusing on the \"Reminders\" section.  The image shows how uploaded medication schedules are processed and displayed as reminders in the application.  The left panel (a) shows how a prescription is uploaded, with the medication details extracted and automatically converted into reminders presented in a list-view in the right panel (b). The system uses the prescription data to create and schedule reminders for medication intake.", "section": "Application Design"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/soft-sos-triggered.png", "caption": "(b) Reminder Added", "description": "This figure shows the user interface after adding reminders from a prescription. The user has uploaded a prescription, and the system has automatically extracted relevant details such as medicine names, dosage timing, and frequency to create personalized reminders for the user. These reminders are displayed in a user-friendly format, making health management more convenient and efficient.", "section": "Application Design"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/reminder-set.png", "caption": "Figure 5: Adding Reminder from Prescription", "description": "This figure shows the process of adding medication reminders from a prescription.  Panel (a) displays the interface for uploading a prescription image.  Panel (b) shows the resulting added reminders in the application calendar, demonstrating how the system automatically extracts medication details from the uploaded prescription and creates reminders for the user.", "section": "5 Application Design"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/hard-sos.png", "caption": "(a) Soft SOS triggered due to abnormal vitals (simulated)", "description": "This figure demonstrates a soft SOS alert triggered by the system due to abnormal vital signs detected from a simulated smartwatch.  The abnormal vitals are displayed to the user.  This soft SOS is a non-emergency alert designed to inform the user of potential health issues and does not automatically trigger emergency services.", "section": "Application Design"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/sms.jpg", "caption": "(b) User\u2019s vitals analyzed", "description": "This figure shows a snapshot of the application's interface after the system has analyzed the user's vital signs.  The system continuously monitors vitals like heart rate, blood oxygen levels, etc. via a connected smartwatch or other device. If it detects irregularities, it triggers an alert. This display shows the processed vital sign data to the user and indicates whether an emergency response (SOS) was triggered. The system's health monitoring functionality aids users in proactive health management.", "section": "Soft SOS Triggered"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/planner_IB_xlam.png", "caption": "Figure 6: Soft SOS triggered and vitals analyzed", "description": "This figure shows a snapshot of the application's interface when a soft SOS is triggered due to abnormal vital signs. The left panel displays the user's vitals being monitored (heart rate, oxygen level, sleep stages etc.), showing values outside the normal range which triggers the soft SOS. The right panel shows a summary of the user's vitals data with anomalies clearly indicated.  The system doesn't automatically trigger emergency services, but alerts the user about the unusual readings, prompting them to take necessary actions such as seeking medical advice.", "section": "Application Design"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/planner_7B_xLAM.png", "caption": "(a) Hard SOS-Interface", "description": "The figure shows the user interface for triggering a Hard SOS (hard emergency).  It is part of a multi-agent healthcare assistant system designed for edge devices.  The interface likely allows the user to initiate an emergency alert that would automatically notify emergency services and relevant contacts, potentially including location data via GPS.", "section": "5 Application Design"}, {"figure_path": "https://arxiv.org/html/2503.05397/extracted/6259733/images/caller.png", "caption": "(b) Hard SOS-SMS", "description": "The figure shows a screenshot of an SMS message sent as part of the Hard SOS (Hard Software Override System) emergency response. The message is sent to the user's designated emergency contacts, providing vital information such as the user's name, location coordinates, and the urgent need for assistance.  This SMS is triggered when a user activates the Hard SOS feature in the application, indicating a critical emergency situation requiring immediate attention. The inclusion of GPS coordinates facilitates rapid response and location of the user by emergency services.", "section": "Application Design"}]