[{"figure_path": "https://arxiv.org/html/2412.01506/x2.png", "caption": "Figure 1: \nHigh-quality 3D assets generated by our method in various formats from text or image prompts (using GPT-4o and DALL-E 3). Our method enables versatile generation in about 10 seconds, offering vivid appearances with 3D Gaussians or Radiance Fields and detailed geometries with meshes. It also supports flexible 3D editing. Best viewed with zoom-in.", "description": "This figure showcases the high-quality 3D models generated using the novel method presented in the paper.  The models are created from both text and image prompts, utilizing the powerful language models GPT-4 and DALL-E 3.  The versatility of the approach is highlighted, demonstrating the generation of assets in various formats, including detailed meshes, and visually appealing representations using 3D Gaussians and Radiance Fields.  The speed of generation (around 10 seconds) is also emphasized, along with the capability for flexible post-generation editing of the 3D assets. ", "section": "Introduction"}, {"figure_path": "https://arxiv.org/html/2412.01506/x3.png", "caption": "Figure 2: Overview of our method. Encoding & Decoding: We adopt a structured latent representation (SLat) for 3D assets encoding, which defines local latents on a sparse 3D grid to represent both geometry and appearance information. It is encoded from the 3D assets by fusing and processing dense multiview visual features extracted from a DINOv2 encoder, and can be decoded into versatile output representations with different decoders. Generation: Two specialized rectified flow transformers are utilized to generate SLat, one for the sparse structure and the other for local latents attached to it.", "description": "This figure illustrates the overall architecture of the proposed 3D generation method.  The process begins with encoding, where a 3D asset is converted into a structured latent representation (SLAT).  SLAT uses a sparse 3D grid with local latents representing geometry and appearance details. Dense multiview visual features, extracted from a DINOv2 encoder, are fused into these local latents.  The SLAT is then decoded into various output formats (Radiance Fields, 3D Gaussians, and meshes) using specialized decoders.  The generation process itself uses two rectified flow transformers, one for generating the sparse structure of the SLAT and another for generating the local latents associated with the sparse structure.", "section": "3. Methodology"}, {"figure_path": "https://arxiv.org/html/2412.01506/x4.png", "caption": "(a)", "description": "The figure shows the overview of the proposed method for 3D asset generation. The method uses a structured latent representation (SLAT) that incorporates sparse 3D structures with dense multiview visual features to enable decoding to various output formats (e.g., radiance fields, 3D Gaussians, meshes). The generation process involves two stages: sparse structure generation and structured latents generation, both using rectified flow transformers. The SLAT enables flexible 3D editing capabilities.", "section": "3. Methodology"}, {"figure_path": "https://arxiv.org/html/2412.01506/x5.png", "caption": "(b)", "description": "The figure shows examples of region-specific editing using the proposed method.  It demonstrates the ability to make local changes to a 3D model, such as adding or removing features or replacing parts, while maintaining the overall coherence and quality of the model. The top row displays the original models, and the subsequent rows present the result of various modifications guided by text prompts, demonstrating the method's versatility and flexibility in 3D editing.", "section": "3.4. 3D Editing with Structured Latents"}, {"figure_path": "https://arxiv.org/html/2412.01506/x6.png", "caption": "(c)", "description": "This figure shows the network architectures for encoding, decoding, and generation.  (a) illustrates the sparse VAE encoder/decoder used for structured latent representation learning, employing a transformer architecture with 3D shifted window multi-head attention and feed-forward networks (FFNs) for processing sparse voxel features. (b) shows the rectified flow transformer (Gs) for sparse structure generation, which uses multi-head self-attention and cross-attention layers to process text or image conditions and generate a dense binary representation of the sparse structure. (c) displays the rectified flow transformer (GL) used for generating structured latents, again utilizing multi-head self-attention and cross-attention layers and incorporating sparse convolution downsampling/upsampling blocks to efficiently handle the sparse structure and generate high-resolution local latent vectors.", "section": "3. Methodology"}, {"figure_path": "https://arxiv.org/html/2412.01506/x13.png", "caption": "Figure 3: The network structures for encoding, decoding, and generation.", "description": "This figure details the network architectures used in the paper's proposed 3D generation method.  It shows three main network diagrams: (a) Sparse VAE Encoder/Decoder, which maps between 3D asset visual features and structured latent representations; (b) Structure Generation Flow Transformer, responsible for creating the sparse 3D structure of the latent representation; and (c) Sparse Flow Transformer, which generates the detailed latent values within the sparse structure, conditioned on text or image prompts. Each diagram illustrates the various layers and components including linear layers, Multi-Head Attention (MHA), Feed-Forward Networks (FFN), sparse convolutions, and positional embeddings.  The diagrams visually represent the flow of information through the networks during encoding, decoding, and generation processes.", "section": "3. Methodology"}, {"figure_path": "https://arxiv.org/html/2412.01506/extracted/6039215/figures/user_study_ui.png", "caption": "Figure 4: High-quality 3D assets created by our method, represented in Gaussians and meshes, given AI-generated text or image prompts.", "description": "This figure showcases the high-quality 3D models generated using the method described in the paper.  The models are rendered in two different formats: 3D Gaussians and meshes.  The input to the model was AI-generated text and image prompts, demonstrating the system's versatility and capability to produce detailed, realistic 3D assets from various input types.", "section": "4. Experiments"}, {"figure_path": "https://arxiv.org/html/2412.01506/x14.png", "caption": "Figure 5: Visual comparisons of generated 3D assets between our method and previous approaches, given AI-generated prompts.", "description": "Figure 5 presents a visual comparison of 3D models generated by different methods.  The models were generated from AI-generated text and image prompts. The figure allows for a direct visual assessment of the relative quality and detail of the 3D models produced by the proposed method compared to those produced by several existing state-of-the-art 3D generation methods.  Each row shows the same object generated by a different method, demonstrating the differences in realism, detail and overall quality of the generation.  This is valuable for quickly understanding the improvements achieved by the new method.", "section": "4.2 Generation Results"}, {"figure_path": "https://arxiv.org/html/2412.01506/x15.png", "caption": "Figure 6: User study for text/image-to-3D generation.", "description": "The figure shows the results of a user study comparing different text-to-3D and image-to-3D generation methods.  The study measured user preferences for the quality of generated 3D assets.  Participants were shown pairs of assets and asked to select the best one based on a given prompt (text or image). The results visually represent the percentage of times each method was selected as the best.", "section": "4. Experiments"}, {"figure_path": "https://arxiv.org/html/2412.01506/x16.png", "caption": "(a)", "description": "This figure shows the overall architecture of the proposed method, which uses a structured latent representation (SLAT) for 3D asset encoding and decoding. The encoding process involves converting the 3D asset into voxels, aggregating multiview features from a powerful vision foundation model, and encoding these features into structured latents using a sparse VAE. The decoding process involves using separate decoders to map the structured latents into different output formats (Radiance Fields, 3D Gaussians, and meshes). The generation process uses two rectified flow transformers: one for generating the sparse structure of the SLAT and another for generating the local latents, conditioned on text or image prompts.", "section": "3. Methodology"}, {"figure_path": "https://arxiv.org/html/2412.01506/x17.png", "caption": "(b)", "description": "The figure shows examples of tuning-free region-specific 3D editing using the method presented in the paper.  The editing is guided by text prompts.  The images illustrate how various modifications can be made to a 3D asset, such as removing, adding, or replacing parts of the asset.  The results show the model's ability to generate coherent local changes while maintaining the overall consistency of the model.", "section": "3.4. 3D Editing with Structured Latents"}, {"figure_path": "https://arxiv.org/html/2412.01506/x18.png", "caption": "Figure 7: Top: Given coarse structures, our method generates 3D asset variations coherent with the text prompts. Bottom: Tuning-free region-specific editing results of our method, guided by text or image prompts. More results in Fig.1 and Sec.\u00a0D.", "description": "This figure demonstrates two key capabilities of the proposed 3D generation method. The top row showcases the generation of multiple 3D asset variations from a single coarse structure, highlighting the method's ability to produce diverse outputs while maintaining coherence with textual descriptions.  Each variation uses the same basic 3D structure but differs in details guided by specific text prompts.  The bottom row shows examples of region-specific editing. This feature allows for non-destructive modifications to selected parts of a generated 3D object.  The user can specify changes through textual or image prompts, resulting in seamless integration of the edits into the original model.  Further examples of both asset variation and editing are available in Figure 1 and Section D of the paper.", "section": "3.4 3D Editing with Structured Latents"}, {"figure_path": "https://arxiv.org/html/2412.01506/x19.png", "caption": "Figure 8: Distribution of aesthetic scores in each dataset.", "description": "This figure displays the distribution of aesthetic scores for each dataset used in the training process.  The histograms illustrate the frequency of different aesthetic scores (presumably ranging from low to high), providing a visual representation of the overall quality distribution in each of the datasets: Objaverse-XL (from Sketchfab and Github), ABO, 3D-FUTURE, and HSSD. The x-axis represents the aesthetic score, and the y-axis represents the frequency or density of assets with that particular score.  The figure helps to show the relative quality of the different datasets and highlights the threshold used for data curation purposes (where aesthetic scores below a certain threshold were filtered out).", "section": "B. Data Preparation Details"}, {"figure_path": "https://arxiv.org/html/2412.01506/x20.png", "caption": "Figure 9: 3D asset examples from Objaverse-XL with their corresponding aesthetic scores.", "description": "Figure 9 shows examples of 3D assets from the Objaverse-XL dataset, a large-scale collection of 3D models. Each asset is accompanied by its aesthetic score, which is a numerical value representing how visually appealing the model is. This figure illustrates the quality of 3D assets in the Objaverse-XL dataset, showing various levels of aesthetic scores and the corresponding visual quality.  Higher aesthetic scores generally represent more visually appealing models.", "section": "B. Data Preparation Details"}, {"figure_path": "https://arxiv.org/html/2412.01506/x21.png", "caption": "Figure 10: An example of our captioning process.", "description": "This figure illustrates the two-stage captioning process used in the paper to generate high-quality text descriptions for 3D assets.  First, a detailed, raw caption is produced using GPT-40, providing a comprehensive description of the 3D object's features. This raw caption is then summarized by GPT-40 into a concise, refined caption of no more than 40 words, suitable for use as a prompt with a text-to-3D model.  The example shows the raw caption, followed by ten progressively shorter versions of the summary, demonstrating the refinement process from a highly detailed description to a short, impactful prompt.", "section": "B. Data Preparation Details"}, {"figure_path": "https://arxiv.org/html/2412.01506/x22.png", "caption": "Figure 11: User interface used in our user study.", "description": "This figure displays the user interface used in the user study.  Participants were shown side-by-side comparisons of 3D assets generated using different methods. Each trial presented a text prompt or reference image and several rotating videos of candidate 3D assets.  Users selected the asset that best matched the reference image.", "section": "C.2. User Study"}]