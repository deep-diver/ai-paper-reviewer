[{"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/teaser.jpg", "caption": "Figure 1. MTV-Inpaint is a unified video inpainting framework that supports multiple tasks, such as text/image-guided object insertion, scene completion, and derived applications like object editing and removal. It is also capable of handling long videos with hundreds of frames.", "description": "Figure 1 showcases the versatility of MTV-Inpaint, a novel video inpainting framework.  It demonstrates the framework's ability to perform multiple tasks, including text-guided and image-guided object insertion (adding new objects into a video), scene completion (filling in missing parts of a video), object editing (modifying existing objects), and object removal (removing unwanted objects).  The figure visually presents examples of each task, highlighting MTV-Inpaint's capacity to seamlessly handle these diverse operations within a single unified framework.  Furthermore, it illustrates the framework's capability to process and inpaint long videos composed of hundreds of frames, overcoming a limitation present in many existing video inpainting methods.", "section": "1 Introduction"}, {"figure_path": "https://arxiv.org/html/2503.11412/x1.png", "caption": "Figure 2. Our VideoPaint framework. During training, we train object insertion and scene completion tasks with dual-branch U-Net, using object-aware masks and random masks respectively. Concurrently, we employ three frame masking modes: text-to-video(T2V), image-to-video (I2V), and keyframe-to-video (K2V). During the inference, our method can perform basic T2V inpainting, or I2V inpainting, given that the first frame is obtained from 3rd party image inpainting tool. To handle longer video, we first use T2V/I2V mode to inpaint keyframes, then use K2V mode to inpaint remaining in-between frames.", "description": "This figure illustrates the MTV-Inpaint framework's training and inference stages.  During training, a dual-branch U-Net architecture is used to simultaneously handle object insertion (using object-aware masks) and scene completion (using random masks). Three different frame masking modes (T2V, I2V, and K2V) are employed concurrently for comprehensive training.  The inference stage allows for several operation modes. Basic text-to-video (T2V) inpainting or image-to-video (I2V) inpainting (using a third-party tool for the first frame) are options for shorter videos. For longer videos, a two-stage approach is used: keyframes are first inpainted using T2V or I2V, and then intermediate frames are inpainted using the keyframe-to-video (K2V) method. This ensures smooth temporal consistency across the entire video.", "section": "3 METHOD"}, {"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/obj_ins.jpg", "caption": "Figure 3. Quantitative comparison for object insertion evaluation. We recommend watching our supplementary video for dynamic results. Methods marked with an asterisk are not existing works but have been implemented by us.", "description": "Figure 3 presents a qualitative comparison of object insertion results from various methods, including the proposed MTV-Inpaint model and several baselines.  Each row shows results for a particular video inpainting task.  The input videos contain masked regions where objects need to be inserted. The methods are compared based on the quality and realism of the inserted objects.  The supplementary video provides a more dynamic view to fully appreciate the differences in performance.  The methods marked with an asterisk (*) were not existing published methods, but were implemented by the authors of the paper for comparative purposes.", "section": "4.2 Qualitative Results"}, {"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/scn_comp.jpg", "caption": "Figure 4. Quantitative comparison for scene completion evaluation. We recommend watching our supplementary video for dynamic results.", "description": "Figure 4 presents a qualitative comparison of various video inpainting methods on the scene completion task.  It showcases several examples of input videos with masked regions alongside the results produced by different methods, including the authors' MTV-Inpaint model, CoCoCo, E2FGVI, and ProPainter. The figure highlights the differences in visual quality, the ability to handle complex semantic content, and the overall visual fidelity achieved by each method.  To fully appreciate the temporal consistency and finer details, it is recommended to view the accompanying supplementary video.", "section": "4.2 Qualitative Results"}, {"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/user_study.jpg", "caption": "Figure 5. User study results of different methods on (a) object insertion task, and (b) scene completion task.", "description": "This figure presents the results of a user study comparing the performance of different video inpainting methods.  Specifically, it shows user preferences for various methods across two tasks: object insertion and scene completion.  Each bar chart represents the percentage of users who selected each method as superior based on criteria such as text alignment, temporal coherence, overall visual quality, and reconstruction accuracy. This provides a qualitative measure of each method's visual appeal and effectiveness in meeting user expectations, supplementing the quantitative results presented elsewhere in the paper.", "section": "4.4 User Study"}, {"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/long_example.jpg", "caption": "Figure 6. Visual examples from different long video generation strategies.", "description": "This figure showcases a comparison of four different strategies used in the paper for long video generation, applied to the task of video inpainting.  The strategies include: (1) Directly generating the entire video at once. (2) Generating multiple overlapping sub-clips and averaging the overlapped frames. (3) Recursively inpainting the video clips in an image-to-video mode, relying on the previous clip's last frame as conditioning. (4) The proposed method, a two-stage approach involving keyframe inpainting followed by intermediate frame inpainting.  Each strategy's results demonstrate how the inpainting quality and temporal coherence vary, highlighting the effectiveness of the proposed two-stage method for handling longer videos.", "section": "4.5.3 Long Video Strategy"}, {"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/dual.jpg", "caption": "Figure 7. Comparison of dual-branch and single-branch architectures for scene completion tasks. The dual-branch approach effectively separates scene completion from object insertion task. The single-branch model sometimes fails to distinguish between the two tasks, leading to undesired object insertion during scene completion (circled in red).", "description": "Figure 7 demonstrates the effectiveness of using a dual-branch architecture in the MTV-Inpaint model for video inpainting, specifically focusing on scene completion tasks.  The dual-branch design allows the model to distinctly handle scene completion and object insertion tasks, preventing confusion between the two.  In contrast, a single-branch architecture struggles with this differentiation, sometimes inappropriately inserting objects into scenes where only scene completion is needed.  The figure visually compares the results of both architectural approaches on several scene completion examples, highlighting the errors (circled in red) made by the single-branch model where objects are incorrectly inserted.", "section": "4.5 Ablation Study"}, {"figure_path": "https://arxiv.org/html/2503.11412/x2.png", "caption": "Figure 8. Illustration of different long video generation strategies.", "description": "Figure 8 compares four different approaches for generating long videos using the MTV-Inpaint model.  These approaches vary in how they handle the temporal aspect of the video generation: \n\n1. **Direct-gen:** This method directly inpaints all frames of the long video simultaneously.  This is the simplest approach but might be computationally expensive and may struggle to maintain temporal coherence across the entire video.\n2. **Multi-gen:** This approach divides the long video into overlapping sub-clips, processing them concurrently, and averaging the overlapping regions for a smoother transition.  This method aims to address the computational cost of Direct-gen and improve temporal consistency.\n3. **Recur-I2V:**  This iterative approach processes the long video in sequential, non-overlapping segments. Each segment's inpainting uses the output from the previous segment as a condition, building on prior results. This strategy potentially reduces computational needs and might maintain better consistency compared to Direct-gen but may lead to error accumulation across segments.\n4. **Keyframe + in-between:** This two-stage approach first inpaints keyframes (selected frames throughout the video) independently, then fills in the intermediate frames using information from the adjacent keyframes. It's designed to improve both efficiency and temporal coherence.", "section": "3.4 Inference-Time Long Video Inpainting"}, {"figure_path": "https://arxiv.org/html/2503.11412/x3.png", "caption": "Figure 9. Effect of different noising timestep \u03c4\ud835\udf0f\\tauitalic_\u03c4 on frame consistency, dashed lines represent mean values.", "description": "This figure shows the impact of different noise levels (controlled by the noising timestep \u03c4) on the temporal consistency of the video inpainting results.  The x-axis represents the normalized frame index within a video sequence, while the y-axis shows the frame consistency score.  Multiple lines represent results obtained with various noise levels. The dashed lines indicate the average consistency scores for each noise level. The graph helps to determine the optimal noising timestep that results in the highest temporal consistency during video inpainting.", "section": "4.5 Ablation Study"}, {"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/mm.jpg", "caption": "Figure 10. By integrating our method with existing image inpainting model, our framework allows multi-modal guided video inpainting", "description": "Figure 10 showcases the versatility of MTV-Inpaint by demonstrating its ability to integrate with various existing image inpainting models to achieve multi-modal video inpainting.  It displays examples of video inpainting guided by text, exemplar images, scribbles, and depth maps, highlighting how different input modalities can be used to control the inpainting process and achieve diverse results. This demonstrates the framework's flexibility and extensibility.", "section": "5 Other Applications"}, {"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/object_edit.jpg", "caption": "Figure 11. Object editing results. We recommend watching our supplementary video for dynamic results.", "description": "Figure 11 showcases the results of object editing using the MTV-Inpaint model.  The figure presents before-and-after examples of video clips where objects have been modified.  The edits appear to seamlessly integrate into the video's temporal flow, maintaining visual coherence.  Specific examples include altering the color of a cow, changing the appearance of a robot, modifying the color of a fox, and modifying the appearance of a rhino.  For a more comprehensive understanding of the results, the authors recommend viewing the supplementary video, which likely provides a dynamic demonstration of the changes.", "section": "5.2 Object Editing"}, {"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/object_removal.jpg", "caption": "Figure 12. Object removal results. We recommend watching our supplementary video for dynamic results.", "description": "Figure 12 shows example results of object removal from videos using the MTV-Inpaint model.  The input shows the original video with the object to be removed.  The output shows the resulting video after object removal, where the removed object's region has been seamlessly inpainted with contextually appropriate background content. The inpainting aims to maintain temporal consistency and visual coherence in the video. To fully appreciate the results, it is recommended to view the supplementary video provided by the authors, as it will better showcase the seamlessness and fluidity of the inpainted regions across the frames.", "section": "5.3 Object Removal"}, {"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/object_brush.jpg", "caption": "Figure 13. Image object brush: users can draw box trajectories to iteratively add objects into static image to make a dynamic video. We recommend watching our supplementary video for dynamic results.", "description": "Figure 13 demonstrates the \"Image Object Brush\" feature of the MTV-Inpaint model.  This feature allows users to interactively add animated objects into a static image to create a dynamic video sequence.  The user achieves this by drawing box trajectories on the image, specifying the object's path and duration.  The model then generates a video where the object smoothly moves along the specified trajectory.  The objects can be specified either via a text prompt describing the desired object or by providing a reference image. The figure shows an example demonstrating the iterative addition of multiple objects into a single static image to create a final dynamic video. For best viewing, please refer to the supplementary video.", "section": "5.4 Image Object Brush"}, {"figure_path": "https://arxiv.org/html/2503.11412/extracted/6280840/figs/limit.jpg", "caption": "Figure 14. Examples of failure cases. (a) Text-guided object insertion with a moving mask for a static object (vase) leads to unrealistic motion following the mask trajectory. (b) Image-guided object insertion using third-party image inpainting models may occasionally generate a first frame with incorrect object orientation, leading to unnatural motion, such as the lateral sliding of the car shown in the 2nd row. (c) Our object removal results will leave unrealistic residual shadows (highlighted in the red circles) when the mask fails to capture object\u2019s shadow regions. (d) Limited synthesis capabilities for complex motions (skateboarding tricks) due to base model constraints.", "description": "Figure 14 showcases instances where the MTV-Inpaint model struggles.  Panel (a) demonstrates that when a static object (a vase) is requested with a moving mask, the model incorrectly animates the object, following the mask's movement unrealistically. Panel (b) highlights issues with image-guided insertion; occasionally, the initial frame generated by a third-party inpainting model has an incorrect object orientation, resulting in unnatural movement (as seen with the sideways-sliding car).  Panel (c) shows that, during object removal, incomplete masks (failing to encompass the object's shadow) result in residual shadows. Finally, panel (d) reveals the limitations of the underlying model, illustrating difficulty in synthesizing complex motions like skateboarding tricks.", "section": "6 LIMITATION AND DISCUSSION"}]