[{"content": "| Model | Expert Retrieval (Time Complexity) | Expert Parameters (Space Complexity) |\n|---|---|---|\n| SMoE | O(Nd) | O(Nmd) |\n| PEER | O((\n\u221aN+k<sup>2</sup>)Hd) | O(Nd) |\n| Monet | O(\n\u221aNHd) | O(\n\u221aNmd) |", "caption": "Table 1: \n\nComparison of computational cost and memory footprint involved in Mixture-of-Experts architectures. Derivations are specified in A.2.", "description": "This table compares the computational cost (time complexity) and memory usage (space complexity) of three different Mixture-of-Experts (MoE) architectures: SMOE, PEER, and MONET.  It shows how these costs scale with the number of experts (N) and other parameters (d, k, H, m).  The time complexity refers to the time taken for expert retrieval, while space complexity indicates the memory required for storing expert parameters.  Detailed derivations of these complexities are provided in section A.2 of the paper.", "section": "2 PRELIMINARIES"}, {"content": "| Model | Tokens | MMLU | ARC | WG | PIQA | SIQA | OBQA | HS | CSQA | Avg |\n|---|---|---|---|---|---|---|---|---|---|---|\n| **0-shot** |  |  |  |  |  |  |  |  |  |  |\n| LLaMA 770M | 100B | **0.340** | **0.468** | 0.524 | 0.706 | **0.431** | **0.386** | **0.507** | 0.342 | **0.463** |\n| Monet-HD 850M | 100B | 0.320 | 0.460 | 0.506 | 0.699 | 0.416 | 0.364 | 0.465 | 0.337 | 0.446 |\n| Monet-VD 850M | 100B | 0.328 | 0.456 | **0.530** | **0.708** | 0.417 | 0.356 | 0.488 | **0.343** | 0.453 |\n| LLaMA 1.3B | 100B | **0.357** | **0.503** | **0.545** | **0.730** | **0.423** | 0.392 | **0.553** | **0.370** | **0.484** |\n| Monet-HD 1.4B | 100B | 0.338 | 0.471 | 0.538 | 0.714 | 0.418 | 0.382 | 0.501 | 0.339 | 0.463 |\n| Monet-VD 1.4B | 100B | 0.352 | 0.495 | 0.522 | 0.727 | **0.423** | **0.418** | 0.529 | 0.363 | 0.478 |\n| LLaMA 3.8B | 100B | **0.394** | **0.578** | **0.571** | **0.760** | 0.426 | 0.412 | **0.618** | **0.404** | **0.520** |\n| Monet-HD 4.1B | 100B | 0.375 | 0.558 | 0.560 | 0.741 | 0.427 | 0.414 | 0.571 | 0.379 | 0.503 |\n| Monet-VD 4.1B | 100B | 0.380 | 0.547 | 0.557 | 0.751 | **0.437** | **0.424** | 0.604 | 0.389 | 0.511 |\n| **5-shot** |  |  |  |  |  |  |  |  |  |  |\n| LLaMA 770M | 100B | **0.350** | **0.554** | 0.509 | **0.713** | **0.439** | **0.386** | **0.523** | **0.459** | **0.492** |\n| Monet-HD 850M | 100B | 0.332 | 0.537 | 0.510 | 0.697 | 0.409 | 0.346 | 0.479 | 0.420 | 0.466 |\n| Monet-VD 850M | 100B | 0.341 | 0.548 | **0.520** | 0.709 | 0.437 | 0.368 | 0.504 | 0.454 | 0.485 |\n| LLaMA 1.3B | 100B | **0.368** | **0.577** | 0.515 | **0.731** | **0.458** | **0.422** | **0.565** | **0.511** | **0.518** |\n| Monet-HD 1.4B | 100B | 0.352 | 0.544 | **0.530** | 0.720 | 0.432 | 0.360 | 0.518 | 0.441 | 0.487 |\n| Monet-VD 1.4B | 100B | 0.360 | 0.547 | 0.526 | 0.730 | 0.441 | **0.422** | 0.551 | 0.501 | 0.510 |\n| LLaMA 3.8B | 100B | **0.408** | **0.635** | **0.578** | **0.771** | **0.472** | **0.452** | **0.645** | **0.574** | **0.567** |\n| Monet-HD 4.1B | 100B | 0.385 | 0.603 | 0.545 | 0.742 | 0.463 | 0.412 | 0.588 | 0.545 | 0.535 |\n| Monet-VD 4.1B | 100B | 0.398 | 0.625 | 0.564 | 0.761 | 0.470 | 0.438 | 0.619 | 0.525 | 0.550 |\n| **Off-the-shelf Models (0-shot)** |  |  |  |  |  |  |  |  |  |  |\n| OLMoE 6.9B | 100B | 0.349 | 0.521 | 0.551 | 0.754 | 0.432 | 0.384 | 0.620 | 0.402 | 0.502 |\n|  | 5000B | 0.429 | 0.625 | **0.631** | **0.804** | **0.445** | **0.444** | **0.747** | 0.446 | **0.571** |\n| Gemma 2 2B | 2000B | **0.432** | **0.651** | 0.630 | 0.792 | 0.443 | 0.428 | 0.709 | **0.482** | **0.571** |\n| + SAE 65K MLP (8B) |  | 0.325 | 0.473 | 0.562 | 0.723 | 0.436 | 0.326 | 0.537 | 0.401 | 0.473 |\n| + SAE 65K Res (8B) |  | 0.254 | 0.259 | 0.494 | 0.506 | 0.387 | 0.294 | 0.259 | 0.239 | 0.337 |", "caption": "Table 2: Evaluation of models on open-ended LLM benchmarks in 0-shot and 5-shot settings. Our proposed Monet (horizontal and vertical decompositions) and the LLaMA architecture results are based on consistent pretraining hyperparameters for a fair comparison. Benchmarks include WG (WinoGrande), OBQA (OpenBookQA), HS (HellaSwag), and CSQA (CommonsenseQA). Off-the-shelf pretrained\nOLMoE and\nGemma 2 with\nGemma Scopes\nare evaluated for comparison. Tokens column indicates pretraining tokens count in billions, where numbers in the parenthesis are post-hoc training tokens used for SAEs. Comparisons account for total parameter sizes across models.", "description": "This table presents the performance of various large language models (LLMs) on several open-ended question answering benchmarks.  The models are evaluated under both zero-shot (0-shot) and five-shot (5-shot) settings.  Zero-shot means the model is given the question without any context examples, while five-shot means the model receives five context examples before being asked the question.  The models compared include the authors' proposed MONET architecture (with both horizontal and vertical decompositions), the LLaMA architecture, and existing models like OLMoE and Gemma 2 (using Gemma Scopes). For fair comparison, all MONET and LLaMA models were trained using consistent pre-training hyperparameters. The table shows the performance scores for each model on several benchmarks, namely WinoGrande (WG), OpenBookQA (OBQA), HellaSwag (HS), and CommonsenseQA (CSQA).  The \"Tokens\" column indicates the number of tokens used in the pre-training phase (in billions); numbers in parentheses denote the number of tokens used for post-hoc training of Sparse Autoencoders (SAEs), where applicable.  The comparison of models takes into account their total parameter size for a fair evaluation.", "section": "4.2 OPEN-ENDED BENCHMARK RESULTS"}, {"content": "| Formula | Description |\n|---|---| \n| **O (81.37%)** | (...)loric acid (HClO) and soil samples were (...) |\n| **F (64.78%)** | (...) the red algae then Formula F2 resulting in greater nut (...) |\n| (64.13%) | (...) . SO  2 and SO  3 are harmful and (...) |\n| (63.46%) | (...) forming salt  2CaSO 4 +Na 2 [ (...) |\n| **F (61.88%)** | (...) ical value and benefits than Formula F1 and Formula F2 (...) |\n| **SO (61.04%)** | (...) , NO, NO 2 , SO 2 , and H 2 (...) |\n| **l (60.55%)** | (...) etrachloride (CCl 4 )-induced li (...) |\n| **R (59.71%)** | (...) the formulas, R3 and R4 each represent an organ (...) |\n| **T (58.22%)** | (...) xine, T3 and T4, are h (...) |\n| **Na (56.75%)** | (...) illation.Na 2 [Na 4 [Ca 2 ( (...) |", "caption": "Table 3: Knowledge unlearning and pass@100 metric changes across programming languages in the MULTIPL-E benchmark. In this evaluation, experts assigned to the target language are deleted, while others are preserved. Columns represent the independent variable where the masking is applied on. The \u0394\u0394\\Deltaroman_\u0394 Target row represent the delta in pass@100 performance of the Monet model following expert removal for the specified language. The \u0394\u0394\\Deltaroman_\u0394 Others row shows the average pass@100 performance change of the others. Dark pixels indicate high sensitivity to the expert purging.", "description": "This table presents the results of an experiment evaluating the impact of removing experts associated with specific programming languages on the performance of the Monet model.  The Monet model is a large language model designed for code generation. The MULTIPL-E benchmark was used to assess the model's performance after removing the experts. The table shows the change in pass@100 (the percentage of test cases where the model correctly generated code) for each programming language (both the target language where experts were removed and other languages).  The '\u0394 Target' row indicates the performance drop for the specific language whose experts were removed.  The '\u0394 Others' row shows the average performance change in other languages. Darker shading indicates a more substantial drop in performance, signifying higher sensitivity to the removal of experts in that particular language.", "section": "5.2 Multilingual Masking"}, {"content": "| Location | Percentage |\n|---|---| \n| ota (81.43%) | (\u2026) Colorado, southern South Dakota and western Iowa. (\u2026) |\n| Va (80.05%) | (\u2026) FORT LEE, Va. (July (\u2026) |\n| owa (79.38%) | (\u2026) Ernst, R-Iowa, said the federal (\u2026) |\n| Va (78.70%) | (\u2026)  Walops Island, Va., is brac (\u2026) |\n| Va (78.57%) | (\u2026) RICHMOND, Va. - The cl (\u2026) |\n| Virginia (78.01%) | (\u2026) Road, Springfield , Virginia  221 (\u2026) |\n| York (77.31%) | (\u2026) , New Jersey, New York, Oregon, Texas (\u2026) |\n| Nev (76.73%) | (\u2026) AS VEGAS, Nev.ada, April (\u2026) |\n| O (76.52%) | (\u2026)  VER, COLORADO. THE PART (\u2026) |\n| Mexico (75.85%) | (\u2026) The Santa Fe, New Mexico-based company is (\u2026) |", "caption": "Table 4: Changes in RealToxicityPrompts toxicity metrics according to the expert purging. Lower threshold indicate stricter criteria to filter out more experts. Each columns indicate masking threshold, expert masking ratio, toxicity probability, and average performance (helpfulness) measured in 8 open-ended LLM benchmarks. Specifics of the helpfulness can be found in Appendix\u00a0E.", "description": "This table presents the results of an experiment evaluating the impact of removing toxic experts from a large language model (LLM) on its toxicity and overall performance.  The experiment used different thresholds to determine how many experts to remove, resulting in varying levels of expert removal (masking ratio). The table shows the effect on the maximum toxicity score (the highest toxicity score observed across all generated responses), the probability of a toxic response (the proportion of responses exceeding a toxicity threshold of 0.5), and the average performance across eight open-ended LLM benchmarks (helpfulness).  A lower threshold for expert removal leads to a stricter filtering process, resulting in fewer experts and a lower toxicity probability, but also potentially impacting helpfulness. Appendix E contains more details about how the helpfulness scores were calculated across the benchmark tasks.", "section": "5.3 Toxic Expert Purging"}, {"content": "| Water (%) | Description |\n|---|---| \n| **Water (48.20%)** | (\u2026)  The San Diego County Water Authority on Wed (\u2026) |\n| **Water (45.41%)** | (\u2026) The San Diego County Water Authority, supp (\u2026) |\n| **Bay (43.95%)** | (\u2026) of quality out of the Bay area is a positive (\u2026) |\n| **Water (40.38%)** | (\u2026) County of El Paso Water and other community st (\u2026) |\n| **Water (40.33%)** | (\u2026) U and the South Florida Water Management District (\u2026) |\n| **Water (39.20%)** | (\u2026) constructed by the South Florida Water Management (\u2026) |\n| **Bay (38.34%)** | (\u2026) included local innovators from Bay Area Indust (\u2026) |\n| **Water (38.17%)** | (\u2026) supply by the Portland Water Bureau, the park (\u2026) |\n| **Water (37.94%)** | (\u2026) FIU), South Florida Water Management District, and (\u2026) |\n| **Bay (37.87%)** | (\u2026) and culture here in the Bay Area all month! (\u2026) |", "caption": "Table 5: ToxiGen metrics according to the expert purging. Lower threshold indicate stricter criteria to filter out more experts. Average performance (helpfulness) is measured in 8 open-ended LLM tasks. Specifics of the helpfulness can be found in Appendix\u00a0E.", "description": "This table presents the results of experiments evaluating the impact of removing toxic experts from a large language model (LLM) using the ToxiGen dataset.  The experiments varied a threshold for identifying and removing these experts; a lower threshold leads to more experts being removed, resulting in a stricter filtering process. The table shows the ratio of experts removed, the resulting maximum toxicity scores (measured by the ToXiGen RoBERTa model) and the probability of generating toxic responses.  Finally, the table also reports the average performance (helpfulness) of the LLM across eight open-ended benchmark tasks after applying each level of expert purging.  A more detailed breakdown of these helpfulness metrics can be found in Appendix E. ", "section": "5.3 Toxic Expert Purging"}, {"content": "| **Bay (64.28%)** | (...) of the technical application of Bayesian. Downloadable (...) | \n| **Bay (58.58%)** | (...) algorithm that, using a Bayesian approach, a (...) | \n| **Bay (58.24%)** | (...) ics, counting rules, Bayes Theorem, distribution (...) | \n| **Bay (56.43%)** | (...) together. We develop a Bayesian hierarchical (...) | \n| **Bay (54.03%)** | (...) , order statistics, and Bayesian statistics. Pr (...) | \n| **Bay (53.39%)** | (...) irable. What in a Bayesian approach is referred (...) | \n| **bay (52.46%)** | (...) est neighbour, naive bayes, decision trees (...) | \n| **Bay (50.24%)** | (...) arns, R. Bayesian, relational (...) | \n| **Bay (47.21%)** | (...) exchange rates with a large Bayesian VAR ( (...) | \n| **Bay (47.12%)** | (...) division of statistical inference along Bayesian-frequent (...) | ", "caption": "Table 6: Model sizes, layer configurations, and expert architecture details. The number of parameters includes both model and expert layers, with each model variant differing in its dimensionality, attention heads, and expert configurations.", "description": "This table details the architecture of three different MONET models (850M, 1.4B, and 4.1B parameters), comparing their size, depth, width, attention heads, expert dimensions, expert heads, and total number of experts.  It highlights how these architectural choices impact the overall parameter count and illustrate variations in model configurations across different scales.", "section": "4.1 Model Setups"}, {"content": "| Term | Description |\n|---|---| \n| **well (95.27%)** | (\u2026) article calls the \u201dMax<span style=\"background-color:#95EF95;\">well</span><span style=\"background-color:#C4F6C4;\">\u2013</span>Farad (\u2026) |\n| **stein (93.59%)** | (\u2026) omena. <span style=\"background-color:#97EF97;\">stein</span> noticed that the two (\u2026) |\n| **well (91.79%)** | (\u2026) of equations known as <span style=\"background-color:#E6FBE6;\">Max</span><span style=\"background-color:#99EF99;\">well</span>\u2019<span style=\"background-color:#9CF09C;\">s</span> equations. (\u2026) |\n| **stein (91.79%)** | (\u2026) 9. \u2191 <span style=\"background-color:#99EF99;\">stein</span>, A. (\u2026) |\n| **well (89.39%)** | (\u2026) s version (see <span style=\"background-color:#9CF09C;\">well</span><span style=\"background-color:#C7F6C7;\">\u2013</span>Farad (\u2026) |\n| **s (89.17%)** | (\u2026) known as <span style=\"background-color:#E6FBE6;\">Max</span><span style=\"background-color:#99EF99;\">well</span>\u2019<span style=\"background-color:#9CF09C;\">s</span> equations.<span style=\"background-color:#FFFFFF;\">\n</span>In (\u2026) |\n| **well (88.34%)** | (\u2026) one of the four <span style=\"background-color:#F1FDF1;\">Max</span><span style=\"background-color:#9DF09D;\">well</span>\u2019<span style=\"background-color:#B4F3B4;\">s</span> equations, (\u2026) |\n| **well (87.54%)** | (\u2026) differential form of the <span style=\"background-color:#9EF09E;\">well</span><span style=\"background-color:#BDF5BD;\">\u2013</span>Farad (\u2026) |\n| **stein (76.97%)** | (\u2026) <span style=\"background-color:#9CF09C;\">quantum</span> mechanics). <span style=\"background-color:#AAF2AA;\">stein</span> is best known in (\u2026) |", "caption": "Table 7: Ablation results showing the impact of varying auxiliary loss weights.", "description": "This table presents the ablation study results on the impact of varying auxiliary loss weights on the model's performance.  Auxiliary losses, specifically uniformity and ambiguity, were used to encourage balanced expert usage and distinct expert specialization, respectively. The table shows the 5-shot average performance across various benchmarks for different values of the auxiliary loss weights (lambda), illustrating how changes to these weights affect the model's ability to balance expert usage and maintain distinct expert roles.", "section": "C Ablation Studies"}, {"content": "| Token | Percentage | Snippet |\n|---|---|---|\n| **Z (36.12%)** |  | (...) [-a-zA-Z]+\\s+(\\(...) |\n| **Z (35.22%)** |  | (...) \u2019[^a-zA-Z0-9._] (...) |\n| **String (32.52%)** |  | (...) ::GetFilterByName(String(sFilterName)); (...) |\n| **String (27.79%)** |  | (...) aMsg += ByteString( String(sAllFilterName (...) |\n| **0 (26.54%)** |  | (...)  String regex = \u201d[^0-9]*[q (...) |\n| **&amp; (26.22%)** |  | (...) XElementAnalogClock&amp;)info).m_ (...) |\n| **Pair (26.19%)** |  | (...)   Sequence&lt; StringPair &gt; aFilters(...) |\n| **z (25.02%)** |  | (...) [-a-zA-Z0-9_\\ (...) |\n| **Z (24.88%)** |  | (...) )?[a-zA-Z]?(\n (...) |", "caption": "Table 8: Impact of different routing group sizes.", "description": "This table presents the results of an ablation study on the effect of varying the number of expert routing groups in the MONET architecture.  It shows how different group sizes impact the model's performance (measured by average 5-shot accuracy across various benchmarks), the total number of parameters, and the floating point operations (FLOPs) required for forward computation.  The purpose is to evaluate the trade-off between computational efficiency and model performance when adjusting the granularity of expert routing.", "section": "C Ablation Studies"}, {"content": "| age (%) | Description |\n|---|---| \n| **age (104.00%)** | (...) fttening of articular cartilage; frequently old wrongly (...) |\n| **age (100.48%)** | (...) matrix. The articular cartilage function is dependent (...) |\n| **age (100.07%)** | (...) important part of rebuilding cartilage and connective (...) |\n| **age (97.20%)** | (...) compression of the articular cartilage or flexion of (...) |\n| **age (97.13%)** | (...) one, called articular cartilage, becomes damaged and (...) |\n| **age (89.52%)** | (...) ritional building blocks of cartilage to help maintain (...) |\n| **age (88.07%)** | (...) connective tissues, cartilage has a very slow turnover (...) |\n| **age (87.32%)** | (...) ous ossification of cartilage tissue of the epi (...) |", "caption": "Table 9: Number of experts masked as domain-specialized experts in Monet-1.4B. The table reports the number of experts assigned to each domain across all routing groups. Each group corresponds to one of the 6 routing groups, and the total number of experts per domain is provided.", "description": "This table shows the number of experts in the MONET-1.4B model that are specialized in each of 14 different domains within the MMLU benchmark.  The model's architecture uses multiple routing groups to distribute processing across experts. This table breaks down the expert counts for each domain across each of the 6 routing groups, and then shows the total number of experts assigned to each domain across all groups. This provides insight into how the model's knowledge is distributed and specialized within its expert network.", "section": "C Ablation Studies"}, {"content": "| **pert (35.02%)** | (\u2026) by natural causes. \u2013 Expertise: A dedicated and intern (\u2026) | \n| **ist (27.90%)** | (\u2026) Scientist reported that elogo (\u2026) | \n| **scholar (26.68%)** | (\u2026) for his historical scholarship, including recognition (\u2026) | \n| **pert (26.32%)** | (\u2026) , Los Angeles. \u2013 Expertise: One of the for (\u2026) | \n| **pert (26.27%)** | (\u2026) Baghdad. \u2013 Expertise: Head of US In (\u2026) | \n| **pert (24.55%)** | (\u2026) in two weeks. \u2013 Expertise: Head of the science (\u2026) | \n| **pert (24.04%)** | (\u2026) ushlinski. \u2013 Expertise: Two microbiolog (\u2026) | \n| **pert (23.28%)** | (\u2026) holiday home. \u2013 Expertise: Iraqi nuclear scient (\u2026) | \n| **pert (23.12%)** | (\u2026) yet been determined. \u2013 Expertise: Biological warfare (\u2026) | ", "caption": "Table 10: Number of experts masked as language-specialized experts in CodeMonet-1.4B. The table reports the number of experts assigned to each programming language across all routing groups.", "description": "This table shows the number of experts in the CodeMonet-1.4B model that are specialized in each of six programming languages.  The model uses a Mixture of Experts (MoE) architecture, meaning it has many different expert networks, each specializing in a different area.  This table breaks down how many experts are dedicated to each programming language, across all the different \"routing groups\" (the mechanism that decides which experts are used for each task).  A higher number indicates a greater specialization of experts in that particular language within the CodeMonet-1.4B model.", "section": "D.2 Multilingual Masking"}, {"content": "| Language | Python | C++ | Java | JavaScript | Lua | PHP |\n|---|---|---|---|---|---|---|\n| **Python** | -30.6 | -3.5 | -5.3 | -0.2 | -1.1 | -3.0 |\n| **C++** | -0.9 | -15.2 | -0.4 | -0.6 | -0.2 | -0.3 |\n| **Java** | +0.6 | -2.0 | -20.4 | -1.9 | +1.7 | -0.4 |\n| **JavaScript** | -1.6 | -0.9 | -2.6 | -9.1 | -1.1 | +0.5 |\n| **Lua** | -2.9 | -0.7 | -0.7 | -1.4 | -15.7 | -2.0 |\n| **PHP** | -0.8 | -2.1 | +0.2 | -3.1 | -2.5 | -26.6 |\n| **\u0394 Target** | -30.6 | -15.2 | -20.4 | -9.1 | -15.7 | -26.6 |\n| **\u0394 Others** | -1.1 | -1.8 | -1.8 | -1.4 | -0.6 | -1.1 |", "caption": "Table 11: General performance of Monet on MMLU domains after masking specialized experts. Columns represent the categories of masked experts, while rows display the MMLU performance for each domain following the removal the corresponding experts. The column \u201cNone\u201d contains the original performance of the Monet without any experts removed. The row labeled \u201c\u0394\u0394\\Deltaroman_\u0394\u00a0Target\u201d indicates the accuracy change in the target domain due to unlearning, while the row labeled \u201c\u0394\u0394\\Deltaroman_\u0394\u00a0Others\u201d reflects the average performance change across all other domains.", "description": "This table presents the results of an experiment designed to evaluate the impact of removing specific groups of experts from the MONET model on its performance across various domains of the MMLU benchmark.  Each row represents a domain in the MMLU benchmark (e.g., Biology, Business, Chemistry, etc.). Each column represents a category of experts that have been removed from the model (e.g., experts specializing in Biology, Business, etc.), with a final column displaying the original model performance with no experts removed. The values within the table show the performance (accuracy) of the MONET model on the given MMLU domain after removing the specified experts. The '\u0394\u0394\nTarget' row shows the change in accuracy for the target domain (the domain listed in the row) due to expert removal. The '\u0394\u0394\nOthers' row shows the average change in accuracy across all other domains not listed in the row. This allows for an assessment of how removing a specific type of expert affects performance on a particular domain, as well as its impact on overall performance.", "section": "5 ANALYSES"}, {"content": "| Masking Threshold | Masking Ratio | Exp. Max. Toxicity \u2193 |  | Toxicity Prob. \u2193 |  | Avg. Performance \u2191 (Helpfulness) |\n|---|---|---|---|---|---|---|\n| \u2013 | \u2013 | 0.795 | 0.269 | 0.926 | 0.08 | **0.478** |\n| 0.2 | 1.0% | 0.767 | 0.268 | 0.909 | 0.07 | **0.479** |\n| 0.1 | 4.1% | 0.657 | 0.270 | 0.768 | 0.08 | **0.478** |\n| 0.05 | 14.4% | **0.552** | **0.256** | **0.564** | **0.05** | 0.467 |", "caption": "Table 12: General performance of pretrained Gemma 2 on MMLU domains after suppressing features of Gemma Scope SAE. Columns indicate categories of the suppressed features, and rows display domain-specific MMLU performance. Please zoom in for detailed results.", "description": "This table presents the performance of the pretrained Gemma 2 language model on the MMLU benchmark after selectively removing features learned by Gemma Scope Sparse Autoencoders (SAEs).  Each column represents a category of SAE features that were suppressed before the evaluation, and each row displays the resulting performance on a specific domain within the MMLU benchmark.  Due to the high granularity of the data, zooming in on the table is necessary for full comprehension of the results.  The table shows the impact of removing specific knowledge from different domains on the model's overall performance across various domains.", "section": "5 ANALYSES"}, {"content": "| Masking | Masking | RoBERTa Score \u2193 | Avg. Performance \u2191 | \n|---|---|---|---|---|\n| Threshold | Ratio | Hate | Neutral | (Helpfulness) |\n| \u2013 | \u2013 | 0.642 | 0.035 | **0.478** |\n| 0.2 | 1.4% | 0.643 | 0.033 | **0.478** |\n| 0.1 | 5.4% | 0.504 | 0.028 | 0.473 |\n| 0.05 | 15.0% | **0.430** | **0.027** | 0.455 |", "caption": "Table 13: General performance of OLMoE after masking specialized experts. Columns represent the categories of masked experts, while rows display the MMLU performance for each domain following the removal the corresponding experts. Please zoom in for detailed results.", "description": "This table presents the results of an experiment evaluating the impact of removing specific knowledge from the OLMoE language model.  Each column represents a domain or category of knowledge that was selectively removed (masked) from the model. Each row represents a specific domain within the MMLU (Massive Multitask Language Understanding) benchmark. The table shows the model's performance on each MMLU domain *after* the specified category of knowledge was removed. The 'None' column shows the baseline performance before any knowledge was removed.  The 'Target' row shows the change in performance for the specific domain that had its knowledge removed, while the 'Others' row shows the average performance change across all other domains.  The numbers in the table represent the performance scores, enabling a comparison of model performance before and after selective knowledge removal.", "section": "5 ANALYSES"}, {"content": "| Params | Layers | Model Dim | Attn Heads | Expert Dim | Expert Heads | Num. Experts |\n|---|---|---|---|---|---|---|\n| 850M | 24 | 1536 | 12 | 12 | 6 | 262,144 |\n| 1.4B | 24 | 2048 | 16 | 16 | 8 | 262,144 |\n| 4.1B | 32 | 3072 | 24 | 24 | 12 | 262,144 |", "caption": "Table 14: General performance of LLaMA after suppressing logits in MLPs. Columns indicate categories of the suppressed features, and rows display domain-specific MMLU performance. Please zoom in for detailed results.", "description": "This table presents the performance of a Large Language Model (LLM) called LLaMA after selectively removing information from its internal processing layers, specifically focusing on Multilayer Perceptrons (MLPs). The table is organized with rows representing different domains of knowledge (as measured by the MMLU benchmark) and columns showing the impact of suppressing information from particular categories of MLPs. Each cell in the table shows the LLM's performance on a specific domain after removing information from a category of MLPs. This allows for analysis of how the LLM's knowledge is affected by the removal of various feature types.  Due to the complexity of the data, zooming in is recommended for a better understanding of the detailed results.", "section": "Analyses"}, {"content": "| \u03bb | Uniformity \u2193 | Ambiguity \u2193 | Avg. (5-shot) |\n|---|---|---|---| \n| \u2013 | 6.433 | 0.611 | 0.505 |\n| 2 \u00d7 10\u207b\u2074 | 6.347 | 0.584 | 0.505 |\n| 1 \u00d7 10\u207b\u00b3 | 6.280 | 0.497 | 0.510 |\n| 5 \u00d7 10\u207b\u00b3 | 6.262 | 0.260 | 0.502 |", "caption": "Table 15: CodeMonet\u2019s pass@100 performance on MULTIPL-E benchmark across programming languages after purging experts specialized in each language. The column \u201cNone\u201d stands for the original performance of CodeMonet according to each language.", "description": "This table presents the performance of the CodeMonet model on the MULTIPL-E benchmark, a coding task evaluation dataset, across six different programming languages.  The 'pass@100' metric indicates the percentage of test cases successfully solved by the model.  The experiment involved selectively removing ('purging') experts in the model that specialized in each programming language. The purpose was to assess the impact of this selective removal of knowledge (unlearning) on the model's performance. The \"None\" column shows CodeMonet's original performance on the benchmark without any expert removal.", "section": "4.2 OPEN-ENDED BENCHMARK RESULTS"}, {"content": "| Group Size | Params | FLOPs | Avg. (5-shot) |\n|---|---|---|---| \n| \u2013 | 1.345B | 6225.52T | 0.518 |\n| 4 | 1.465B | 6745.30T | 0.510 |\n| 1 | 1.767B | 8017.81T | 0.511 |", "caption": "Table 16: Model performance on RealToxicityPrompts and ToxiGen with varying correlation thresholds, evaluated under zero-shot settings.", "description": "This table presents the results of evaluating the MONET model's performance on two benchmark datasets for toxicity detection: RealToxicityPrompts and ToxiGen.  The evaluation is performed under zero-shot conditions, meaning the model receives no prior training on these specific datasets.  The table shows how the model's performance (measured across several metrics like MMLU, ARC, WG, PIQA, SIQA, OBQA, HS, and CSQA) varies depending on different thresholds for identifying and removing toxic experts.  The thresholds are determined by calculating Pearson correlations between expert activation patterns and toxicity scores. Lower thresholds indicate a stricter criterion for removing experts, resulting in a potentially more safe but less performant model.", "section": "5 ANALYSES"}]